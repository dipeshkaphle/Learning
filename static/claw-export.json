[{"short_id":"u7y4lk","title":"'Modules Matter' Most for the Masses","url":"https://www.pathsensitive.com/2023/03/modules-matter-most-for-masses.html","created_at":"2023-03-30T20:07:12.000-05:00","comment_count":23,"comments_url":"https://lobste.rs/s/u7y4lk/modules_matter_most_for_masses","submitter_name":"jkoppel","submitter_avatar_url":"/avatars/jkoppel-100.png","tags":["ml","plt","programming"],"description":""},{"short_id":"cbbv9z","title":"Let's write a setjmp","url":"https://nullprogram.com/blog/2023/02/12/","created_at":"2023-02-12T01:54:16.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/cbbv9z/let_s_write_setjmp","submitter_name":"jmillikin","submitter_avatar_url":"/avatars/jmillikin-100.png","tags":["assembly","c"],"description":""},{"short_id":"cd8mty","title":"More use of Rust is inevitable in open source software","url":"https://utcc.utoronto.ca/~cks/space/blog/programming/RustIsInevitable","created_at":"2022-12-27T04:36:22.000-06:00","comment_count":44,"comments_url":"https://lobste.rs/s/cd8mty/more_use_rust_is_inevitable_open_source","submitter_name":"Vaelatern","submitter_avatar_url":"/avatars/Vaelatern-100.png","tags":["rust","zig"],"description":""},{"short_id":"rsbjdu","title":"Stuff I learnt in 2022","url":"https://bollu.github.io/stuff-i-learnt-in-2022.html","created_at":"2023-01-01T10:47:03.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/rsbjdu/stuff_i_learnt_2022","submitter_name":"bollu","submitter_avatar_url":"/avatars/bollu-100.png","tags":["plt"],"description":""},{"short_id":"cczkdj","title":"Faster virtual machines: Speeding up programming language execution","url":"https://mort.coffee/home/fast-interpreters/","created_at":"2023-01-15T10:17:08.000-06:00","comment_count":23,"comments_url":"https://lobste.rs/s/cczkdj/faster_virtual_machines_speeding_up","submitter_name":"mort","submitter_avatar_url":"/avatars/mort-100.png","tags":["assembly","c","compilers","performance","plt"],"description":""},{"short_id":"wbwtgm","title":"Good theory books you would recommend?","url":"","created_at":"2023-01-14T10:22:41.000-06:00","comment_count":29,"comments_url":"https://lobste.rs/s/wbwtgm/good_theory_books_you_would_recommend","submitter_name":"teymour","submitter_avatar_url":"/avatars/teymour-100.png","tags":["ask","compsci"],"description":"<p>By this I mean books on any topic of computer science or mathematics (ideally computer science adjacent mathematics) that opened up a new way of thinking about problems and exposed you to new ideas.</p>\n<p>Some of my recommendations:</p>\n<ul>\n<li>Why Programs Fail, Andreas Zeller</li>\n<li>Introduction to the Analysis of Algorithms, Flajolet and Sedgewick</li>\n<li>The Art and Craft of Mathematical Problem Solving, Paul Zeitz</li>\n</ul>\n"},{"short_id":"jrp9gv","title":"Small VMs & Coroutines","url":"https://blog.dziban.net/coroutines/","created_at":"2023-01-17T17:12:33.000-06:00","comment_count":24,"comments_url":"https://lobste.rs/s/jrp9gv/small_vms_coroutines","submitter_name":"marcecoll","submitter_avatar_url":"/avatars/marcecoll-100.png","tags":["assembly"],"description":""},{"short_id":"tc8l4r","title":"Cranelift: Correctness in Register Allocation","url":"https://cfallin.org/blog/2021/03/15/cranelift-isel-3/","created_at":"2023-01-19T13:15:48.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/tc8l4r/cranelift_correctness_register","submitter_name":"teymour","submitter_avatar_url":"/avatars/teymour-100.png","tags":["compilers"],"description":""},{"short_id":"z96yzi","title":"A few programming language features I’d like to see","url":"https://neilmadden.blog/2023/01/18/a-few-programming-language-features-id-like-to-see/","created_at":"2023-01-19T09:49:05.000-06:00","comment_count":10,"comments_url":"https://lobste.rs/s/z96yzi/few_programming_language_features_i_d","submitter_name":"calvin","submitter_avatar_url":"/avatars/calvin-100.png","tags":["plt"],"description":""},{"short_id":"kf3xym","title":"Introducing: Zero to Nix","url":"https://determinate.systems/posts/zero-to-nix","created_at":"2023-01-23T09:58:11.000-06:00","comment_count":25,"comments_url":"https://lobste.rs/s/kf3xym/introducing_zero_nix","submitter_name":"grahamc","submitter_avatar_url":"/avatars/grahamc-100.png","tags":["nix"],"description":""},{"short_id":"pyrmyn","title":"I made a multi-language programmable linter","url":"https://github.com/sylver-dev/sylver-cli","created_at":"2023-01-26T09:51:02.000-06:00","comment_count":20,"comments_url":"https://lobste.rs/s/pyrmyn/i_made_multi_language_programmable","submitter_name":"sevender","submitter_avatar_url":"/avatars/sevender-100.png","tags":["python"],"description":"<p>Sylver is an open-source multi-language linter that allows the user to define custom rules by using a small built-in query language (<a href=\"https://docs.sylver.dev/docs/dsl/sylq\" rel=\"ugc\">https://docs.sylver.dev/docs/dsl/sylq</a>).</p>\n<p>Besides custom linting rules, the user can add support for an entire programming language by using a custom grammar description language. (more info at <a href=\"https://docs.sylver.dev/docs/dsl/meta-lang\" rel=\"ugc\">https://docs.sylver.dev/docs/dsl/meta-lang</a>).</p>\n<p>I’m in the process of building a registry of rulesets for different languages so that the tool can also be approached as a traditional linter. The first rulesets for Python are available at <a href=\"https://github.com/sylver-dev/rulesets\" rel=\"ugc\">https://github.com/sylver-dev/rulesets</a>.</p>\n"},{"short_id":"rz5wcp","title":"How Austral’s Linear Type Checker Works","url":"https://borretti.me/article/how-australs-linear-type-checker-works","created_at":"2023-01-29T01:31:13.000-06:00","comment_count":24,"comments_url":"https://lobste.rs/s/rz5wcp/how_austral_s_linear_type_checker_works","submitter_name":"adaszko","submitter_avatar_url":"/avatars/adaszko-100.png","tags":["plt","rust"],"description":""},{"short_id":"88rsuc","title":"How Swift Achieved Dynamic Linking Where Rust Couldn't (2019)","url":"https://faultlore.com/blah/swift-abi/","created_at":"2023-01-29T15:39:16.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/88rsuc/how_swift_achieved_dynamic_linking_where","submitter_name":"jado","submitter_avatar_url":"/avatars/jado-100.png","tags":["compilers","rust","swift"],"description":""},{"short_id":"jexsmk","title":"smol_world: Compact garbage-collected heap and JSON-like object model","url":"https://github.com/snej/smol_world","created_at":"2023-02-05T16:18:52.000-06:00","comment_count":16,"comments_url":"https://lobste.rs/s/jexsmk/smol_world_compact_garbage_collected","submitter_name":"snej","submitter_avatar_url":"/avatars/snej-100.png","tags":["c++","programming","show"],"description":""},{"short_id":"zivvw7","title":"whippet: towards a new local maximum","url":"https://wingolog.org/archives/2023/02/07/whippet-towards-a-new-local-maximum","created_at":"2023-02-07T10:43:18.000-06:00","comment_count":7,"comments_url":"https://lobste.rs/s/zivvw7/whippet_towards_new_local_maximum","submitter_name":"tumdum","submitter_avatar_url":"/avatars/tumdum-100.png","tags":["lisp","plt"],"description":""},{"short_id":"quouu0","title":"All about LeakSanitizer","url":"https://maskray.me/blog/2023-02-12-all-about-leak-sanitizer","created_at":"2023-02-12T18:27:51.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/quouu0/all_about_leaksanitizer","submitter_name":"MaskRay","submitter_avatar_url":"/avatars/MaskRay-100.png","tags":["compilers"],"description":""},{"short_id":"crgjnh","title":"Nix Based C++ Workflow From Scratch (2021)","url":"https://www.breakds.org/post/nix-based-c++-workflow/","created_at":"2023-02-12T18:03:10.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/crgjnh/nix_based_c_workflow_from_scratch_2021","submitter_name":"LolPython","submitter_avatar_url":"/avatars/LolPython-100.png","tags":["nix"],"description":""},{"short_id":"krqlml","title":"A Lambda Calculus With Coroutines and Heapless, Directly-Called Closures","url":"https://ayazhafiz.com/articles/23/a-lambda-calculus-with-coroutines-and-heapless-closures","created_at":"2023-02-20T10:57:54.000-06:00","comment_count":8,"comments_url":"https://lobste.rs/s/krqlml/lambda_calculus_with_coroutines","submitter_name":"hafiz","submitter_avatar_url":"/avatars/hafiz-100.png","tags":["compilers","plt"],"description":""},{"short_id":"t4ifza","title":"What Austral Proves","url":"https://animaomnium.github.io/what-austral-proves/","created_at":"2023-02-19T09:20:49.000-06:00","comment_count":23,"comments_url":"https://lobste.rs/s/t4ifza/what_austral_proves","submitter_name":"rkallos","submitter_avatar_url":"/avatars/rkallos-100.png","tags":["compilers","plt","programming"],"description":""},{"short_id":"4gkrmb","title":"NP-Complete isn't (always) Hard","url":"https://www.hillelwayne.com/post/np-hard/","created_at":"2023-02-20T11:37:39.000-06:00","comment_count":18,"comments_url":"https://lobste.rs/s/4gkrmb/np_complete_isn_t_always_hard","submitter_name":"hwayne","submitter_avatar_url":"/avatars/hwayne-100.png","tags":["compsci","programming"],"description":""},{"short_id":"m6kn08","title":"Faking Algebraic Effects and Handlers With Traits: A Rust Design Pattern","url":"https://blog.shtsoft.eu/2022/12/22/effect-trait-dp.html","created_at":"2023-02-23T20:17:00.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/m6kn08/faking_algebraic_effects_handlers_with","submitter_name":"5d22b","submitter_avatar_url":"/avatars/5d22b-100.png","tags":["plt","rust"],"description":""},{"short_id":"eru89e","title":"Some notes on using nix","url":"https://jvns.ca/blog/2023/02/28/some-notes-on-using-nix/","created_at":"2023-03-01T08:24:25.000-06:00","comment_count":29,"comments_url":"https://lobste.rs/s/eru89e/some_notes_on_using_nix","submitter_name":"mrfabbri","submitter_avatar_url":"/avatars/mrfabbri-100.png","tags":["nix"],"description":""},{"short_id":"tmhk3n","title":"Use GNU Emacs","url":"https://www2.lib.uchicago.edu/keith/emacs/","created_at":"2023-03-01T07:14:46.000-06:00","comment_count":35,"comments_url":"https://lobste.rs/s/tmhk3n/use_gnu_emacs","submitter_name":"jakob","submitter_avatar_url":"/avatars/jakob-100.png","tags":["emacs"],"description":""},{"short_id":"tu7kjz","title":"Introducing the Determinate Nix Installer","url":"https://determinate.systems/posts/determinate-nix-installer","created_at":"2023-02-27T10:04:08.000-06:00","comment_count":33,"comments_url":"https://lobste.rs/s/tu7kjz/introducing_determinate_nix_installer","submitter_name":"linuxhackerman","submitter_avatar_url":"/avatars/linuxhackerman-100.png","tags":["nix"],"description":""},{"short_id":"kt1ayf","title":"Fixing the Next 10,000 Aliasing Bugs","url":"https://blog.polybdenum.com/2023/03/05/fixing-the-next-10-000-aliasing-bugs.html","created_at":"2023-03-06T05:44:39.000-06:00","comment_count":11,"comments_url":"https://lobste.rs/s/kt1ayf/fixing_next_10_000_aliasing_bugs","submitter_name":"msfjarvis","submitter_avatar_url":"/avatars/msfjarvis-100.png","tags":["plt"],"description":""},{"short_id":"sdttgb","title":"How Discord Stores Trillions of Messages","url":"https://discord.com/blog/how-discord-stores-trillions-of-messages","created_at":"2023-03-07T14:50:40.000-06:00","comment_count":27,"comments_url":"https://lobste.rs/s/sdttgb/how_discord_stores_trillions_messages","submitter_name":"j11g","submitter_avatar_url":"/avatars/j11g-100.png","tags":["databases","performance"],"description":""},{"short_id":"uo3sck","title":"What a good debugger can do","url":"https://werat.dev/blog/what-a-good-debugger-can-do/","created_at":"2023-03-10T05:14:47.000-06:00","comment_count":12,"comments_url":"https://lobste.rs/s/uo3sck/what_good_debugger_can_do","submitter_name":"werat","submitter_avatar_url":"/avatars/werat-100.png","tags":["debugging","programming"],"description":""},{"short_id":"d0ptcu","title":"What are your favourite pieces of software?","url":"","created_at":"2023-03-10T13:37:52.000-06:00","comment_count":112,"comments_url":"https://lobste.rs/s/d0ptcu/what_are_your_favourite_pieces_software","submitter_name":"lim","submitter_avatar_url":"/avatars/lim-100.png","tags":["ask","programming"],"description":"<p>It can feel (especially in my circles) that good software doesn’t really exist these days, so I really like seeing what other people do actually like.</p>\n<p>Are there any pieces of software (or maybe SaaS) that you would recommend almost without caveat? Or maybe something you don’t use but makes you glad, happy or hopeful.</p>\n"},{"short_id":"x5avwc","title":"Verse Language Reference","url":"https://dev.epicgames.com/documentation/en-us/uefn/verse-language-reference","created_at":"2023-03-23T03:59:22.000-05:00","comment_count":19,"comments_url":"https://lobste.rs/s/x5avwc/verse_language_reference","submitter_name":"knl","submitter_avatar_url":"/avatars/knl-100.png","tags":["programming"],"description":""},{"short_id":"yo1bez","title":"Optimizing a parser/compiler with data-oriented design: a case study","url":"https://tweedegolf.nl/en/blog/88/data-oriented-design","created_at":"2023-03-24T02:02:45.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/yo1bez/optimizing_parser_compiler_with_data","submitter_name":"5d22b","submitter_avatar_url":"/avatars/5d22b-100.png","tags":["compilers","performance","rust"],"description":""},{"short_id":"pdqmcq","title":"Cheating is All You Need","url":"https://about.sourcegraph.com/blog/cheating-is-all-you-need","created_at":"2023-03-23T08:30:53.000-05:00","comment_count":55,"comments_url":"https://lobste.rs/s/pdqmcq/cheating_is_all_you_need","submitter_name":"mrfabbri","submitter_avatar_url":"/avatars/mrfabbri-100.png","tags":["ai"],"description":""},{"short_id":"wry3pp","title":"Logic and Proof","url":"https://leanprover.github.io/logic_and_proof/","created_at":"2023-03-26T15:13:04.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/wry3pp/logic_proof","submitter_name":"nextos","submitter_avatar_url":"/avatars/nextos-100.png","tags":["book","compsci"],"description":""},{"short_id":"c8eahy","title":"What conferences are you all looking forward to?","url":"","created_at":"2023-03-30T07:53:02.000-05:00","comment_count":37,"comments_url":"https://lobste.rs/s/c8eahy/what_conferences_are_you_all_looking","submitter_name":"rtpg","submitter_avatar_url":"/avatars/rtpg-100.png","tags":["ask","event"],"description":"<p>With more and more conferences spinning up in person again, are any of you looking forward to venturing out to any during the coming year? Or perhaps participating in a virtual conference that has been going well? I’ve found that participating is pretty motivating, so I would like to find out before I just see posts about the conference the week of.</p>\n"},{"short_id":"b0fkuh","title":"Build faster with Buck2: Our open source build system","url":"https://engineering.fb.com/2023/04/06/open-source/buck2-open-source-large-scale-build-system/","created_at":"2023-04-06T11:40:51.000-05:00","comment_count":37,"comments_url":"https://lobste.rs/s/b0fkuh/build_faster_with_buck2_our_open_source","submitter_name":"brianhicks","submitter_avatar_url":"/avatars/brianhicks-100.png","tags":["release"],"description":""},{"short_id":"toubeb","title":"Yo, I heard you like decorators","url":"https://www.bbayles.com/index/decorator_factory","created_at":"2023-04-06T14:55:04.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/toubeb/yo_i_heard_you_like_decorators","submitter_name":"hwayne","submitter_avatar_url":"/avatars/hwayne-100.png","tags":["python"],"description":""},{"short_id":"wl1qe1","title":"What I've Learned About Formal Methods In Half a Year","url":"https://jakob.space/blog/what-ive-learned-about-formal-methods.html","created_at":"2023-04-10T06:29:34.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/wl1qe1/what_i_ve_learned_about_formal_methods","submitter_name":"jakob","submitter_avatar_url":"/avatars/jakob-100.png","tags":["formalmethods"],"description":""},{"short_id":"feueff","title":"swift-evolution/0382: Expression Macros","url":"https://github.com/apple/swift-evolution/blob/main/proposals/0382-expression-macros.md","created_at":"2023-04-09T14:39:45.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/feueff/swift_evolution_0382_expression_macros","submitter_name":"snej","submitter_avatar_url":"/avatars/snej-100.png","tags":["plt","swift"],"description":""},{"short_id":"t6oqhk","title":"Interaction Nets, Combinators, and Calculus","url":"https://zicklag.github.io/blog/interaction-nets-combinators-calculus/","created_at":"2023-04-11T14:28:13.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/t6oqhk/interaction_nets_combinators_calculus","submitter_name":"arcade","submitter_avatar_url":"/avatars/arcade-100.png","tags":["compsci"],"description":""},{"short_id":"kst55f","title":"Kalyn: a self-hosting compiler for x86-64","url":"https://intuitiveexplanations.com/tech/kalyn","created_at":"2023-04-14T09:21:41.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/kst55f/kalyn_self_hosting_compiler_for_x86_64","submitter_name":"river","submitter_avatar_url":"/avatars/river-100.png","tags":["compilers"],"description":""},{"short_id":"mavub8","title":"A love letter to make","url":"https://kmaasrud.com/blog/make","created_at":"2023-04-19T01:01:46.000-05:00","comment_count":66,"comments_url":"https://lobste.rs/s/mavub8/love_letter_make","submitter_name":"kmaasrud","submitter_avatar_url":"/avatars/kmaasrud-100.png","tags":["programming"],"description":""},{"short_id":"iuf6hn","title":"On Recursion, Continuations and Trampolines","url":"https://eli.thegreenplace.net/2017/on-recursion-continuations-and-trampolines/","created_at":"2023-04-22T16:00:19.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/iuf6hn/on_recursion_continuations_trampolines","submitter_name":"sri","submitter_avatar_url":"/avatars/sri-100.png","tags":["programming"],"description":""},{"short_id":"yhe6ag","title":"The World's Simplest Lock-Free Hash Table (2013)","url":"https://preshing.com/20130605/the-worlds-simplest-lock-free-hash-table/","created_at":"2023-04-23T09:14:29.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/yhe6ag/world_s_simplest_lock_free_hash_table_2013","submitter_name":"matklad","submitter_avatar_url":"/avatars/matklad-100.png","tags":["performance"],"description":""},{"short_id":"jvxb8s","title":"My thoughts on OCaml","url":"https://osa1.net/posts/2023-04-24-ocaml-thoughts.html","created_at":"2023-04-25T09:01:23.000-05:00","comment_count":27,"comments_url":"https://lobste.rs/s/jvxb8s/my_thoughts_on_ocaml","submitter_name":"jado","submitter_avatar_url":"/avatars/jado-100.png","tags":["ml"],"description":""},{"short_id":"p6or46","title":"First-Class Modules and Modular Implicits in OCaml (2017)","url":"https://tycon.github.io/modular-implicits.html","created_at":"2023-04-30T01:14:29.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/p6or46/first_class_modules_modular_implicits","submitter_name":"5d22b","submitter_avatar_url":"/avatars/5d22b-100.png","tags":["ml"],"description":""},{"short_id":"qxlh6m","title":"Native Implementation of Mutable Value Semantics","url":"https://arxiv.org/pdf/2106.12678.pdf","created_at":"2023-04-28T02:51:30.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/qxlh6m/native_implementation_mutable_value","submitter_name":"matklad","submitter_avatar_url":"/avatars/matklad-100.png","tags":["pdf","plt"],"description":""},{"short_id":"ndkycy","title":"Why Split Lexing and Parsing Into Two Separate Phases?","url":"https://tratt.net/laurie/blog/2023/why_split_lexing_and_parsing_into_two_separate_phases.html","created_at":"2023-05-02T05:19:03.000-05:00","comment_count":41,"comments_url":"https://lobste.rs/s/ndkycy/why_split_lexing_parsing_into_two","submitter_name":"ltratt","submitter_avatar_url":"/avatars/ltratt-100.png","tags":["compilers","plt"],"description":""},{"short_id":"hhcros","title":"Somehow AutoHotKey is kinda good now","url":"https://www.hillelwayne.com/post/ahk-v2/","created_at":"2023-05-03T13:17:06.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/hhcros/somehow_autohotkey_is_kinda_good_now","submitter_name":"hwayne","submitter_avatar_url":"/avatars/hwayne-100.png","tags":["release","windows"],"description":""},{"short_id":"2ep6mu","title":"The seven programming ur-languages","url":"https://madhadron.com/programming/seven_ur_languages.html","created_at":"2023-05-04T00:12:48.000-05:00","comment_count":19,"comments_url":"https://lobste.rs/s/2ep6mu/seven_programming_ur_languages","submitter_name":"Wryl","submitter_avatar_url":"/avatars/Wryl-100.png","tags":["plt","programming"],"description":""},{"short_id":"qbeqio","title":"How Capabilities Work in Austral","url":"https://borretti.me/article/how-capabilities-work-austral","created_at":"2023-05-07T23:54:51.000-05:00","comment_count":29,"comments_url":"https://lobste.rs/s/qbeqio/how_capabilities_work_austral","submitter_name":"adaszko","submitter_avatar_url":"/avatars/adaszko-100.png","tags":["plt"],"description":""},{"short_id":"ry1gda","title":"An Introduction to TLA+ and Its Use in Parties","url":"https://www.innoq.com/en/articles/2023/04/an-introduction-to-tla/","created_at":"2023-05-09T04:18:04.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/ry1gda/introduction_tla_its_use_parties","submitter_name":"jeeger","submitter_avatar_url":"/avatars/jeeger-100.png","tags":["formalmethods"],"description":""},{"short_id":"ftsowh","title":"Building a baseline JIT for Lua automatically","url":"https://sillycross.github.io/2023/05/12/2023-05-12/","created_at":"2023-05-12T09:38:30.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/ftsowh/building_baseline_jit_for_lua","submitter_name":"sillycross","submitter_avatar_url":"/avatars/sillycross-100.png","tags":["c++","compilers","lua"],"description":""},{"short_id":"ymgdcq","title":"You should be reading academic computer science papers (2022)","url":"https://stackoverflow.blog/2022/12/30/you-should-be-reading-academic-computer-science-papers/","created_at":"2023-05-16T01:43:43.000-05:00","comment_count":31,"comments_url":"https://lobste.rs/s/ymgdcq/you_should_be_reading_academic_computer","submitter_name":"5d22b","submitter_avatar_url":"/avatars/5d22b-100.png","tags":["compsci","practices"],"description":""},{"short_id":"jhuosw","title":"\"Where have all the hackers gone?\" + a way to discuss programming languages","url":"https://morepablo.com/2023/05/where-have-all-the-hackers-gone.html","created_at":"2023-05-17T13:40:51.000-05:00","comment_count":36,"comments_url":"https://lobste.rs/s/jhuosw/where_have_all_hackers_gone_way_discuss","submitter_name":"srpablo","submitter_avatar_url":"/avatars/srpablo-100.png","tags":["culture","plt"],"description":""},{"short_id":"lbzdtu","title":"Resilient LL Parsing Tutorial","url":"https://matklad.github.io/2023/05/21/resilient-ll-parsing-tutorial.html","created_at":"2023-05-21T09:22:11.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/lbzdtu/resilient_ll_parsing_tutorial","submitter_name":"matklad","submitter_avatar_url":"/avatars/matklad-100.png","tags":["compilers"],"description":""},{"short_id":"bykhdz","title":"Rust to Assembly: Understanding the Inner Workings of Rust","url":"https://eventhelix.com/rust/","created_at":"2023-06-01T06:10:05.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/bykhdz/rust_assembly_understanding_inner","submitter_name":"williballenthin","submitter_avatar_url":"/avatars/williballenthin-100.png","tags":["reversing","rust"],"description":""},{"short_id":"47amaq","title":"The Rust I Wanted Had No Future","url":"https://graydon2.dreamwidth.org/307291.html","created_at":"2023-06-05T03:45:49.000-05:00","comment_count":40,"comments_url":"https://lobste.rs/s/47amaq/rust_i_wanted_had_no_future","submitter_name":"matklad","submitter_avatar_url":"/avatars/matklad-100.png","tags":["plt","rust"],"description":""},{"short_id":"0r1whx","title":"SICP in Emacs","url":"https://kchousos.github.io/posts/sicp-in-emacs/","created_at":"2023-06-07T08:04:55.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/0r1whx/sicp_emacs","submitter_name":"Kchousos","submitter_avatar_url":"/avatars/Kchousos-100.png","tags":["emacs","lisp","show"],"description":""},{"short_id":"rzmnam","title":"CCDetect-lsp: Language-agnostic real-time duplicate code detection LSP server","url":"https://github.com/jakobkhansen/CCDetect-lsp","created_at":"2023-06-10T15:03:47.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/rzmnam/ccdetect_lsp_language_agnostic_real_time","submitter_name":"rudis","submitter_avatar_url":"/avatars/rudis-100.png","tags":["programming"],"description":""},{"short_id":"sizjds","title":"Second-Class References","url":"https://borretti.me/article/second-class-references","created_at":"2023-06-12T06:47:36.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/sizjds/second_class_references","submitter_name":"adaszko","submitter_avatar_url":"/avatars/adaszko-100.png","tags":["plt"],"description":""},{"short_id":"zqa4cc","title":"Learning modern compilers?","url":"","created_at":"2023-06-14T10:03:26.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/zqa4cc/learning_modern_compilers","submitter_name":"vector_spaces","submitter_avatar_url":"/avatars/vector_spaces-100.png","tags":["ask","compilers","plt"],"description":"<p>There was a video a few years ago where Anders Hejlsberg (of C#, TypeScript, Turbo Pascal, and Delphi fame, among others) discussed modern compiler architecture and how it’s vastly different from what is taught in university compiler courses, or even in recent books on compilers and language implementation</p>\n<p><a href=\"https://www.youtube.com/watch?v=wSdV1M7n4gQ\" rel=\"ugc\">https://www.youtube.com/watch?v=wSdV1M7n4gQ</a></p>\n<p>Specifically, he talks about the Roslyn compiler and how it utilizes a more service oriented architecture, so that, for example, developer tooling can get information about the state of the actual parse tree used by the compiler in real time without forcing a full recompile.</p>\n<p>I recall also that within the last year or so on Hacker News, someone who worked on compilers in industry commented on a thread about compilers that it was hard to hire people because of how vastly different compiler implementation is in practice vs what’s taught in university courses.</p>\n<p>Anyway, writing to see if anyone else agrees with the last comment, and if any workers in compilers (whether in academia or industry) have any suggestions for how someone can get up to speed on new developments in this field outside of reading the Roslyn source code.</p>\n<ul>\n<li>Are there particular papers that have been especially important to recent developments?</li>\n<li>Other than Roslyn, are there any other well known or less well known open source projects one could study?</li>\n<li>Somewhat orthogonal to the last two questions, is “programming language theory” (e.g. denotational semantics, abstract interpretation, type theory, lambda calculus, Floyd-Hoare logic, and other more abstract topics) relevant to the practice of modern compiler construction and worth learning? Or is this stuff mostly a distraction? Referring to this sort of material [1]</li>\n</ul>\n<p>[1] <a href=\"https://steshaw.org/plt/\" rel=\"ugc\">https://steshaw.org/plt/</a></p>\n"},{"short_id":"2rgojg","title":"Single Ownership and Memory Safety without Borrow Checking, Reference Counting, or Garbage Collection","url":"https://verdagon.dev/blog/single-ownership-without-borrow-checking-rc-gc","created_at":"2023-06-16T06:28:09.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/2rgojg/single_ownership_memory_safety_without","submitter_name":"mpweiher","submitter_avatar_url":"/avatars/mpweiher-100.png","tags":["rust"],"description":""},{"short_id":"w8vovg","title":"Squeezing a Little More Performance Out of Bytecode Interpreters","url":"https://stefan-marr.de/2023/06/squeezing-a-little-more-performance-out-of-bytecode-interpreters/","created_at":"2023-06-17T23:21:37.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/w8vovg/squeezing_little_more_performance_out","submitter_name":"abhi9u","submitter_avatar_url":"/avatars/abhi9u-100.png","tags":["compilers","performance"],"description":""},{"short_id":"hcwjcs","title":"Encoding ML-style modules in Rust","url":"https://blog.waleedkhan.name/encoding-ml-style-modules-in-rust/","created_at":"2023-06-17T17:26:27.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/hcwjcs/encoding_ml_style_modules_rust","submitter_name":"arxanas","submitter_avatar_url":"/avatars/arxanas-100.png","tags":["ml","plt","rust"],"description":""},{"short_id":"iozq2j","title":"The legend of \"x86 CPUs decode instructions into RISC form internally\"","url":"https://fanael.github.io/is-x86-risc-internally.html","created_at":"2023-06-18T09:59:51.000-05:00","comment_count":35,"comments_url":"https://lobste.rs/s/iozq2j/legend_x86_cpus_decode_instructions_into","submitter_name":"Freaky","submitter_avatar_url":"/avatars/Freaky-100.png","tags":["assembly","hardware"],"description":""},{"short_id":"lnyfm6","title":"Compiling typed Python","url":"https://bernsteinbear.com//blog/typed-python/","created_at":"2023-06-19T19:52:17.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/lnyfm6/compiling_typed_python","submitter_name":"eBPF","submitter_avatar_url":"/avatars/eBPF-100.png","tags":["performance","plt","python"],"description":""},{"short_id":"2yzqmv","title":"The Seamstress Event Loop In Zig","url":"https://ryleealanza.org/2023/06/21/The-Seamstress-Event-Loop-in-Zig.html","created_at":"2023-06-23T04:07:54.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/2yzqmv/seamstress_event_loop_zig","submitter_name":"matklad","submitter_avatar_url":"/avatars/matklad-100.png","tags":["zig"],"description":""},{"short_id":"p93jau","title":"The E-graph extraction problem is NP-complete","url":"https://effect.systems/blog/egraph-extraction.html","created_at":"2023-06-24T11:08:19.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/p93jau/e_graph_extraction_problem_is_np_complete","submitter_name":"Corbin","submitter_avatar_url":"/avatars/Corbin-100.png","tags":["compilers","compsci","math"],"description":""},{"short_id":"b0e2nt","title":"Time is not a synchronization primitive","url":"https://xeiaso.net/blog/nosleep","created_at":"2023-06-24T23:03:00.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/b0e2nt/time_is_not_synchronization_primitive","submitter_name":"cadey","submitter_avatar_url":"/avatars/cadey-100.png","tags":["go","philosophy"],"description":""}]