[{"short_id":"w1k7fr","title":"Having your compile-time cake and eating it too","url":"https://0x44.xyz/blog/comptime-1","created_at":"2025-05-24T13:52:16.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/w1k7fr/having_your_compile_time_cake_eating_it","submitter_name":"emschwartz","tags":["plt","rust","zig"],"description":""},{"short_id":"suuuaw","title":"What Works (and Doesn't) Selling Formal Methods","url":"https://www.galois.com/articles/what-works-and-doesnt-selling-formal-methods","created_at":"2025-05-25T03:51:38.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/suuuaw/what_works_doesn_t_selling_formal_methods","submitter_name":"oger","tags":["formalmethods"],"description":""},{"short_id":"uvw5lp","title":"How I used o3 to find CVE-2025-37899, a remote zeroday vulnerability in the Linux kernel’s SMB implementation","url":"https://sean.heelan.io/2025/05/22/how-i-used-o3-to-find-cve-2025-37899-a-remote-zeroday-vulnerability-in-the-linux-kernels-smb-implementation/","created_at":"2025-05-24T14:16:27.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/uvw5lp/how_i_used_o3_find_cve_2025_37899_remote","submitter_name":"ohrv","tags":["linux","security","vibecoding"],"description":""},{"short_id":"6sidoz","title":"Domain Theory Lecture Notes","url":"https://liamoc.net/forest/dt-001Y/index.xml","created_at":"2025-05-24T19:04:48.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/6sidoz/domain_theory_lecture_notes","submitter_name":"meithecatte","tags":["math","plt"],"description":""},{"short_id":"ujgjkb","title":"The Illusion of Thinking","url":"https://ml-site.cdn-apple.com/papers/the-illusion-of-thinking.pdf","created_at":"","comment_count":5,"comments_url":"https://lobste.rs/s/ujgjkb/illusion_thinking","submitter_name":"jmelesky","tags":["pdf","ai"],"description":""},{"short_id":"9hzjeh","title":"Agentic Coding Recommendations","url":"https://lucumr.pocoo.org/2025/6/12/agentic-coding/","created_at":"2025-06-12T04:21:05.000-05:00","comment_count":22,"comments_url":"https://lobste.rs/s/9hzjeh/agentic_coding_recommendations","submitter_name":"cgrinds","tags":["vibecoding"],"description":""},{"short_id":"vfjnar","title":"What I talk about when I talk about IRs","url":"https://bernsteinbear.com/blog/irs/","created_at":"2025-06-12T21:06:21.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/vfjnar/what_i_talk_about_when_i_talk_about_irs","submitter_name":"asb","tags":["compilers"],"description":""},{"short_id":"vq4cjo","title":"Compiler Explorer Cost Transparency","url":"https://xania.org/202506/compiler-explorer-cost-transparency","created_at":"","comment_count":0,"comments_url":"https://lobste.rs/s/vq4cjo/compiler_explorer_cost_transparency","submitter_name":"itamarst","tags":["finance"],"description":""},{"short_id":"rqc5yc","title":"Compiler Explorer and the Promise of URLs That Last Forever","url":"https://xania.org/202505/compiler-explorer-urls-forever","created_at":"","comment_count":6,"comments_url":"https://lobste.rs/s/rqc5yc/compiler_explorer_promise_urls_last","submitter_name":"oger","tags":["web"],"description":""},{"short_id":"uwhv3o","title":"Writing a Verified Postfix Calculator in Ada/SPARK","url":"https://pyjarrett.github.io/2025/06/10/postfix-calculator.html","created_at":"","comment_count":1,"comments_url":"https://lobste.rs/s/uwhv3o/writing_verified_postfix_calculator_ada","submitter_name":"pyj","tags":["programming","formalmethods"],"description":""},{"short_id":"w7fnqq","title":"Type-based vs Value-based Reflection","url":"https://brevzin.github.io/c++/2025/06/09/reflection-ts/","created_at":"","comment_count":0,"comments_url":"https://lobste.rs/s/w7fnqq/type_based_vs_value_based_reflection","submitter_name":"af","tags":["c++"],"description":""},{"short_id":"njbvot","title":"Introducing facet: Reflection for Rust","url":"https://youtu.be/0mqFCqw_XvI","created_at":"","comment_count":11,"comments_url":"https://lobste.rs/s/njbvot/introducing_facet_reflection_for_rust","submitter_name":"soareschen","tags":["video","programming","rust"],"description":""},{"short_id":"thpska","title":"jemalloc Postmortem","url":"https://jasone.github.io/2025/06/12/jemalloc-postmortem/","created_at":"2025-06-12T20:38:58.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/thpska/jemalloc_postmortem","submitter_name":"je","tags":["c","programming"],"description":""},{"short_id":"r0spkl","title":"Raku's \"core\"","url":"https://gist.github.com/raiph/849a4a9d8875542fb86df2b2eda89296","created_at":"2025-06-11T15:17:32.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/r0spkl/raku_s_core","submitter_name":"veqq","tags":["perl","plt"],"description":""},{"short_id":"unsbmk","title":"OxCaml, Jane Street's extension of OCaml is now open-source","url":"https://oxcaml.org","created_at":"2025-06-13T09:23:45.000-05:00","comment_count":45,"comments_url":"https://lobste.rs/s/unsbmk/oxcaml_jane_street_s_extension_ocaml_is","submitter_name":"avsm","tags":["ml"],"description":""},{"short_id":"btlkeb","title":"Datalog in Rust","url":"https://github.com/frankmcsherry/blog/blob/master/posts/2025-06-03.md","created_at":"2025-06-14T01:17:48.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/btlkeb/datalog_rust","submitter_name":"asb","tags":["compilers","rust"],"description":""},{"short_id":"c7udeu","title":"strace tips for better debugging","url":"https://rrampage.github.io/2025/06/13/strace-tips-for-better-debugging/","created_at":"2025-06-13T13:23:08.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/c7udeu/strace_tips_for_better_debugging","submitter_name":"rrampage","tags":["debugging","linux"],"description":""},{"short_id":"4tmzdy","title":"Implementing Logic Programming","url":"https://btmc.substack.com/p/implementing-logic-programming","created_at":"2025-06-14T01:15:20.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/4tmzdy/implementing_logic_programming","submitter_name":"veqq","tags":["plt"],"description":""},{"short_id":"riogyw","title":"A meta-analysis of three different notions of software complexity","url":"https://typesanitizer.com/blog/complexity-definitions.html","created_at":"2025-06-14T08:05:59.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/riogyw/meta_analysis_three_different_notions","submitter_name":"ztellman","tags":["philosophy"],"description":""},{"short_id":"jpfyd6","title":"StarMalloc: verified memory allocator","url":"https://dl.acm.org/doi/10.1145/3689773","created_at":"2025-06-13T11:49:11.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/jpfyd6/starmalloc_verified_memory_allocator","submitter_name":"indolering","tags":["compsci","formalmethods","security"],"description":""},{"short_id":"rwbtwd","title":"The Zed Debugger is Here","url":"https://zed.dev/blog/debugger","created_at":"2025-06-18T12:57:32.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/rwbtwd/zed_debugger_is_here","submitter_name":"BasicallyEternity","tags":["editors"],"description":""},{"short_id":"kmizrf","title":"What Would a Kubernetes 2.0 Look Like","url":"https://matduggan.com/what-would-a-kubernetes-2-0-look-like/","created_at":"2025-06-19T07:00:14.000-05:00","comment_count":33,"comments_url":"https://lobste.rs/s/kmizrf/what_would_kubernetes_2_0_look_like","submitter_name":"maduggan","tags":["devops"],"description":""},{"short_id":"pdrso1","title":"I wrote my PhD Thesis in Typst","url":"https://fransskarman.com/phd_thesis_in_typst.html","created_at":"2025-06-22T16:10:35.000-05:00","comment_count":49,"comments_url":"https://lobste.rs/s/pdrso1/i_wrote_my_phd_thesis_typst","submitter_name":"isuffix","tags":["programming"],"description":""},{"short_id":"thwfed","title":"Discover C++26’s compile-time reflection","url":"https://lemire.me/blog/2025/06/22/c26-will-include-compile-time-reflection-why-should-you-care/","created_at":"2025-06-22T12:21:42.000-05:00","comment_count":20,"comments_url":"https://lobste.rs/s/thwfed/discover_c_26_s_compile_time_reflection","submitter_name":"raymii","tags":["c++"],"description":""},{"short_id":"f9xdsg","title":"Gemini CLI: your open-source AI agent","url":"https://blog.google/technology/developers/introducing-gemini-cli-open-source-ai-agent/","created_at":"2025-06-25T08:28:10.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/f9xdsg/gemini_cli_your_open_source_ai_agent","submitter_name":"asb","tags":["release","vibecoding"],"description":""},{"short_id":"beakce","title":"How fast are Linux pipes anyway? (2022)","url":"https://mazzo.li/posts/fast-pipes.html","created_at":"","comment_count":1,"comments_url":"https://lobste.rs/s/beakce/how_fast_are_linux_pipes_anyway_2022","submitter_name":"fanf","tags":["linux","performance"],"description":""},{"short_id":"rc9ydi","title":"Fixing Letrec (Reloaded)","url":"https://legacy.cs.indiana.edu/~dyb/pubs/letrec-reloaded.pdf","created_at":"","comment_count":0,"comments_url":"https://lobste.rs/s/rc9ydi/fixing_letrec_reloaded","submitter_name":"veqq","tags":["pdf","lisp","plt"],"description":""},{"short_id":"mrwcem","title":"To Bind and Loose a Reference (2020)","url":"https://thephd.dev/to-bind-and-loose-a-reference-optional","created_at":"","comment_count":0,"comments_url":"https://lobste.rs/s/mrwcem/bind_loose_reference_2020","submitter_name":"repnop","tags":["culture","c++"],"description":""},{"short_id":"buoxqy","title":"How to Grow an LSM-tree? Towards Bridging the Gap Between Theory and Practice","url":"https://arxiv.org/abs/2504.17178","created_at":"2025-06-01T05:32:02.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/buoxqy/how_grow_lsm_tree_towards_bridging_gap","submitter_name":"rrampage","tags":["databases"],"description":""},{"short_id":"fkopdb","title":"Subtype Inference by Example","url":"https://blog.polybdenum.com/2020/07/04/subtype-inference-by-example-part-1-introducing-cubiml.html","created_at":"2025-06-03T16:01:33.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/fkopdb/subtype_inference_by_example","submitter_name":"veqq","tags":["plt"],"description":""},{"short_id":"pn7sq3","title":"Interfacing MCP with Combinatorial, Convex, and SMT Solvers","url":"https://www.stephendiehl.com/posts/smt_and_mcp_solvers/","created_at":"2025-06-03T10:17:30.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/pn7sq3/interfacing_mcp_with_combinatorial","submitter_name":"sdiehl","tags":["python","vibecoding"],"description":""},{"short_id":"qsksxp","title":"Zero-Cost 'Tagless Final' in Rust with GADT-style Enums","url":"https://www.inferara.com/en/blog/rust-tagless-final-gadt/","created_at":"2025-06-03T14:04:37.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/qsksxp/zero_cost_tagless_final_rust_with_gadt","submitter_name":"ohrv","tags":["plt","rust"],"description":""},{"short_id":"75hp0g","title":"What's higher-order about so-called higher-order references?","url":"https://www.williamjbowman.com/blog/2025/06/02/what-s-higher-order-about-so-called-higher-order-references/","created_at":"2025-06-02T19:44:49.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/75hp0g/what_s_higher_order_about_so_called_higher","submitter_name":"asb","tags":["plt"],"description":""},{"short_id":"lfuoar","title":"Uniqueness for Behavioural Types","url":"https://kcsrk.info/ocaml/modes/2025/05/29/uniqueness_and_behavioural_types/","created_at":"2025-06-03T02:44:56.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/lfuoar/uniqueness_for_behavioural_types","submitter_name":"hwj","tags":["ml"],"description":""},{"short_id":"tyacrw","title":"Handling bidirectional control flow","url":"https://dl.acm.org/doi/10.1145/3428207","created_at":"2025-06-03T18:45:22.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/tyacrw/handling_bidirectional_control_flow","submitter_name":"veqq","tags":["pdf","plt"],"description":"<p>Bidirectional effects can encode a lispish condition system!</p>\n"},{"short_id":"ocu642","title":"How Compiler Explorer Works in 2025","url":"https://xania.org/202506/how-compiler-explorer-works","created_at":"2025-06-03T18:15:06.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/ocu642/how_compiler_explorer_works_2025","submitter_name":"craigstuntz","tags":["c","compilers","scaling","web"],"description":""},{"short_id":"n2lvmy","title":"AI Changes Everything","url":"https://lucumr.pocoo.org/2025/6/4/changes/","created_at":"2025-06-04T04:11:04.000-05:00","comment_count":135,"comments_url":"https://lobste.rs/s/n2lvmy/ai_changes_everything","submitter_name":"op","tags":["vibecoding"],"description":""},{"short_id":"rzskjk","title":"I Think I’m Done Thinking About genAI For Now","url":"https://blog.glyph.im/2025/06/i-think-im-done-thinking-about-genai-for-now.html","created_at":"2025-06-05T01:13:51.000-05:00","comment_count":72,"comments_url":"https://lobste.rs/s/rzskjk/i_think_i_m_done_thinking_about_genai_for","submitter_name":"mwcampbell","tags":["vibecoding"],"description":""},{"short_id":"mp34xp","title":"AI is a gamechanger for TLA+ users","url":"https://buttondown.com/hillelwayne/archive/ai-is-a-gamechanger-for-tla-users/","created_at":"2025-06-05T10:02:07.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/mp34xp/ai_is_gamechanger_for_tla_users","submitter_name":"hwayne","tags":["formalmethods","vibecoding"],"description":""},{"short_id":"yjbsof","title":"A programming system","url":"https://andreyor.st/posts/2023-10-18-a-programming-system/","created_at":"2025-06-05T05:12:55.000-05:00","comment_count":19,"comments_url":"https://lobste.rs/s/yjbsof/programming_system","submitter_name":"matklad","tags":["programming"],"description":""},{"short_id":"495rx9","title":"In which I have Opinions about parsing and grammars","url":"https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/parsing/","created_at":"2025-06-05T10:14:12.000-05:00","comment_count":36,"comments_url":"https://lobste.rs/s/495rx9/which_i_have_opinions_about_parsing","submitter_name":"asb","tags":["plt"],"description":""},{"short_id":"lczxco","title":"Linearity and uniqueness","url":"https://kcsrk.info/ocaml/modes/oxcaml/2025/06/04/linearity_and_uniqueness/","created_at":"2025-06-05T04:18:04.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/lczxco/linearity_uniqueness","submitter_name":"soareschen","tags":["plt"],"description":""},{"short_id":"lbmywp","title":"APLearn: machine learning library","url":"https://github.com/BobMcDear/aplearn","created_at":"2025-06-05T08:18:28.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/lbmywp/aplearn_machine_learning_library","submitter_name":"veqq","tags":["apl"],"description":""},{"short_id":"oei5fj","title":"Jepsen: TigerBeetle 0.16.11","url":"https://jepsen.io/analyses/tigerbeetle-0.16.11","created_at":"2025-06-06T05:54:15.000-05:00","comment_count":34,"comments_url":"https://lobste.rs/s/oei5fj/jepsen_tigerbeetle_0_16_11","submitter_name":"aphyr","tags":["databases","distributed","testing"],"description":""},{"short_id":"gynzfc","title":"Just fucking code","url":"https://www.justfuckingcode.com/","created_at":"2025-06-06T06:07:06.000-05:00","comment_count":46,"comments_url":"https://lobste.rs/s/gynzfc/just_fucking_code","submitter_name":"confusedalex","tags":["vibecoding"],"description":""},{"short_id":"e8abqn","title":"How can one write blazing fast yet useful compilers (for lazy pure functional languages)?","url":"","created_at":"2025-06-07T12:46:55.000-05:00","comment_count":55,"comments_url":"https://lobste.rs/s/e8abqn/how_can_one_write_blazing_fast_yet_useful","submitter_name":"habibalamin","tags":["ask","compilers","performance"],"description":"<p>I’ve decided enough is enough and I want to write my own compiler (seems I caught a bug and lobste.rs is definitely not discouraging it). The language I have in mind is a basic (lazy?) statically-typed pure functional programming language with do notation and records (i.e. mostly Haskell-lite).</p>\n<p>I have other ideas I’d like to explore as well, but mainly, I want the compiler to be so fast (w/ optimisations) that people think there must have been a glitch; a cold build, including linking, of hundreds of thousands of lines in tens of milliseconds on a five-year-old mid-range laptop.</p>\n<p>The question I have is: what do I need to do at every level to pull this off? From lexing and parsing through typechecking and optimisation to interpretation and/or code generation, etc.</p>\n<p>There’s lots out there about writing compilers, even fast parsers, but not a lot that focuses on performance of the latter phases of a compiler. Any techniques, resources, information, or advice on writing fast compilers would be appreciated.</p>\n<p>Probably a lot of this doesn’t matter immediately as I can piecemeal replace modules or optimise their performance after getting things working, but I’d like to get ideas in advance and know what to look up instead of asking about each part as I get to it.</p>\n<p>Anyway, my other major constraints are indentation-sensitive syntax, reusability of components for LSPs, formatters, linters, etc. (as well as possibly exposing it in my language’s stdlib), plus quick and easy fairly portable bootstrapping of the compiler itself from any machine with a basic toolchain, which basically forces C on me.</p>\n<p>I’m thinking of creating a whole separate post for that, on how best to avoid getting burnt by undefined behaviour especially. It may even be worth giving up on the goal of easy bootstrapping to avoid writing in such an insanely risky language (albeit with fuzzers, extensive testing of various types, and so on).</p>\n<p>Sticking to the performance question, though, this is getting a bit long, so I’ll post a comment about what I’m thinking and some of the questions that are rattling in my head for each stage.</p>\n"},{"short_id":"bxpwqt","title":"I Read All Of Cloudflare's Claude-Generated Commits","url":"https://www.maxemitchell.com/writings/i-read-all-of-cloudflares-claude-generated-commits/","created_at":"2025-06-07T07:00:09.000-05:00","comment_count":25,"comments_url":"https://lobste.rs/s/bxpwqt/i_read_all_cloudflare_s_claude_generated","submitter_name":"eduard","tags":["vibecoding"],"description":""},{"short_id":"yjshul","title":"How I program with Agents","url":"https://crawshaw.io/blog/programming-with-agents","created_at":"2025-06-09T07:24:44.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/yjshul/how_i_program_with_agents","submitter_name":"mtlynch","tags":["vibecoding"],"description":""},{"short_id":"ydtluy","title":"The Illusion of Thinking: Understanding the Strengths and Limitations of Reasoning Models via the Lens of Problem Complexity","url":"https://machinelearning.apple.com/research/illusion-of-thinking","created_at":"2025-06-08T04:30:44.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/ydtluy/illusion_thinking_understanding","submitter_name":"ninakali","tags":["ai"],"description":""},{"short_id":"a0ja5n","title":"Patterns for failure-free, bounded-space, and bounded-time programming","url":"https://dercuano.github.io/notes/failure-free.html","created_at":"2025-06-11T02:13:56.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/a0ja5n/patterns_for_failure_free_bounded_space","submitter_name":"Forty-Bot","tags":["programming"],"description":""},{"short_id":"v0jei8","title":"Zig-style generics are not well-suited for most languages (2022)","url":"https://typesanitizer.com/blog/zig-generics.html","created_at":"2025-06-10T11:55:45.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/v0jei8/zig_style_generics_are_not_well_suited_for","submitter_name":"runxiyu","tags":["plt","zig"],"description":""},{"short_id":"hrk5y5","title":"Why doesn’t Rust care more about compiler performance?","url":"https://kobzol.github.io/rust/rustc/2025/06/09/why-doesnt-rust-care-more-about-compiler-performance.html","created_at":"2025-06-09T13:11:51.000-05:00","comment_count":40,"comments_url":"https://lobste.rs/s/hrk5y5/why_doesn_t_rust_care_more_about_compiler","submitter_name":"ajdecon","tags":["rust"],"description":""},{"short_id":"thtgzl","title":"GenAI Criticism and Moral Quandaries","url":"https://lucumr.pocoo.org/2025/6/10/genai-criticism/","created_at":"2025-06-11T02:12:37.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/thtgzl/genai_criticism_moral_quandaries","submitter_name":"hackguy","tags":["culture","vibecoding"],"description":""},{"short_id":"h0pge0","title":"container: tool for creating and running Linux containers using lightweight virtual machines on a Mac","url":"https://github.com/apple/container","created_at":"2025-06-09T17:14:11.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/h0pge0/container_tool_for_creating_running","submitter_name":"hauleth","tags":["linux","mac","virtualization"],"description":""},{"short_id":"dfhenp","title":"WebAssembly Troubles part 4: Microwasm (2019)","url":"http://troubles.md/microwasm/","created_at":"2025-06-29T04:01:34.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/dfhenp/webassembly_troubles_part_4_microwasm","submitter_name":"kylewlacy","tags":["compilers","wasm"],"description":""},{"short_id":"yvkyke","title":"Memory Safe Languages: Reducing Vulnerabilities in Modern Software Development","url":"https://media.defense.gov/2025/Jun/23/2003742198/-1/-1/0/CSI_MEMORY_SAFE_LANGUAGES_REDUCING_VULNERABILITIES_IN_MODERN_SOFTWARE_DEVELOPMENT.PDF","created_at":"2025-06-28T12:50:58.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/yvkyke/memory_safe_languages_reducing","submitter_name":"eatonphil","tags":["pdf","plt","security"],"description":""},{"short_id":"72hbqg","title":"\"Why is the Rust compiler so slow?\"","url":"https://sharnoff.io/blog/why-rust-compiler-slow","created_at":"2025-06-26T10:56:58.000-05:00","comment_count":20,"comments_url":"https://lobste.rs/s/72hbqg/why_is_rust_compiler_so_slow","submitter_name":"ohrv","tags":["performance","rust"],"description":""},{"short_id":"vw3pwh","title":"Box combinators","url":"https://mmapped.blog/posts/41-box-combinators","created_at":"2025-06-26T03:10:19.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/vw3pwh/box_combinators","submitter_name":"matklad","tags":["programming"],"description":""},{"short_id":"tc2s00","title":"Weird expressions in rust","url":"https://www.wakunguma.com/blog/rust-weird-expr","created_at":"2025-06-26T09:03:43.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/tc2s00/weird_expressions_rust","submitter_name":"algernon","tags":["rust"],"description":""},{"short_id":"qjjehn","title":"Notes on type inference and polymorphism","url":"https://blog.snork.dev/posts/notes-on-type-inference-and-polymorphism.html","created_at":"2025-06-26T02:43:23.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/qjjehn/notes_on_type_inference_polymorphism","submitter_name":"chreke","tags":["plt"],"description":""},{"short_id":"bgobdd","title":"How much code does that proc macro generate?","url":"https://nnethercote.github.io/2025/06/26/how-much-code-does-that-proc-macro-generate.html","created_at":"2025-06-26T02:32:28.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/bgobdd/how_much_code_does_proc_macro_generate","submitter_name":"asb","tags":["rust"],"description":""},{"short_id":"gf5aiw","title":"Reflecting JSON into C++ Objects at compile time","url":"https://brevzin.github.io/c++/2025/06/26/json-reflection/","created_at":"2025-06-26T10:25:26.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/gf5aiw/reflecting_json_into_c_objects_at_compile","submitter_name":"raymii","tags":["c++"],"description":""},{"short_id":"wfz7qh","title":"Solving `UK Passport Application` with Haskell","url":"https://jameshaydon.github.io/passport/","created_at":"2025-06-28T18:04:25.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/wfz7qh/solving_uk_passport_application_with","submitter_name":"jameshh","tags":["haskell","programming"],"description":""},{"short_id":"wahapd","title":"Inequality Union Finds: Baby Steps to Refinement E-graphs","url":"https://www.philipzucker.com/le_find/","created_at":"2025-07-02T12:15:03.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/wahapd/inequality_union_finds_baby_steps","submitter_name":"philzook","tags":["formalmethods","plt"],"description":""},{"short_id":"okcpex","title":"Programming as Theory Building","url":"https://pablo.rauzy.name/dev/naur1985programming.pdf","created_at":"2025-07-02T12:49:24.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/okcpex/programming_as_theory_building","submitter_name":"mysticmode","tags":["pdf","plt"],"description":""},{"short_id":"lsmcfv","title":"Tree-Structured Concurrency II: Replacing Background Tasks With Actors","url":"https://blog.yoshuawuyts.com/replacing-tasks-with-actors/","created_at":"2025-07-02T13:45:18.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/lsmcfv/tree_structured_concurrency_ii","submitter_name":"asb","tags":["rust"],"description":""},{"short_id":"uu3keo","title":"Parsing Layout, or: Haskell's Syntax is a Mess","url":"https://amelia.how/posts/parsing-layout.html","created_at":"2025-07-01T11:52:09.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/uu3keo/parsing_layout_haskell_s_syntax_is_mess","submitter_name":"abhin4v","tags":["haskell"],"description":""},{"short_id":"wfams6","title":"Awesome Emacs on macOS","url":"https://xenodium.com/awesome-emacs-on-macos","created_at":"2025-05-27T14:27:51.000-05:00","comment_count":20,"comments_url":"https://lobste.rs/s/wfams6/awesome_emacs_on_macos","submitter_name":"xenodium","tags":["emacs","mac"],"description":""},{"short_id":"cbd7rn","title":"Just make it scale: An Aurora DSQL story","url":"https://www.allthingsdistributed.com/2025/05/just-make-it-scale-an-aurora-dsql-story.html","created_at":"2025-05-27T15:19:53.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/cbd7rn/just_make_it_scale_aurora_dsql_story","submitter_name":"mjb","tags":["databases","distributed","rust"],"description":""},{"short_id":"y5kllu","title":"MCP explained without hype or fluff","url":"https://blog.nilenso.com/blog/2025/05/12/mcp-explained-without-hype-or-fluff/","created_at":"2025-05-27T04:49:00.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/y5kllu/mcp_explained_without_hype_fluff","submitter_name":"mogambo1","tags":["vibecoding"],"description":""},{"short_id":"ispr3u","title":"Async Traits Can Be Directly Backed By Manual Future Impls","url":"https://blog.yoshuawuyts.com/async-traits-can-be-directly-backed-by-manual-future-impls/","created_at":"2025-05-27T11:29:38.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/ispr3u/async_traits_can_be_directly_backed_by","submitter_name":"isuffix","tags":["rust"],"description":""},{"short_id":"9qt9tf","title":"Type-level Bounded Recursion in Rust","url":"https://catgirl.ai/log/typelevel-bounded-recursion/","created_at":"2025-05-26T05:10:04.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/9qt9tf/type_level_bounded_recursion_rust","submitter_name":"calvin","tags":["rust"],"description":""},{"short_id":"xuycrp","title":"Large Language Models can run tools in your terminal with LLM 0.26","url":"https://simonwillison.net/2025/May/27/llm-tools/","created_at":"2025-05-27T17:12:10.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/xuycrp/large_language_models_can_run_tools_your","submitter_name":"simonw","tags":["vibecoding"],"description":""},{"short_id":"loydfp","title":"A break from programming languages","url":"https://lexi-lambda.github.io/blog/2025/05/29/a-break-from-programming-languages/","created_at":"2025-05-29T11:52:45.000-05:00","comment_count":23,"comments_url":"https://lobste.rs/s/loydfp/break_from_programming_languages","submitter_name":"soareschen","tags":["person","plt"],"description":""},{"short_id":"giokgl","title":"Systems Correctness Practices at Amazon Web Services","url":"https://cacm.acm.org/practice/systems-correctness-practices-at-amazon-web-services/","created_at":"2025-05-29T13:28:18.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/giokgl/systems_correctness_practices_at_amazon","submitter_name":"mjb","tags":["formalmethods","testing"],"description":""},{"short_id":"42qb2p","title":"I am disappointed in the AI discourse","url":"https://steveklabnik.com/writing/i-am-disappointed-in-the-ai-discourse/","created_at":"2025-05-28T12:35:48.000-05:00","comment_count":285,"comments_url":"https://lobste.rs/s/42qb2p/i_am_disappointed_ai_discourse","submitter_name":"steveklabnik","tags":["culture","vibecoding"],"description":"<p>Yeah I know this place is generally super anti-AI. But I figured it’s dishonest to not also post it here. I’d love to see more nuanced posts on this topic here.</p>\n"},{"short_id":"029ntw","title":"parking_lot: ffffffffffffffff","url":"https://fly.io/blog/parking-lot-ffffffffffffffff/","created_at":"2025-05-28T17:02:47.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/029ntw/parking_lot_ffffffffffffffff","submitter_name":"jparise","tags":["debugging","rust"],"description":""},{"short_id":"1qmcac","title":"Tools built on tree-sitter's concrete syntax trees","url":"https://www.scannedinavian.com/tools-built-on-tree-sitters-concrete-syntax-trees.html","created_at":"2025-05-31T17:39:28.000-05:00","comment_count":30,"comments_url":"https://lobste.rs/s/1qmcac/tools_built_on_tree_sitter_s_concrete","submitter_name":"shapr","tags":["compilers","editors","practices"],"description":""},{"short_id":"t9ig3o","title":"Types of Types: Common to Exotic","url":"https://www.stephendiehl.com/posts/types_of_types/","created_at":"","comment_count":4,"comments_url":"https://lobste.rs/s/t9ig3o/types_types_common_exotic","submitter_name":"abhin4v","tags":["plt"],"description":""},{"short_id":"obxxdr","title":"Reflections on Haskell and Rust","url":"https://academy.fpblock.com/blog/rust-haskell-reflections/","created_at":"","comment_count":31,"comments_url":"https://lobste.rs/s/obxxdr/reflections_on_haskell_rust","submitter_name":"soareschen","tags":["programming","rust","haskell"],"description":""},{"short_id":"cdrqny","title":"Tools: Code Is All You Need","url":"https://lucumr.pocoo.org/2025/7/3/tools/","created_at":"","comment_count":0,"comments_url":"https://lobste.rs/s/cdrqny/tools_code_is_all_you_need","submitter_name":"hongminhee","tags":["vibecoding"],"description":""},{"short_id":"52gism","title":"The scary and surprisingly deep rabbit hole of Rust's temporaries","url":"https://taping-memory.dev/temporaries-rabbit-hole/","created_at":"","comment_count":2,"comments_url":"https://lobste.rs/s/52gism/scary_surprisingly_deep_rabbit_hole_rust","submitter_name":"ohrv","tags":["rust"],"description":""},{"short_id":"baio5y","title":"The Tree Borrows paper is finally published","url":"https://www.ralfj.de/blog/2025/07/07/tree-borrows-paper.html","created_at":"2025-07-09T03:20:49.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/baio5y/tree_borrows_paper_is_finally_published","submitter_name":"soareschen","tags":["formalmethods","plt","rust"],"description":""},{"short_id":"cyxkzl","title":"WebAssembly: Yes, but for What?","url":"https://queue.acm.org/detail.cfm?id=3746171","created_at":"2025-07-08T03:32:45.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/cyxkzl/webassembly_yes_for_what","submitter_name":"fanf","tags":["wasm"],"description":""},{"short_id":"cga7nb","title":"Oregon Programming Languages Summer School (OPLSS) 2025: Types, Logic, and Formal Methods","url":"https://www.cs.uoregon.edu/research/summerschool/summer25/topics.php","created_at":"2025-07-09T06:29:05.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/cga7nb/oregon_programming_languages_summer","submitter_name":"soareschen","tags":["education","formalmethods","plt","video"],"description":""},{"short_id":"rfsseb","title":"The case against which-key: a polemic","url":"https://www.matem.unam.mx/~omar/apropos-emacs.html#the-case-against-which-key-a-polemic","created_at":"2025-07-08T06:08:27.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/rfsseb/case_against_which_key_polemic","submitter_name":"slondr","tags":["emacs"],"description":""},{"short_id":"rvmew5","title":"Deterministic Simulation Testing in Rust: A Theater Of State Machines","url":"https://www.polarsignals.com/blog/posts/2025/07/08/dst-rust","created_at":"2025-07-08T09:16:50.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/rvmew5/deterministic_simulation_testing_rust","submitter_name":"eatonphil","tags":["databases","distributed","rust","testing"],"description":""},{"short_id":"ccvkpv","title":"“Bad Apple!!” But It’s 3288 Lean Tactics Spamming VSCode","url":"https://unnamed.website/posts/bad-apple-lean-tactic/","created_at":"","comment_count":0,"comments_url":"https://lobste.rs/s/ccvkpv/bad_apple_it_s_3288_lean_tactics_spamming","submitter_name":"eBPF","tags":["graphics","formalmethods"],"description":""},{"short_id":"nree33","title":"Unified Memory Management","url":"https://buttondown.com/jaffray/archive/unified-memory-management/","created_at":"","comment_count":0,"comments_url":"https://lobste.rs/s/nree33/unified_memory_management","submitter_name":"amw-zero","tags":["databases"],"description":""},{"short_id":"plwg9q","title":"Variadic Generics ideas that won’t work for Rust","url":"https://poignardazur.github.io//2025/07/09/variadic-generics-dead-ends/","created_at":"2025-07-09T12:30:54.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/plwg9q/variadic_generics_ideas_won_t_work_for","submitter_name":"asb","tags":["plt","rust"],"description":""},{"short_id":"ak9mmk","title":"MicroHs, a tiny Haskell Compiler","url":"https://www.youtube.com/watch?v=SJwvPEq4Mok","created_at":"2025-07-09T17:55:52.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/ak9mmk/microhs_tiny_haskell_compiler","submitter_name":"pom","tags":["compilers","haskell","video"],"description":""},{"short_id":"fvorwd","title":"(Quite) A Few Words About Async","url":"https://yoric.github.io/post/quite-a-few-words-about-async/","created_at":"2025-07-09T11:53:10.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/fvorwd/quite_few_words_about_async","submitter_name":"rrampage","tags":["distributed","programming"],"description":""},{"short_id":"byp59z","title":"Programming Language Theory has a public relations problem","url":"https://happyfellow.bearblog.dev/programming-language-theory-has-a-public-relations-problem/","created_at":"2025-07-13T15:34:28.000-05:00","comment_count":30,"comments_url":"https://lobste.rs/s/byp59z/programming_language_theory_has_public","submitter_name":"ucirello","tags":["plt"],"description":""},{"short_id":"mtcsug","title":"Zig's New Async I/O","url":"https://kristoff.it/blog/zig-new-async-io/","created_at":"2025-07-12T19:13:27.000-05:00","comment_count":51,"comments_url":"https://lobste.rs/s/mtcsug/zig_s_new_async_i_o","submitter_name":"jparise","tags":["zig"],"description":""},{"short_id":"rnwozv","title":"detour: A detour through the Linux dynamic linker","url":"https://github.com/graphitemaster/detour","created_at":"2025-07-13T11:30:34.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/rnwozv/detour_detour_through_linux_dynamic","submitter_name":"aminom","tags":["c","linux"],"description":""},{"short_id":"hul45q","title":"constrained languages are easier to optimize","url":"https://jyn.dev/constrained-languages-are-easier-to-optimize/","created_at":"2025-07-12T21:28:06.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/hul45q/constrained_languages_are_easier","submitter_name":"calvin","tags":["plt"],"description":""},{"short_id":"oqaxxt","title":"Hacking coroutines into C","url":"https://wiomoc.de/misc/posts/hacking_coroutines_into_c.html","created_at":"2025-07-12T20:12:41.000-05:00","comment_count":12,"comments_url":"https://lobste.rs/s/oqaxxt/hacking_coroutines_into_c","submitter_name":"jmillikin","tags":["c"],"description":""},{"short_id":"x9s2mu","title":"Store tags after payloads","url":"https://www.scattered-thoughts.net/writing/store-tags-after-payloads/","created_at":"2025-07-13T21:02:46.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/x9s2mu/store_tags_after_payloads","submitter_name":"jamii","tags":["plt"],"description":""},{"short_id":"qov0vo","title":"Row Polymorphic Programming","url":"https://www.stranger.systems/posts/by-slug/row-polymorphic-programming.html","created_at":"2025-07-14T13:46:44.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/qov0vo/row_polymorphic_programming","submitter_name":"fanf","tags":["plt"],"description":""},{"short_id":"q6comq","title":"Binding Application in Idris","url":"https://andrevidela.com/blog/2025/binding-application/","created_at":"2025-07-14T09:23:29.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/q6comq/binding_application_idris","submitter_name":"ehamberg","tags":["plt"],"description":""},{"short_id":"goyein","title":"Automerge 3.0","url":"https://automerge.github.io/blog/automerge-3/","created_at":"2025-07-15T03:13:21.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/goyein/automerge_3_0","submitter_name":"ehamberg","tags":["distributed","release"],"description":""},{"short_id":"c4yg4y","title":"A distributed systems reliability glossary","url":"https://antithesis.com/resources/reliability_glossary/","created_at":"2025-07-15T10:05:55.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/c4yg4y/distributed_systems_reliability","submitter_name":"eatonphil","tags":["distributed","testing"],"description":""},{"short_id":"iclgb7","title":"\"Bypassing\" specialization in Rust or How I Learned to Stop Worrying and Love Function Pointers","url":"https://oakchris1955.eu/posts/bypassing_specialization/","created_at":"2025-07-17T02:24:11.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/iclgb7/bypassing_specialization_rust_how_i","submitter_name":"asb","tags":["rust"],"description":""},{"short_id":"u3ywxf","title":"A Rust shaped hole","url":"https://mnvr.in/rust","created_at":"2025-07-17T00:43:20.000-05:00","comment_count":29,"comments_url":"https://lobste.rs/s/u3ywxf/rust_shaped_hole","submitter_name":"runxiyu","tags":["rust"],"description":""},{"short_id":"tlgh1u","title":"Designing Kotlin Beyond Type Inference","url":"https://youtu.be/P0mo8Tzrapo","created_at":"2025-07-17T23:46:09.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/tlgh1u/designing_kotlin_beyond_type_inference","submitter_name":"snej","tags":["kotlin","plt","video"],"description":""},{"short_id":"dm7pow","title":"My favorite use-case for AI is writing logs","url":"https://newsletter.vickiboykis.com/archive/my-favorite-use-case-for-ai-is-writing-logs/","created_at":"2025-07-17T18:09:06.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/dm7pow/my_favorite_use_case_for_ai_is_writing_logs","submitter_name":"carlana","tags":["vibecoding"],"description":""},{"short_id":"0ciz1n","title":"How bad are search results? Let's compare Google, Bing, Marginalia, Kagi, Mwmbl, and ChatGPT","url":"https://danluu.com/seo-spam/","created_at":"2023-12-30T21:57:28.000-06:00","comment_count":35,"comments_url":"https://lobste.rs/s/0ciz1n/how_bad_are_search_results_let_s_compare","submitter_name":"calvin","tags":["web"],"description":""},{"short_id":"eru89e","title":"Some notes on using nix","url":"https://jvns.ca/blog/2023/02/28/some-notes-on-using-nix/","created_at":"2023-03-01T08:24:25.000-06:00","comment_count":29,"comments_url":"https://lobste.rs/s/eru89e/some_notes_on_using_nix","submitter_name":"mrfabbri","tags":["nix"],"description":""},{"short_id":"gbgq6h","title":"What are temporal and spatial memory safety?","url":"https://blog.yoshuawuyts.com/temporal-spatial-memory-safety/","created_at":"2024-12-18T03:17:01.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/gbgq6h/what_are_temporal_spatial_memory_safety","submitter_name":"op","tags":["programming"],"description":""},{"short_id":"isl4u6","title":"Demystifying monads in Rust through property-based testing","url":"https://sunshowers.io/posts/monads-through-pbt/","created_at":"2025-02-19T18:21:16.000-06:00","comment_count":10,"comments_url":"https://lobste.rs/s/isl4u6/demystifying_monads_rust_through","submitter_name":"sunshowers","tags":["rust","testing"],"description":""},{"short_id":"ktwqmj","title":"Typst 0.13 is out now: Experimental HTML export, semantic paragraphs, and more","url":"https://typst.app/blog/2025/typst-0.13/","created_at":"2025-02-19T13:11:22.000-06:00","comment_count":16,"comments_url":"https://lobste.rs/s/ktwqmj/typst_0_13_is_out_now_experimental_html","submitter_name":"isuffix","tags":["release"],"description":""},{"short_id":"jqyzio","title":"Five Kinds of Nondeterminism","url":"https://buttondown.com/hillelwayne/archive/five-kinds-of-nondeterminism/","created_at":"2025-02-20T08:21:48.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/jqyzio/five_kinds_nondeterminism","submitter_name":"eBPF","tags":["plt"],"description":""},{"short_id":"d9lnbi","title":"Towards A Simple and Expressive Query Language","url":"https://www.youtube.com/watch?v=TBAf5l1RmcA","created_at":"2025-02-18T21:41:14.000-06:00","comment_count":7,"comments_url":"https://lobste.rs/s/d9lnbi/towards_simple_expressive_query","submitter_name":"typesanitizer","tags":["databases","video"],"description":"<p>Related paper:</p>\n<ul>\n<li><a href=\"https://www.cidrdb.org/cidr2024/papers/p48-neumann.pdf\" rel=\"ugc\">A Critique of Modern SQL And A Proposal Towards A Simple and\nExpressive Query Language (PDF)</a></li>\n</ul>\n"},{"short_id":"mazfvy","title":"Neut Programming Language","url":"https://vekatze.github.io/neut/overview.html","created_at":"2025-02-21T11:44:13.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/mazfvy/neut_programming_language","submitter_name":"Hasnep","tags":["ml","plt"],"description":""},{"short_id":"hfplla","title":"My go-to C++ code for asynchronous work processing on a separate thread","url":"https://raymii.org/s/software/My_go-to_Cpp_code_for_asynchronous_work_processing_on_a_separate_thread.html","created_at":"2024-12-17T14:35:16.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/hfplla/my_go_c_code_for_asynchronous_work","submitter_name":"raymii","tags":["c++"],"description":""},{"short_id":"n3be1g","title":"Carbon Copy Newsletter No.5","url":"https://github.com/carbon-language/carbon-lang/discussions/4694","created_at":"2024-12-17T01:47:42.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/n3be1g/carbon_copy_newsletter_no_5","submitter_name":"chandlerc","tags":["compilers","plt"],"description":""},{"short_id":"la8auv","title":"Garbage Collected Smart Pointers in Rust via Concurrent Cycle Collection","url":"https://maplant.com/2024-12-13-Scheme-to-the-Spec-Part-I:-Concurrent-Cycle-Collection.html","created_at":"2024-12-13T11:48:04.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/la8auv/garbage_collected_smart_pointers_rust","submitter_name":"mplant","tags":["compsci","plt","rust"],"description":""},{"short_id":"vyhyka","title":"Firefox has surpassed Chrome on Speedometer","url":"https://treeherder.mozilla.org/perfherder/graphs?timerange=31536000&series=mozilla-central,3735773,1,13&series=mozilla-central,3412459,1,13","created_at":"2023-07-18T07:33:06.000-05:00","comment_count":63,"comments_url":"https://lobste.rs/s/vyhyka/firefox_has_surpassed_chrome_on","submitter_name":"toastal","tags":["browsers","performance"],"description":""},{"short_id":"z6hmgx","title":"So you want to be a proof engineer?","url":"http://proofcraft.org/blog/proof-engineer-reading.html","created_at":"2023-08-02T08:35:22.000-05:00","comment_count":20,"comments_url":"https://lobste.rs/s/z6hmgx/so_you_want_be_proof_engineer","submitter_name":"amw-zero","tags":["formalmethods"],"description":""},{"short_id":"p93jau","title":"The E-graph extraction problem is NP-complete","url":"https://effect.systems/blog/egraph-extraction.html","created_at":"2023-06-24T11:08:19.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/p93jau/e_graph_extraction_problem_is_np_complete","submitter_name":"Corbin","tags":["compilers","compsci","math"],"description":""},{"short_id":"rzmnam","title":"CCDetect-lsp: Language-agnostic real-time duplicate code detection LSP server","url":"https://github.com/jakobkhansen/CCDetect-lsp","created_at":"2023-06-10T15:03:47.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/rzmnam/ccdetect_lsp_language_agnostic_real_time","submitter_name":"rudis","tags":["programming"],"description":""},{"short_id":"uhmhum","title":"The Hunt for the Missing Data Type","url":"https://www.hillelwayne.com/post/graph-types/","created_at":"2024-03-04T10:40:55.000-06:00","comment_count":28,"comments_url":"https://lobste.rs/s/uhmhum/hunt_for_missing_data_type","submitter_name":"hwayne","tags":["programming"],"description":""},{"short_id":"uuoilf","title":"JVM/Java: Null-Restricted and Nullable Types","url":"https://bugs.openjdk.org/browse/JDK-8303099","created_at":"2024-08-02T09:04:08.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/uuoilf/jvm_java_null_restricted_nullable_types","submitter_name":"gf0","tags":["java","plt"],"description":""},{"short_id":"c8eahy","title":"What conferences are you all looking forward to?","url":"","created_at":"2023-03-30T07:53:02.000-05:00","comment_count":37,"comments_url":"https://lobste.rs/s/c8eahy/what_conferences_are_you_all_looking","submitter_name":"rtpg","tags":["ask","event"],"description":"<p>With more and more conferences spinning up in person again, are any of you looking forward to venturing out to any during the coming year? Or perhaps participating in a virtual conference that has been going well? I’ve found that participating is pretty motivating, so I would like to find out before I just see posts about the conference the week of.</p>\n"},{"short_id":"enx24i","title":"The gen auto-trait problem","url":"https://blog.yoshuawuyts.com/gen-auto-trait-problem/","created_at":"2025-01-14T12:00:36.000-06:00","comment_count":4,"comments_url":"https://lobste.rs/s/enx24i/gen_auto_trait_problem","submitter_name":"isuffix","tags":["plt","rust"],"description":""},{"short_id":"ctpdvb","title":"Vine: A programming language based on Interaction Nets","url":"https://vine.dev/","created_at":"2025-02-22T16:41:39.000-06:00","comment_count":15,"comments_url":"https://lobste.rs/s/ctpdvb/vine_programming_language_based_on","submitter_name":"ar-nelson","tags":["plt"],"description":""},{"short_id":"y56cym","title":"Investigating a Strange Out-of-Memory Error","url":"https://www.qovery.com/blog/rust-investigating-a-strange-out-of-memory-error/","created_at":"2025-01-15T07:38:58.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/y56cym/investigating_strange_out_memory_error","submitter_name":"itamarst","tags":["debugging","rust"],"description":""},{"short_id":"boa8jf","title":"Fenwick Trees are Awesome","url":"https://unnamed.website/posts/fenwick-trees-awesome/","created_at":"2025-01-15T10:56:13.000-06:00","comment_count":6,"comments_url":"https://lobste.rs/s/boa8jf/fenwick_trees_are_awesome","submitter_name":"slightknack","tags":["programming"],"description":""},{"short_id":"ntia7t","title":"Why Checked Exceptions Failed","url":"https://borretti.me/article/why-checked-exceptions-failed","created_at":"2023-11-01T07:47:37.000-05:00","comment_count":42,"comments_url":"https://lobste.rs/s/ntia7t/why_checked_exceptions_failed","submitter_name":"crmsnbleyd","tags":["java","plt"],"description":""},{"short_id":"9lppza","title":"Mapping High Level Constructs to LLVM IR","url":"https://mapping-high-level-constructs-to-llvm-ir.readthedocs.io","created_at":"2024-07-17T02:19:08.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/9lppza/mapping_high_level_constructs_llvm_ir","submitter_name":"lucic71","tags":["compilers"],"description":""},{"short_id":"ndu2xo","title":"So You Want To Build A Browser Engine","url":"https://robert.ocallahan.org/2024/06/browser-engine.html","created_at":"2024-06-09T09:32:06.000-05:00","comment_count":59,"comments_url":"https://lobste.rs/s/ndu2xo/so_you_want_build_browser_engine","submitter_name":"freddyb","tags":["browsers"],"description":""},{"short_id":"hvob9g","title":"Fun Friday: what got you into programming?","url":"","created_at":"2024-03-22T11:02:20.000-05:00","comment_count":94,"comments_url":"https://lobste.rs/s/hvob9g/fun_friday_what_got_you_into_programming","submitter_name":"hwayne","tags":["ask","programming"],"description":"<p>Why did you start programming, and why did you keep with it?</p>\n<p>(Promise this isn’t gonna be a regular thing!)</p>\n"},{"short_id":"s7qmxq","title":"Lamport clocks","url":"https://blog.fponzi.me/2024-02-02-lamport-clocks.html","created_at":"2024-02-05T16:20:29.000-06:00","comment_count":10,"comments_url":"https://lobste.rs/s/s7qmxq/lamport_clocks","submitter_name":"FedericoPonzi","tags":["distributed","formalmethods"],"description":""},{"short_id":"lxa416","title":"Semgrep: a static analysis journey","url":"https://semgrep.dev/blog/2021/semgrep-a-static-analysis-journey/","created_at":"2023-09-23T18:49:50.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/lxa416/semgrep_static_analysis_journey","submitter_name":"andyc","tags":["compilers","plt"],"description":""},{"short_id":"xqch06","title":"Generalized Autoref-Based Specialization (2019)","url":"https://lukaskalbertodt.github.io/2019/12/05/generalized-autoref-based-specialization.html","created_at":"2024-06-20T21:12:23.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/xqch06/generalized_autoref_based","submitter_name":"5d22b","tags":["rust"],"description":""},{"short_id":"ffszer","title":"Whither CockroachDB?","url":"https://rfd.shared.oxide.computer/rfd/0508","created_at":"2024-08-16T17:14:56.000-05:00","comment_count":35,"comments_url":"https://lobste.rs/s/ffszer/whither_cockroachdb","submitter_name":"simonw","tags":["culture","databases"],"description":""},{"short_id":"m9bhxk","title":"Beyond Ctrl-C: The dark corners of Unix signal handling","url":"https://sunshowers.io/posts/beyond-ctrl-c-signals/","created_at":"2024-09-04T00:25:26.000-05:00","comment_count":29,"comments_url":"https://lobste.rs/s/m9bhxk/beyond_ctrl_c_dark_corners_unix_signal","submitter_name":"kivikakk","tags":["rust","unix"],"description":""},{"short_id":"zfcis3","title":"Shell History Is Your Best Productivity Tool","url":"https://martinheinz.dev/blog/110","created_at":"2024-04-10T06:46:54.000-05:00","comment_count":68,"comments_url":"https://lobste.rs/s/zfcis3/shell_history_is_your_best_productivity","submitter_name":"antonz","tags":["linux"],"description":""},{"short_id":"pcmwh1","title":"More Software Projects need Defenses of Design","url":"https://buttondown.email/hillelwayne/archive/more-software-projects-need-defenses-of-design/","created_at":"2023-07-19T02:59:11.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/pcmwh1/more_software_projects_need_defenses","submitter_name":"lim","tags":["practices"],"description":""},{"short_id":"tfuufl","title":"A quick look at destination-driven code generation","url":"https://bernsteinbear.com/blog/ddcg/","created_at":"2023-11-11T11:36:50.000-06:00","comment_count":4,"comments_url":"https://lobste.rs/s/tfuufl/quick_look_at_destination_driven_code","submitter_name":"tekknolagi","tags":["compilers","plt","python"],"description":""},{"short_id":"ndkycy","title":"Why Split Lexing and Parsing Into Two Separate Phases?","url":"https://tratt.net/laurie/blog/2023/why_split_lexing_and_parsing_into_two_separate_phases.html","created_at":"2023-05-02T05:19:03.000-05:00","comment_count":41,"comments_url":"https://lobste.rs/s/ndkycy/why_split_lexing_parsing_into_two","submitter_name":"ltratt","tags":["compilers","plt"],"description":""},{"short_id":"jrp9gv","title":"Small VMs & Coroutines","url":"https://blog.dziban.net/coroutines/","created_at":"2023-01-17T17:12:33.000-06:00","comment_count":24,"comments_url":"https://lobste.rs/s/jrp9gv/small_vms_coroutines","submitter_name":"marcecoll","tags":["assembly"],"description":""},{"short_id":"kswxq2","title":"Ownership","url":"https://without.boats/blog/ownership/","created_at":"2024-06-22T07:04:41.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/kswxq2/ownership","submitter_name":"vi_mi","tags":["plt","rust"],"description":""},{"short_id":"jmy84s","title":"Fish 4.0: The Fish Of Theseus","url":"https://fishshell.com/blog/rustport/","created_at":"2024-12-28T17:13:40.000-06:00","comment_count":46,"comments_url":"https://lobste.rs/s/jmy84s/fish_4_0_fish_theseus","submitter_name":"joshsharp","tags":["linux","rust"],"description":""},{"short_id":"yas6et","title":"How Multi-User Dungeons Taught Me To Code","url":"https://tashian.com/articles/how-i-learned-to-program/","created_at":"2024-12-29T16:06:06.000-06:00","comment_count":6,"comments_url":"https://lobste.rs/s/yas6et/how_multi_user_dungeons_taught_me_code","submitter_name":"calvin","tags":["historical"],"description":""},{"short_id":"i1rxgb","title":"requiem for a stringref","url":"https://wingolog.org/archives/2023/10/19/requiem-for-a-stringref","created_at":"2023-10-19T06:05:28.000-05:00","comment_count":34,"comments_url":"https://lobste.rs/s/i1rxgb/requiem_for_stringref","submitter_name":"flockofbirbs","tags":["wasm"],"description":""},{"short_id":"qgoksp","title":"Thinking about functional programming","url":"https://notes.eatonphil.com/2023-08-15-thinking-about-functional-programming.html","created_at":"2023-08-15T20:20:57.000-05:00","comment_count":23,"comments_url":"https://lobste.rs/s/qgoksp/thinking_about_functional_programming","submitter_name":"eatonphil","tags":["plt"],"description":""},{"short_id":"rsbjdu","title":"Stuff I learnt in 2022","url":"https://bollu.github.io/stuff-i-learnt-in-2022.html","created_at":"2023-01-01T10:47:03.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/rsbjdu/stuff_i_learnt_2022","submitter_name":"bollu","tags":["plt"],"description":""},{"short_id":"dnk3o6","title":"Debugging a rustc segfault on illumos","url":"https://sunshowers.io/posts/rustc-segfault-illumos/","created_at":"2024-08-04T18:12:08.000-05:00","comment_count":41,"comments_url":"https://lobste.rs/s/dnk3o6/debugging_rustc_segfault_on_illumos","submitter_name":"sunshowers","tags":["debugging","illumos","rust"],"description":""},{"short_id":"wy4jd4","title":"Bytecode VMs in surprising places","url":"https://dubroy.com/blog/bytecode-vms-in-surprising-places/","created_at":"2024-04-30T09:18:47.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/wy4jd4/bytecode_vms_surprising_places","submitter_name":"jado","tags":["compilers"],"description":""},{"short_id":"pdqmcq","title":"Cheating is All You Need","url":"https://about.sourcegraph.com/blog/cheating-is-all-you-need","created_at":"2023-03-23T08:30:53.000-05:00","comment_count":55,"comments_url":"https://lobste.rs/s/pdqmcq/cheating_is_all_you_need","submitter_name":"mrfabbri","tags":["ai"],"description":""},{"short_id":"pyrmyn","title":"I made a multi-language programmable linter","url":"https://github.com/sylver-dev/sylver-cli","created_at":"2023-01-26T09:51:02.000-06:00","comment_count":20,"comments_url":"https://lobste.rs/s/pyrmyn/i_made_multi_language_programmable","submitter_name":"sevender","tags":["python"],"description":"<p>Sylver is an open-source multi-language linter that allows the user to define custom rules by using a small built-in query language (<a href=\"https://docs.sylver.dev/docs/dsl/sylq\" rel=\"ugc\">https://docs.sylver.dev/docs/dsl/sylq</a>).</p>\n<p>Besides custom linting rules, the user can add support for an entire programming language by using a custom grammar description language. (more info at <a href=\"https://docs.sylver.dev/docs/dsl/meta-lang\" rel=\"ugc\">https://docs.sylver.dev/docs/dsl/meta-lang</a>).</p>\n<p>I’m in the process of building a registry of rulesets for different languages so that the tool can also be approached as a traditional linter. The first rulesets for Python are available at <a href=\"https://github.com/sylver-dev/rulesets\" rel=\"ugc\">https://github.com/sylver-dev/rulesets</a>.</p>\n"},{"short_id":"cryfiu","title":"Async Rust Is A Bad Language","url":"https://bitbashing.io/async-rust.html","created_at":"2023-09-08T13:21:28.000-05:00","comment_count":53,"comments_url":"https://lobste.rs/s/cryfiu/async_rust_is_bad_language","submitter_name":"knl","tags":["rust"],"description":""},{"short_id":"g7ejcv","title":"What Goes Around Comes Around... And Around","url":"https://db.cs.cmu.edu/papers/2024/whatgoesaround-sigmodrec2024.pdf","created_at":"2024-07-02T12:24:35.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/g7ejcv/what_goes_around_comes_around_around","submitter_name":"jhd3","tags":["databases","pdf"],"description":"<p>Two decades ago, one of us co-authored a paper commenting on the previous 40 years of data modelling research and development [188]. That paper demonstrated that the relational model (RM) and SQL are the prevailing choice for database management systems (DBMSs), despite efforts to replace either them. Instead, SQL absorbed the best ideas from these alternative approaches.</p>\n<p>We revisit this issue and argue that this same evolution has continued since 2005. Once again there have been repeated efforts to replace either SQL or the RM. But the RM continues to be the dominant data model and SQL has been extended to capture the good ideas from others. As such, we expect more of the same in the future, namely the continued evolution of SQL and relational DBMSs (RDBMSs). We also discuss DBMS implementations and argue that the major advancements have been in the RM systems, primarily driven by changing hardware characteristics.</p>\n<p>( by Michael Stonebraker and  Andrew Pavlo )</p>\n"},{"short_id":"7ooars","title":"Contributing to OCaml: Collective maintenance","url":"https://github.com/ocaml/ocaml/blob/trunk/CONTRIBUTING.md#collective-maintenance","created_at":"2023-09-24T03:27:58.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/7ooars/contributing_ocaml_collective","submitter_name":"gasche","tags":["practices"],"description":""},{"short_id":"4gzl4v","title":"Properly Testing Concurrent Data Structures","url":"https://matklad.github.io/2024/07/05/properly-testing-concurrent-data-structures.html","created_at":"2024-07-05T21:18:47.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/4gzl4v/properly_testing_concurrent_data","submitter_name":"antonz","tags":["performance","rust"],"description":""},{"short_id":"resic9","title":"Will it block?","url":"https://blog.yoshuawuyts.com/what-is-blocking/","created_at":"2024-02-07T11:40:18.000-06:00","comment_count":26,"comments_url":"https://lobste.rs/s/resic9/will_it_block","submitter_name":"vi_mi","tags":["rust"],"description":""},{"short_id":"xjnx95","title":"Distributed Systems Programming Has Stalled","url":"https://www.shadaj.me/writing/distributed-programming-stalled","created_at":"2025-02-27T22:57:17.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/xjnx95/distributed_systems_programming_has","submitter_name":"GrayGnome","tags":["distributed"],"description":""},{"short_id":"abs9fe","title":"Building Query Compilers","url":"https://pi3.informatik.uni-mannheim.de/~moer/querycompiler.pdf","created_at":"2025-02-27T17:00:31.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/abs9fe/building_query_compilers","submitter_name":"squadette","tags":["databases","pdf"],"description":""},{"short_id":"olaala","title":"A Mechanically Verified Garbage Collector for OCaml","url":"https://kcsrk.info/papers/verifiedgc_feb_25.pdf","created_at":"2025-03-02T20:36:36.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/olaala/mechanically_verified_garbage","submitter_name":"rrampage","tags":["formalmethods","ml","pdf"],"description":""},{"short_id":"txndlk","title":"Our optimizers need a rethink","url":"https://typesanitizer.com/blog/rethink-optimizers.html","created_at":"2024-10-23T03:06:25.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/txndlk/our_optimizers_need_rethink","submitter_name":"brendan","tags":["compilers","databases"],"description":""},{"short_id":"9m59pe","title":"What’s in an e-graph?","url":"https://bernsteinbear.com/blog/whats-in-an-egraph/","created_at":"2024-09-12T09:56:23.000-05:00","comment_count":12,"comments_url":"https://lobste.rs/s/9m59pe/what_s_e_graph","submitter_name":"tekknolagi","tags":["compilers","performance"],"description":""},{"short_id":"57aktx","title":"A Distributed Systems Reading List","url":"https://ferd.ca/a-distributed-systems-reading-list.html","created_at":"2024-02-07T21:36:34.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/57aktx/distributed_systems_reading_list","submitter_name":"facundoolano","tags":["distributed"],"description":""},{"short_id":"ujvpdn","title":"Making OCaml Safe for Performance Engineering","url":"https://youtube.com/watch?v=g3qd4zpm1LA","created_at":"2025-04-03T21:00:48.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/ujvpdn/making_ocaml_safe_for_performance","submitter_name":"alurm","tags":["compilers","ml","performance","slides","video"],"description":""},{"short_id":"1l0iu7","title":"Designing a Distributed SQL Engine: Challenges and Decisions","url":"https://en.oceanbase.com/blog/2596985600","created_at":"2023-12-02T07:31:40.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/1l0iu7/designing_distributed_sql_engine","submitter_name":"av","tags":["databases"],"description":""},{"short_id":"rttzyo","title":"Formal Methods: Just Good Engineering Practice?","url":"https://brooker.co.za/blog/2024/04/17/formal","created_at":"2024-12-23T05:18:08.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/rttzyo/formal_methods_just_good_engineering","submitter_name":"phk","tags":["formalmethods"],"description":""},{"short_id":"vld1by","title":"Fast LLM Inference From Scratch","url":"https://andrewkchan.dev/posts/yalm.html","created_at":"2024-12-22T18:17:09.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/vld1by/fast_llm_inference_from_scratch","submitter_name":"mpweiher","tags":["ai"],"description":""},{"short_id":"lvb2jn","title":"Memory Order in C++ (2022)","url":"https://www.sobyte.net/post/2022-06/cpp-memory-order/","created_at":"2023-08-22T22:44:04.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/lvb2jn/memory_order_c_2022","submitter_name":"alexei_zaripov","tags":["c","c++"],"description":""},{"short_id":"airnde","title":"My spiciest take on tech hiring","url":"https://www.haskellforall.com/2024/06/my-spiciest-take-on-tech-hiring.html","created_at":"2024-06-25T09:29:57.000-05:00","comment_count":54,"comments_url":"https://lobste.rs/s/airnde/my_spiciest_take_on_tech_hiring","submitter_name":"Gabriella439","tags":["programming"],"description":""},{"short_id":"bqvr4r","title":"Data Replication Design Spectrum","url":"https://transactional.blog/blog/2024-data-replication-design-spectrum","created_at":"2024-07-31T11:23:44.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/bqvr4r/data_replication_design_spectrum","submitter_name":"eatonphil","tags":["databases","distributed"],"description":""},{"short_id":"mfbveg","title":"The algebra (and calculus!) of algebraic data types","url":"https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types","created_at":"2024-07-22T04:05:27.000-05:00","comment_count":38,"comments_url":"https://lobste.rs/s/mfbveg/algebra_calculus_algebraic_data_types","submitter_name":"jackdk","tags":["plt"],"description":""},{"short_id":"wtk2rk","title":"Types comparison: Rust -> Zig","url":"https://len.falken.directory/types-rust-zig.html","created_at":"2023-11-04T16:32:35.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/wtk2rk/types_comparison_rust_zig","submitter_name":"LenFalken","tags":["programming","rust","zig"],"description":""},{"short_id":"yhe6ag","title":"The World's Simplest Lock-Free Hash Table (2013)","url":"https://preshing.com/20130605/the-worlds-simplest-lock-free-hash-table/","created_at":"2023-04-23T09:14:29.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/yhe6ag/world_s_simplest_lock_free_hash_table_2013","submitter_name":"matklad","tags":["performance"],"description":""},{"short_id":"kst55f","title":"Kalyn: a self-hosting compiler for x86-64","url":"https://intuitiveexplanations.com/tech/kalyn","created_at":"2023-04-14T09:21:41.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/kst55f/kalyn_self_hosting_compiler_for_x86_64","submitter_name":"river","tags":["compilers"],"description":""},{"short_id":"pedtr9","title":"Pinned places","url":"https://without.boats/blog/pinned-places/","created_at":"2024-07-23T14:23:24.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/pedtr9/pinned_places","submitter_name":"withoutboats","tags":["plt","rust"],"description":""},{"short_id":"rawcyg","title":"On \"Safe\" C++","url":"https://izzys.casa/2024/11/on-safe-cxx/","created_at":"2024-11-19T11:20:51.000-06:00","comment_count":79,"comments_url":"https://lobste.rs/s/rawcyg/on_safe_c","submitter_name":"alper","tags":["c++","rant"],"description":""},{"short_id":"vp7jca","title":"Pin","url":"https://without.boats/blog/pin/","created_at":"2024-07-19T09:07:29.000-05:00","comment_count":23,"comments_url":"https://lobste.rs/s/vp7jca/pin","submitter_name":"withoutboats","tags":["rust"],"description":""},{"short_id":"ltzril","title":"Address Sanitizer Internals","url":"https://blog.gistre.epita.fr/posts/benjamin.peter-2022-10-28-address_sanitizer_internals/","created_at":"2024-06-15T08:40:15.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/ltzril/address_sanitizer_internals","submitter_name":"xoranth","tags":["c","c++","compilers","security"],"description":""},{"short_id":"xkpgwp","title":"Copy Hunting","url":"https://tigerbeetle.com/blog/2023-07-26-copy-hunting/","created_at":"2023-07-26T07:35:36.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/xkpgwp/copy_hunting","submitter_name":"matklad","tags":["compilers","performance","zig"],"description":""},{"short_id":"ohajgb","title":"What's the big deal about Deterministic Simulation Testing?","url":"https://notes.eatonphil.com/2024-08-20-deterministic-simulation-testing.html","created_at":"2024-08-20T06:14:44.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/ohajgb/what_s_big_deal_about_deterministic","submitter_name":"eatonphil","tags":["databases","distributed","testing"],"description":""},{"short_id":"hl5gkk","title":"Why choose async/await over threads?","url":"https://notgull.net/why-not-threads/","created_at":"2024-03-25T01:28:40.000-05:00","comment_count":30,"comments_url":"https://lobste.rs/s/hl5gkk/why_choose_async_await_over_threads","submitter_name":"mpweiher","tags":["programming"],"description":""},{"short_id":"iuf6hn","title":"On Recursion, Continuations and Trampolines","url":"https://eli.thegreenplace.net/2017/on-recursion-continuations-and-trampolines/","created_at":"2023-04-22T16:00:19.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/iuf6hn/on_recursion_continuations_trampolines","submitter_name":"sri","tags":["programming"],"description":""},{"short_id":"zycaco","title":"In 2024, please switch to Firefox","url":"https://roytanck.com/2023/12/23/in-2024-please-switch-to-firefox/","created_at":"2024-01-02T07:30:11.000-06:00","comment_count":135,"comments_url":"https://lobste.rs/s/zycaco/2024_please_switch_firefox","submitter_name":"fab23","tags":["browsers"],"description":""},{"short_id":"urnmru","title":"Challenging projects every programmer should try (2019)","url":"https://austinhenley.com/blog/challengingprojects.html","created_at":"2023-12-25T21:25:49.000-06:00","comment_count":7,"comments_url":"https://lobste.rs/s/urnmru/challenging_projects_every_programmer","submitter_name":"azhenley","tags":["programming"],"description":""},{"short_id":"prowkp","title":"Why Test?","url":"https://jonathan-frere.com/posts/why-test/","created_at":"2024-06-25T07:14:58.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/prowkp/why_test","submitter_name":"matklad","tags":["testing"],"description":""},{"short_id":"4jatzz","title":"Type system of the React compiler","url":"https://www.recompiled.dev/blog/type-system/","created_at":"2024-03-19T10:56:47.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/4jatzz/type_system_react_compiler","submitter_name":"gsathya","tags":["compilers"],"description":""},{"short_id":"ng43it","title":"The looming demise of the 10x developer","url":"https://blog.testdouble.com/posts/2023-07-12-the-looming-demise-of-the-10x-developer/","created_at":"2023-07-13T16:14:01.000-05:00","comment_count":36,"comments_url":"https://lobste.rs/s/ng43it/looming_demise_10x_developer","submitter_name":"stchris","tags":["programming"],"description":""},{"short_id":"nv6o5y","title":"The path to implementing a programming language","url":"https://rainingcomputers.blog/dist/the_path_to_implementing_a_programming_language.md","created_at":"2023-07-15T09:38:21.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/nv6o5y/path_implementing_programming_language","submitter_name":"agent281","tags":["plt"],"description":""},{"short_id":"zuavvm","title":"Big Datatype: why code tools like to be written with fancy types","url":"https://twitchard.github.io/posts/2024-09-10-big-datatype.html","created_at":"2024-09-11T08:24:37.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/zuavvm/big_datatype_why_code_tools_like_be","submitter_name":"twitchard","tags":["programming"],"description":""},{"short_id":"ox82jj","title":"A Fascinating Diversion into Compression","url":"https://github.com/frankmcsherry/blog/blob/master/posts/2024-09-10.md","created_at":"2024-09-11T05:16:01.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/ox82jj/fascinating_diversion_into_compression","submitter_name":"ohrv","tags":["databases","performance","rust"],"description":""},{"short_id":"hcwjcs","title":"Encoding ML-style modules in Rust","url":"https://blog.waleedkhan.name/encoding-ml-style-modules-in-rust/","created_at":"2023-06-17T17:26:27.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/hcwjcs/encoding_ml_style_modules_rust","submitter_name":"arxanas","tags":["ml","plt","rust"],"description":""},{"short_id":"3zbdil","title":"Async/Await Is Real And Can Hurt You","url":"https://trouble.mataroa.blog/blog/asyncawait-is-real-and-can-hurt-you/","created_at":"2024-11-20T05:54:37.000-06:00","comment_count":105,"comments_url":"https://lobste.rs/s/3zbdil/async_await_is_real_can_hurt_you","submitter_name":"airdrop","tags":["rust"],"description":""},{"short_id":"txcnjn","title":"Memory Safe C++","url":"","created_at":"2024-01-08T20:06:00.000-06:00","comment_count":25,"comments_url":"https://lobste.rs/s/txcnjn/memory_safe_c","submitter_name":"inactive-user","tags":["c++","show"],"description":"<p>By now you should have heard that various government agencies are\nissuing clear recommendations against using languages that aren’t\nmemory safe by default. This led many to wonder what the future viability\nof C++ was. I’m an avid C++ programmer but when faced with the reality\nof how software is built, I have to applaud the effort here. Sure,\nmaybe I trust myself to write correct programs but truthfully I simply\nwould feel at least an order of magnitude safer if I knew the\nengineers building critical infrastructure like CT scan machines,\ncommercial airline flight systems, or missile guidance systems were\nforced to use a memory safe language. I think that most reasonable\npeople would admit the same, regretfully or not.</p>\n<p>Anyway I got to wondering if it was possible to write C++ that was\nsafe by default. I know that people on the Chromium team <a href=\"https://docs.google.com/document/u/0/d/e/2PACX-1vSt2VB1zQAJ6JDMaIA9PlmEgBxz2K5Tx6w2JqJNeYCy0gU4aoubdTxlENSKNSrQ2TXqPWcuwtXe6PlO/pub?pli=1\" rel=\"ugc\">investigated\nmodeling the Rust borrow checker using the C++ type\nsystem</a>\nunsuccessfully. There have also been reports written by C++ committee\nmembers about a “safe subset” of the language which feels like complex\nvaporware. It generally seems like the consensus among everyone is\nthat there is no viable or practical path forward to memory safety in\nC++.</p>\n<p>So I thought about it a bit more and came up with a simple (though\nperhaps inefficient) approach to having memory safety in C++ in a way\nthat you can deploy in your projects today, with varying degrees of\ndifficulty. The idea is to provide two additional smart pointer types\nthat mimic <code>unique_ptr</code> and <code>shared_ptr</code> but explicitly check bounds\non pointer dereference. Additionally they annotate the pointer\ndereference operators with <code>[[clang::lifetimebound]]</code>. The combination\nof these two features make it impossible to trigger a use-after-free\nor buffer overflow error at runtime. Here’s the code:</p>\n<pre><code class=\"language-C++\">#ifndef SAFE_PTR_H\n#define SAFE_PTR_H\n\n#include &lt;cstddef&gt;\n#include &lt;cstdlib&gt;\n\n#include &lt;memory&gt;\n#include &lt;new&gt;\n#include &lt;type_traits&gt;\n#include &lt;utility&gt;\n\n#ifdef __clang__\n#define SAFE_PTR_LIFETIME_BOUND [[clang::lifetimebound]]\n#else\n#warning \"No lifetimebound annotation available, code may contain memory vulnerabilities\"\n#define SAFE_PTR_LIFETIME_BOUND\n#endif\n\nnamespace safe_ptr {\n\ntemplate &lt;class PointerType&gt;\nclass safe_ptr_template {\n  PointerType _ptr;\n  std::size_t _size;\n\n  using element_type = typename PointerType::element_type;\n\n  safe_ptr_template(PointerType ptr, std::size_t size) noexcept\n    : _ptr(std::move(ptr)), _size(std::move(size)) {\n  }\n\npublic:\n  template &lt;class... Args&gt;\n  static safe_ptr_template&lt;PointerType&gt; make_nothrow(Args &amp;&amp; ...args)\n    noexcept(noexcept(new (std::nothrow) element_type(std::forward&lt;Args&gt;(args)...))) {\n    std::size_t n = 1;\n    auto *ptr = new (std::nothrow) element_type(std::forward&lt;Args&gt;(args)...);\n    if (!ptr) {\n      n = 0;\n    }\n    return safe_ptr_template&lt;PointerType&gt;(PointerType(ptr), n);\n  }\n\n  static safe_ptr_template&lt;PointerType&gt; make_array_nothrow(std::size_t n)\n    noexcept(noexcept(new (std::nothrow) element_type[n])) {\n    element_type *ptr = new (std::nothrow) element_type[n];\n    if (!ptr) {\n      n = 0;\n    }\n    return safe_ptr_template&lt;PointerType&gt;(PointerType(ptr), n);\n  }\n\n  safe_ptr_template(safe_ptr_template&lt;PointerType&gt; &amp;&amp; args) noexcept\n    : safe_ptr_template(std::move(args._ptr), args._size) {\n    args._size = 0;\n  }\n\n  safe_ptr_template&lt;PointerType&gt; &amp;operator=(safe_ptr_template&lt;PointerType&gt; &amp;&amp; args) noexcept {\n    this-&gt;~safe_ptr_template();\n    new (this) safe_ptr_template&lt;PointerType&gt;(std::move(args));\n    return *this;\n  }\n\n  operator bool() noexcept {\n    return !!_size;\n  }\n\n  element_type &amp;operator[](std::size_t idx) noexcept SAFE_PTR_LIFETIME_BOUND {\n    if (_size &lt;= idx) {\n      std::abort();\n    }\n    return _ptr.get()[idx];\n  }\n\n  element_type &amp;operator *() noexcept SAFE_PTR_LIFETIME_BOUND {\n    if (!_size) {\n      std::abort();\n    }\n\n    return *_ptr.get();\n  }\n\n  element_type *operator-&gt;() noexcept {\n    if (!_size) {\n      std::abort();\n    }\n    return _ptr.get();\n  }\n};\n\ntemplate&lt;class T&gt;\nusing safe_ptr = safe_ptr_template&lt;std::unique_ptr&lt;T&gt;&gt;;\n\ntemplate &lt;class T, class... Args&gt;\nsafe_ptr&lt;T&gt; make_safe_ptr_nothrow(Args &amp;&amp; ...args)\n  noexcept(noexcept(safe_ptr&lt;T&gt;::make_nothrow(std::forward&lt;Args&gt;(args)...))) {\n  return safe_ptr&lt;T&gt;::make_nothrow(std::forward&lt;Args&gt;(args)...);\n}\n\ntemplate &lt;class T&gt;\nsafe_ptr&lt;T[]&gt; make_safe_ptr_array_nothrow(std::size_t n)\n  noexcept(noexcept(safe_ptr&lt;T[]&gt;::make_array_nothrow(n))) {\n  return safe_ptr&lt;T[]&gt;::make_array_nothrow(n);\n}\n}\n\n#endif // SAFE_PTR_H\n</code></pre>\n<p>Here is an example usage:</p>\n<pre><code class=\"language-C++\">#include \"safe_ptr.h\"\n\n#include &lt;stdlib.h&gt;\n\nint main(int argc, char *argv[]) {\n  if (argc &lt; 2) return -1;\n\n  int n = atoi(argv[1]);\n\n  auto h = safe_ptr::make_safe_ptr_nothrow&lt;int&gt;();\n  h[n] = 10;\n  return 0;\n}\n</code></pre>\n<p>Now let’s run  that with “-O3”</p>\n<pre><code class=\"language-console\">$ clang++ -O3 -Wall test.cc\n$ ./a.out 10\nAborted (core dumped)\n</code></pre>\n<p>If you run the debugger on the dumped core you’ll find the stack trace\nat which the <code>abort()</code> call occured. What about use-after-free?</p>\n<pre><code class=\"language-C++\">int main(int argc, char *argv[]) {\n  int &amp; n = *safe_ptr::make_safe_ptr_nothrow&lt;int&gt;();\n  return n;\n}\n</code></pre>\n<pre><code class=\"language-console\">$ clang++ -O3 -Wall test.cc\ntest.cc:6:14: warning: temporary bound to local reference 'n' will be destroyed at the end of the full-expression\n      [-Wdangling]\n  int &amp; n = *safe_ptr::make_safe_ptr_nothrow&lt;int&gt;();\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 warning generated.\n</code></pre>\n<p>Very nice.</p>\n<strong>Big Ifs</strong>\n<p>The nice thing about this tool is that it requires no tool support\noutside of <code>[[clang:lifetimebound]]</code> so it can be deployed anywhere\neasily. This also makes it easy to modify to your needs. The bad part\nabout this is that it requires your entire codebase to use these smart\npointer classes. For large C++ applications this is not practical but\nfor smaller projects it’s doable.</p>\n<p>A related concern is that you need to either ban the use of raw\npointers or require that they are only used within a compiler\nannotated “unsafe” block similar to Rust. It would be nice if the\nmainstream C++ compilers added a warning on the use of raw pointers.</p>\n<p>Another approach, if you are able to do it, is to modify your C++\nstandard library and add the runtime checks and function annotations\nto <code>unique_ptr</code> itself. This doesn’t work for arrays, so you’ll still\nhave to make explicit references to the safe array version.</p>\n<p>We should also be concerned about stack array types like <code>int arr[]</code> and\n<code>std::array&lt;int&gt; arr</code>. You’ll need safe versions of those as well.</p>\n<p>One last point, you’ll notice that this smart pointer is larger than a\nstandard pointer by the size of <code>std::size_t</code>. One optimization is to make the <code>safe_ptr&lt;T&gt;</code> type distinct from the <code>safe_ptr&lt;T[]&gt;</code> type,\nthis allows the former type to not require an extra <code>_size</code>\nmember. Another optimization is that you can use the high bits of the\npointer on popular contemporary 64-bit platforms to store the number\nof elements (since those bits are unused). If the number of elements is\nlarger than that space, just return an allocation error. This works\nbecause it’s likely you’ll only need to allocate very large arrays in\na few special places.</p>\n<p>There are probably many other caveats that apply but the point of this\npost was to raise awareness about this simple approach and to provide a\npractical path forward to memory safety in C++.</p>\n"},{"short_id":"tx4s9v","title":"An opinion on what's a good general-purpose programming language","url":"https://avestura.dev/blog/ideal-programming-language","created_at":"2023-07-05T13:41:01.000-05:00","comment_count":59,"comments_url":"https://lobste.rs/s/tx4s9v/opinion_on_what_s_good_general_purpose","submitter_name":"avestura","tags":["compilers","plt"],"description":""},{"short_id":"hnhlqu","title":"Database Fundamentals","url":"https://tontinton.com/posts/database-fundementals/","created_at":"2023-12-15T15:42:57.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/hnhlqu/database_fundamentals","submitter_name":"knl","tags":["databases"],"description":""},{"short_id":"qbeqio","title":"How Capabilities Work in Austral","url":"https://borretti.me/article/how-capabilities-work-austral","created_at":"2023-05-07T23:54:51.000-05:00","comment_count":29,"comments_url":"https://lobste.rs/s/qbeqio/how_capabilities_work_austral","submitter_name":"adaszko","tags":["plt"],"description":""},{"short_id":"jracje","title":"Java is becoming more like Rust, and I am here for it","url":"https://joshaustin.tech/blog/java-is-becoming-rust/","created_at":"2024-03-05T11:42:52.000-06:00","comment_count":72,"comments_url":"https://lobste.rs/s/jracje/java_is_becoming_more_like_rust_i_am_here","submitter_name":"gerikson","tags":["java","rust"],"description":""},{"short_id":"pt1p9w","title":"Nix is a build system","url":"http://www.chriswarbo.net/blog/2024-05-24-nix_build_system.html","created_at":"2024-12-21T13:35:18.000-06:00","comment_count":32,"comments_url":"https://lobste.rs/s/pt1p9w/nix_is_build_system","submitter_name":"janus","tags":["nix"],"description":""},{"short_id":"ab2rnz","title":"Implementing Raft: Part 5 - Exactly-once delivery","url":"https://eli.thegreenplace.net/2024/implementing-raft-part-5-exactly-once-delivery/","created_at":"2024-12-21T13:31:11.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/ab2rnz/implementing_raft_part_5_exactly_once","submitter_name":"eduard","tags":["distributed"],"description":""},{"short_id":"klf87z","title":"Turing Machines","url":"https://samwho.dev/turing-machines/","created_at":"2024-12-20T16:42:25.000-06:00","comment_count":21,"comments_url":"https://lobste.rs/s/klf87z/turing_machines","submitter_name":"jakelazaroff","tags":["compsci","historical","retrocomputing"],"description":""},{"short_id":"vgjlrw","title":"Building Bridges to C++","url":"https://www.circle-lang.org/interop.html","created_at":"2024-11-09T04:55:41.000-06:00","comment_count":37,"comments_url":"https://lobste.rs/s/vgjlrw/building_bridges_c","submitter_name":"hunger","tags":["c++","programming","rust"],"description":""},{"short_id":"yw4w6j","title":"A close encounter with false sharing","url":"https://morestina.net/blog/1976/a-close-encounter-with-false-sharing","created_at":"2023-11-20T04:14:45.000-06:00","comment_count":4,"comments_url":"https://lobste.rs/s/yw4w6j/close_encounter_with_false_sharing","submitter_name":"nikola","tags":["rust"],"description":""},{"short_id":"nkerye","title":"You Could Have Invented Normalization-by-Evaluation","url":"https://ehatti.github.io/blog/nbe.html","created_at":"2024-10-14T12:14:44.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/nkerye/you_could_have_invented_normalization_by","submitter_name":"icefox","tags":["plt"],"description":""},{"short_id":"tzdlzk","title":"Rust's Most Subtle Syntax","url":"https://zkrising.com/writing/rusts-most-subtle-syntax/","created_at":"2024-11-03T03:31:14.000-06:00","comment_count":44,"comments_url":"https://lobste.rs/s/tzdlzk/rust_s_most_subtle_syntax","submitter_name":"bitfield","tags":["rust"],"description":""},{"short_id":"vbknxm","title":"C++ programmer′s guide to undefined behavior: part 8 of 11","url":"https://pvs-studio.com/en/blog/posts/cpp/1178/","created_at":"2024-11-01T10:34:02.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/vbknxm/c_programmer_s_guide_undefined_behavior","submitter_name":"snej","tags":["c++"],"description":""},{"short_id":"mtoad0","title":"MinPin: yet another pin proposal","url":"https://smallcultfollowing.com/babysteps/blog/2024/11/05/minpin/","created_at":"2024-11-05T16:32:36.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/mtoad0/minpin_yet_another_pin_proposal","submitter_name":"lonjil","tags":["rust"],"description":""},{"short_id":"wbxot8","title":"Principles of Dependent Type Theory","url":"https://www.danielgratzer.com/papers/type-theory-book.pdf","created_at":"2024-11-04T18:23:18.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/wbxot8/principles_dependent_type_theory","submitter_name":"juuso","tags":["pdf","plt"],"description":""},{"short_id":"ahtlte","title":"Why I love Rust for tokenising and parsing","url":"https://xnacly.me/posts/2024/rust-pldev","created_at":"2024-11-05T18:19:59.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/ahtlte/why_i_love_rust_for_tokenising_parsing","submitter_name":"emschwartz","tags":["rust"],"description":""},{"short_id":"yulcql","title":"How We Built a Self-Healing System to Survive a Terrifying Concurrency Bug At Netflix","url":"https://pushtoprod.substack.com/p/netflix-terrifying-concurrency-bug","created_at":"2024-11-08T07:22:53.000-06:00","comment_count":10,"comments_url":"https://lobste.rs/s/yulcql/how_we_built_self_healing_system_survive","submitter_name":"briankung","tags":["debugging","devops","practices"],"description":""},{"short_id":"hdbvyy","title":"determination: Rust typecheckers for System F and System F-omega","url":"https://hg.sr.ht/~icefox/determination","created_at":"2024-11-07T13:08:49.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/hdbvyy/determination_rust_typecheckers_for","submitter_name":"icefox","tags":["plt"],"description":""},{"short_id":"q9dovm","title":"Functors to Monads: A Story of Shapes","url":"https://blog.jle.im/entry/functors-to-monads-a-story-of-shapes.html","created_at":"2024-11-07T13:15:20.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/q9dovm/functors_monads_story_shapes","submitter_name":"romes","tags":["haskell","plt"],"description":""},{"short_id":"9q7awe","title":"Non-Send Futures When?","url":"https://matklad.github.io/2023/12/10/nsfw.html","created_at":"2023-12-10T21:17:26.000-06:00","comment_count":11,"comments_url":"https://lobste.rs/s/9q7awe/non_send_futures_when","submitter_name":"asb","tags":["rust"],"description":""},{"short_id":"xghu9w","title":"Some tricks from the Scrapscript compiler","url":"https://bernsteinbear.com/blog/scrapscript-tricks/","created_at":"2024-07-11T10:34:51.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/xghu9w/some_tricks_from_scrapscript_compiler","submitter_name":"tekknolagi","tags":["c","compilers","plt"],"description":""},{"short_id":"njr9cn","title":"Maybe Everything Is a Coroutine","url":"https://adam.nels.onl/blog/maybe-everything-is-a-coroutine/","created_at":"2024-02-12T21:44:54.000-06:00","comment_count":35,"comments_url":"https://lobste.rs/s/njr9cn/maybe_everything_is_coroutine","submitter_name":"ar-nelson","tags":["plt"],"description":""},{"short_id":"wbpbnp","title":"What is a Query Optimizer for?","url":"https://justinjaffray.com/what-is-a-query-optimizer-for/","created_at":"2023-11-03T05:37:20.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/wbpbnp/what_is_query_optimizer_for","submitter_name":"sjamaan","tags":["databases"],"description":""},{"short_id":"jd2bpt","title":"An intuition for distributed consensus in OLTP systems","url":"https://notes.eatonphil.com/2024-02-08-an-intuition-for-distributed-consensus-in-oltp-systems.html","created_at":"2024-02-08T07:33:34.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/jd2bpt/intuition_for_distributed_consensus","submitter_name":"eatonphil","tags":["distributed"],"description":""},{"short_id":"2w7wc7","title":"Towards zero-downtime upgrades of stateful systems","url":"https://stevana.github.io/towards_zero-downtime_upgrades_of_stateful_systems.html","created_at":"2024-03-07T03:00:21.000-06:00","comment_count":6,"comments_url":"https://lobste.rs/s/2w7wc7/towards_zero_downtime_upgrades_stateful","submitter_name":"stevan","tags":["distributed","plt"],"description":""},{"short_id":"f5gjq0","title":"The e-graph data structure: a gradual introduction","url":"https://www.cole-k.com/2023/07/24/e-graphs-primer/","created_at":"2023-07-24T12:50:09.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/f5gjq0/e_graph_data_structure_gradual","submitter_name":"cole-k","tags":["compsci"],"description":""},{"short_id":"ojm6cn","title":"Async Rust can be a pleasure to work with (without `Send + Sync + 'static`)","url":"https://emschwartz.me/async-rust-can-be-a-pleasure-to-work-with-without-send-sync-static/","created_at":"2024-09-04T12:27:42.000-05:00","comment_count":48,"comments_url":"https://lobste.rs/s/ojm6cn/async_rust_can_be_pleasure_work_with","submitter_name":"emschwartz","tags":["rust"],"description":""},{"short_id":"qvolpv","title":"C and C++ Prioritize Performance over Correctness","url":"https://research.swtch.com/ub","created_at":"2023-08-18T11:42:03.000-05:00","comment_count":42,"comments_url":"https://lobste.rs/s/qvolpv/c_c_prioritize_performance_over","submitter_name":"jparise","tags":["c","c++"],"description":""},{"short_id":"d0ptcu","title":"What are your favourite pieces of software?","url":"","created_at":"2023-03-10T13:37:52.000-06:00","comment_count":112,"comments_url":"https://lobste.rs/s/d0ptcu/what_are_your_favourite_pieces_software","submitter_name":"lim","tags":["ask","programming"],"description":"<p>It can feel (especially in my circles) that good software doesn’t really exist these days, so I really like seeing what other people do actually like.</p>\n<p>Are there any pieces of software (or maybe SaaS) that you would recommend almost without caveat? Or maybe something you don’t use but makes you glad, happy or hopeful.</p>\n"},{"short_id":"nvmrfz","title":"A Grand Unified Theory of the AI Hype Cycle","url":"https://blog.glyph.im/2024/05/grand-unified-ai-hype.html","created_at":"2024-05-23T00:16:51.000-05:00","comment_count":22,"comments_url":"https://lobste.rs/s/nvmrfz/grand_unified_theory_ai_hype_cycle","submitter_name":"drmorr","tags":["ai"],"description":""},{"short_id":"yf0qs8","title":"What is the reason for the /a /b prefixes of git diff?","url":"https://stackoverflow.com/questions/6764953/what-is-the-reason-for-the-a-b-prefixes-of-git-diff","created_at":"2023-10-29T11:17:25.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/yf0qs8/what_is_reason_for_b_prefixes_git_diff","submitter_name":"telemachus","tags":["vcs"],"description":""},{"short_id":"zbx4cu","title":"What is the best pointer tagging method?","url":"https://coredumped.dev/2024/09/09/what-is-the-best-pointer-tagging-method/","created_at":"2024-09-09T08:35:12.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/zbx4cu/what_is_best_pointer_tagging_method","submitter_name":"Celeritas","tags":["assembly","performance"],"description":""},{"short_id":"ddlviu","title":"A CAP tradeoff in the wild","url":"https://decomposition.al/blog/2023/12/31/a-cap-tradeoff-in-the-wild/","created_at":"2024-01-01T23:43:53.000-06:00","comment_count":8,"comments_url":"https://lobste.rs/s/ddlviu/cap_tradeoff_wild","submitter_name":"orib","tags":["distributed"],"description":""},{"short_id":"fnxqjn","title":"Emacs From Scratch, Part 1: Foundations","url":"https://arne.me/articles/emacs-from-scratch-part-one-foundations","created_at":"2023-12-22T08:08:11.000-06:00","comment_count":33,"comments_url":"https://lobste.rs/s/fnxqjn/emacs_from_scratch_part_1_foundations","submitter_name":"bahlo","tags":["emacs"],"description":""},{"short_id":"4ndvxf","title":"Threads with WebAssembly","url":"https://tonbo.io/blog/threads-with-webassembly","created_at":"2025-01-08T07:10:32.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/4ndvxf/threads_with_webassembly","submitter_name":"emschwartz","tags":["rust","wasm"],"description":""},{"short_id":"my8b6i","title":"2025: The Year of 1,000 DataFusion-Based Systems","url":"https://www.influxdata.com/blog/datafusion-2025-influxdb/","created_at":"2025-01-08T15:47:31.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/my8b6i/2025_year_1_000_datafusion_based_systems","submitter_name":"eatonphil","tags":["databases","rust"],"description":""},{"short_id":"mkhvi7","title":"Postgres sequences can commit out-of-order","url":"https://blog.sequinstream.com/postgres-sequences-can-commit-out-of-order","created_at":"2024-07-23T12:17:37.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/mkhvi7/postgres_sequences_can_commit_out_order","submitter_name":"acco","tags":["databases"],"description":""},{"short_id":"ouhxs6","title":"What’s so hard about constexpr allocation?","url":"https://brevzin.github.io/c++/2024/07/24/constexpr-alloc/","created_at":"2024-07-24T10:54:38.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/ouhxs6/what_s_so_hard_about_constexpr_allocation","submitter_name":"raymii","tags":["c++"],"description":""},{"short_id":"stacig","title":"Elixir type system updates moving from research into development","url":"https://elixir-lang.org/blog/2023/06/22/type-system-updates-research-dev/","created_at":"2023-07-03T20:16:00.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/stacig/elixir_type_system_updates_moving_from","submitter_name":"jcspencer","tags":["elixir","plt"],"description":""},{"short_id":"vuvhca","title":"More thoughts on claiming","url":"https://smallcultfollowing.com/babysteps/blog/2024/06/26/claim-followup-1/","created_at":"2024-06-26T12:00:56.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/vuvhca/more_thoughts_on_claiming","submitter_name":"lonjil","tags":["plt","rust"],"description":""},{"short_id":"cd8mty","title":"More use of Rust is inevitable in open source software","url":"https://utcc.utoronto.ca/~cks/space/blog/programming/RustIsInevitable","created_at":"2022-12-27T04:36:22.000-06:00","comment_count":44,"comments_url":"https://lobste.rs/s/cd8mty/more_use_rust_is_inevitable_open_source","submitter_name":"Vaelatern","tags":["rust","zig"],"description":""},{"short_id":"b0fkuh","title":"Build faster with Buck2: Our open source build system","url":"https://engineering.fb.com/2023/04/06/open-source/buck2-open-source-large-scale-build-system/","created_at":"2023-04-06T11:40:51.000-05:00","comment_count":37,"comments_url":"https://lobste.rs/s/b0fkuh/build_faster_with_buck2_our_open_source","submitter_name":"brianhicks","tags":["release"],"description":""},{"short_id":"zmt8ul","title":"The Inside Story of ClickHouse (9): How to Perform Aggregation","url":"http://jackywoo.cn/ck-internal-how-clickhouse-do-aggregating-en/","created_at":"2024-08-02T01:52:16.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/zmt8ul/inside_story_clickhouse_9_how_perform","submitter_name":"knl","tags":["databases"],"description":""},{"short_id":"rushnh","title":"Some notes on Rust, mutable aliasing and formal verification","url":"https://graydon2.dreamwidth.org/312681.html","created_at":"2024-05-16T00:00:32.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/rushnh/some_notes_on_rust_mutable_aliasing","submitter_name":"asb","tags":["plt","rust"],"description":""},{"short_id":"mnuhwc","title":"Go's concurrency in a dynamic language Rye","url":"https://ryelang.org/blog/posts/rye-concurrency-go/","created_at":"2024-05-16T09:41:19.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/mnuhwc/go_s_concurrency_dynamic_language_rye","submitter_name":"refaktor","tags":["go"],"description":""},{"short_id":"qbockn","title":"Techniques for Safe Garbage Collection in Rust","url":"https://kyju.org/blog/rust-safe-garbage-collection/","created_at":"2024-08-16T21:36:13.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/qbockn/techniques_for_safe_garbage_collection","submitter_name":"MatheusRich","tags":["plt","rust"],"description":""},{"short_id":"s2zxwx","title":"How Cache Memory Works","url":"https://pikuma.com/blog/understanding-computer-cache","created_at":"2024-06-20T18:31:07.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/s2zxwx/how_cache_memory_works","submitter_name":"gp6502","tags":["hardware","programming"],"description":""},{"short_id":"wapcwu","title":"Trustfall","url":"https://github.com/obi1kenobi/trustfall","created_at":"2025-01-27T13:53:45.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/wapcwu/trustfall","submitter_name":"veqq","tags":["api","databases","plt"],"description":""},{"short_id":"s89gxq","title":"Why Trees Without Branches Grow Faster: The Case for Reducing Branches in Code","url":"https://cedardb.com/blog/reducing_branches/","created_at":"2025-01-29T10:37:05.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/s89gxq/why_trees_without_branches_grow_faster","submitter_name":"eatonphil","tags":["databases","performance"],"description":""},{"short_id":"nqy7uq","title":"Parametric Subtyping for Structural Parametric Polymorphism","url":"https://blog.sigplan.org/2025/01/29/parametric-subtyping-for-structural-parametric-polymorphism/","created_at":"2025-01-29T16:03:43.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/nqy7uq/parametric_subtyping_for_structural","submitter_name":"brendan","tags":["plt"],"description":""},{"short_id":"yubalv","title":"Pointers Are Complicated II, or: We need better language specs (2020)","url":"https://www.ralfj.de/blog/2020/12/14/provenance.html","created_at":"2025-01-30T07:21:58.000-06:00","comment_count":18,"comments_url":"https://lobste.rs/s/yubalv/pointers_are_complicated_ii_we_need","submitter_name":"jamesw","tags":["compilers","plt"],"description":""},{"short_id":"2an1ay","title":"How Jane Street accidentally built a better build system for OCaml","url":"https://blog.janestreet.com/how-we-accidentally-built-a-better-build-system-for-ocaml-index/","created_at":"2025-01-30T19:54:09.000-06:00","comment_count":6,"comments_url":"https://lobste.rs/s/2an1ay/how_jane_street_accidentally_built","submitter_name":"kaycebasques","tags":["ml"],"description":""},{"short_id":"bark5a","title":"Preview crates","url":"https://smallcultfollowing.com/babysteps/blog/2025/01/29/preview-crates/","created_at":"2025-01-30T04:23:18.000-06:00","comment_count":18,"comments_url":"https://lobste.rs/s/bark5a/preview_crates","submitter_name":"bitfield","tags":["rust"],"description":""},{"short_id":"uggzag","title":"Adding garbage collection to our Rust-based interpreters with MMTk","url":"https://octavelarose.github.io/2025/01/30/mmtk.html","created_at":"2025-01-30T10:31:34.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/uggzag/adding_garbage_collection_our_rust_based","submitter_name":"Celeritas","tags":["rust"],"description":""},{"short_id":"9xtd4v","title":"Introducing Werk","url":"https://simonask.github.io/introducing-werk/","created_at":"2025-01-31T03:56:32.000-06:00","comment_count":45,"comments_url":"https://lobste.rs/s/9xtd4v/introducing_werk","submitter_name":"hedy","tags":["release"],"description":""},{"short_id":"kv9znz","title":"Perf is not enough","url":"https://motherduck.com/blog/perf-is-not-enough/","created_at":"2024-01-18T13:21:24.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/kv9znz/perf_is_not_enough","submitter_name":"richieartoul","tags":["databases"],"description":""},{"short_id":"xkcrvn","title":"Abstract interpretation in the Toy Optimizer","url":"https://bernsteinbear.com/blog/toy-abstract-interpretation/","created_at":"2024-07-24T07:18:58.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/xkcrvn/abstract_interpretation_toy_optimizer","submitter_name":"tekknolagi","tags":["compilers","performance","plt","python"],"description":""},{"short_id":"yfyub2","title":"Compiler Development: Rust or OCaml?","url":"https://hirrolot.github.io/posts/compiler-development-rust-or-ocaml.html#appendix-getting-started-with-ocaml","created_at":"2023-08-06T10:19:48.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/yfyub2/compiler_development_rust_ocaml","submitter_name":"agent281","tags":["ml","plt","rust"],"description":""},{"short_id":"d5qwzs","title":"What is your Mac OS Setup?","url":"","created_at":"2023-07-28T19:04:26.000-05:00","comment_count":101,"comments_url":"https://lobste.rs/s/d5qwzs/what_is_your_mac_os_setup","submitter_name":"Pokemod97","tags":["ask","mac"],"description":"<p>I recently got a macbook m2 pro intending on installing asahi once it released but I’m liking the integration with my apple watch and phone enough to consider making mac os my primary os. I’m an arch user and have no clue of the mac software ecosystem.What stuff do you recommend?</p>\n"},{"short_id":"p6ncen","title":"Compare the Assembly Generated for Static vs Dynamic Dispatch in Rust","url":"https://eventhelix.com/rust/rust-to-assembly-static-vs-dynamic-dispatch/","created_at":"2024-07-28T21:54:46.000-05:00","comment_count":19,"comments_url":"https://lobste.rs/s/p6ncen/compare_assembly_generated_for_static_vs","submitter_name":"eventhelix","tags":["assembly","reversing","rust"],"description":""},{"short_id":"t0mywf","title":"Damas-Hindley-Milner inference two ways","url":"https://bernsteinbear.com/blog/type-inference/","created_at":"2024-10-15T17:25:59.000-05:00","comment_count":27,"comments_url":"https://lobste.rs/s/t0mywf/damas_hindley_milner_inference_two_ways","submitter_name":"tekknolagi","tags":["compilers","plt"],"description":""},{"short_id":"su4otl","title":"Safety in Programming Languages is a Means to an End","url":"https://lewiscampbell.tech/blog/250202.html","created_at":"2025-02-02T03:44:08.000-06:00","comment_count":21,"comments_url":"https://lobste.rs/s/su4otl/safety_programming_languages_is_means","submitter_name":"LAC-Tech","tags":["plt","programming","testing"],"description":""},{"short_id":"btjtkr","title":"What software do you dream about, but do not have time to code yourself?","url":"","created_at":"2025-02-02T09:19:56.000-06:00","comment_count":331,"comments_url":"https://lobste.rs/s/btjtkr/what_software_do_you_dream_about_do_not","submitter_name":"amirouche","tags":["ask","programming"],"description":"<p>Previously: <a href=\"https://lobste.rs/s/a3zlgq/what_software_do_you_dream_about_do_not\" rel=\"ugc\">https://lobste.rs/s/a3zlgq/what_software_do_you_dream_about_do_not</a></p>\n"},{"short_id":"ezimxi","title":"Notes on Type Layouts and ABIs in Rust (2018)","url":"https://faultlore.com/blah/rust-layouts-and-abis/","created_at":"2025-02-04T03:48:01.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/ezimxi/notes_on_type_layouts_abis_rust_2018","submitter_name":"bitfield","tags":["compilers","rust"],"description":""},{"short_id":"4vgdml","title":"Pinning Down \"Future Is Not Send\" Errors","url":"https://emschwartz.me/pinning-down-future-is-not-send-errors/","created_at":"2025-02-03T09:08:59.000-06:00","comment_count":18,"comments_url":"https://lobste.rs/s/4vgdml/pinning_down_future_is_not_send_errors","submitter_name":"emschwartz","tags":["rust"],"description":""},{"short_id":"9sitsj","title":"clr: Checker for Lifetimes and other Refinement types","url":"https://github.com/ityonemo/clr","created_at":"2025-02-03T15:43:39.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/9sitsj/clr_checker_for_lifetimes_other","submitter_name":"friendlysock","tags":["zig"],"description":""},{"short_id":"cqyu02","title":"A compiler IR for Scrapscript","url":"https://bernsteinbear.com/blog/scrapscript-ir/","created_at":"2025-02-04T17:53:42.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/cqyu02/compiler_ir_for_scrapscript","submitter_name":"surprisetalk","tags":["compilers","plt"],"description":""},{"short_id":"rgydie","title":"Decorator JITs - Python as a DSL","url":"https://eli.thegreenplace.net/2025/decorator-jits-python-as-a-dsl/","created_at":"2025-02-04T08:27:26.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/rgydie/decorator_jits_python_as_dsl","submitter_name":"fanf","tags":["python"],"description":""},{"short_id":"i6c3zr","title":"Cooperative multitasking in Rust","url":"https://elric.pl/blog/cooperative-multitasking","created_at":"2025-02-04T15:44:13.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/i6c3zr/cooperative_multitasking_rust","submitter_name":"emschwartz","tags":["rust"],"description":""},{"short_id":"s0zjay","title":"Zig's Comptime is Bonkers Good","url":"https://www.scottredig.com/blog/bonkers_comptime/","created_at":"2025-01-06T18:35:09.000-06:00","comment_count":40,"comments_url":"https://lobste.rs/s/s0zjay/zig_s_comptime_is_bonkers_good","submitter_name":"mlugg","tags":["zig"],"description":""},{"short_id":"b9ezyc","title":"The Three Projections of Doctor Futamura (2009)","url":"http://blog.sigfpe.com/2009/05/three-projections-of-doctor-futamura.html","created_at":"2025-02-06T22:11:59.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/b9ezyc/three_projections_doctor_futamura_2009","submitter_name":"zem","tags":["plt"],"description":""},{"short_id":"ytdpaw","title":"The inevitability of the borrow checker","url":"https://yorickpeterse.com/articles/the-inevitability-of-the-borrow-checker/","created_at":"2025-02-06T07:24:50.000-06:00","comment_count":4,"comments_url":"https://lobste.rs/s/ytdpaw/inevitability_borrow_checker","submitter_name":"yorickpeterse","tags":["compilers","plt"],"description":""},{"short_id":"01i5mu","title":"baffled by generational garbage collection","url":"https://wingolog.org/archives/2025/02/09/baffled-by-generational-garbage-collection","created_at":"2025-02-09T08:15:02.000-06:00","comment_count":21,"comments_url":"https://lobste.rs/s/01i5mu/baffled_by_generational_garbage","submitter_name":"tumdum","tags":["lisp","performance","plt"],"description":""},{"short_id":"tn7hqo","title":"Carbon is not a programming language (sort of)","url":"https://herecomesthemoon.net/2025/02/carbon-is-not-a-language/","created_at":"2025-02-08T09:50:10.000-06:00","comment_count":29,"comments_url":"https://lobste.rs/s/tn7hqo/carbon_is_not_programming_language_sort","submitter_name":"mond","tags":["c++"],"description":""},{"short_id":"p11wif","title":"LRGrep: Selecting Error Messages for LR parsers","url":"https://def.lakaban.net/research/#lrgrep-selecting-error-messages-for-lr-parsers","created_at":"2025-02-09T01:57:13.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/p11wif/lrgrep_selecting_error_messages_for_lr","submitter_name":"gasche","tags":["plt"],"description":""},{"short_id":"wrh2rs","title":"LocalStorage vs. IndexedDB vs. Cookies vs. OPFS vs. WASM-SQLite","url":"https://rxdb.info/articles/localstorage-indexeddb-cookies-opfs-sqlite-wasm.html","created_at":"2024-10-15T06:31:12.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/wrh2rs/localstorage_vs_indexeddb_vs_cookies_vs","submitter_name":"pubkey","tags":["browsers","databases","javascript","wasm"],"description":""},{"short_id":"sckewp","title":"So you're writing a programming language","url":"https://old.reddit.com/r/ProgrammingLanguages/comments/1huv4cf/so_youre_writing_a_programming_language/","created_at":"2025-01-06T04:17:25.000-06:00","comment_count":15,"comments_url":"https://lobste.rs/s/sckewp/so_you_re_writing_programming_language","submitter_name":"hwj","tags":["plt"],"description":""},{"short_id":"v3zarc","title":"They all use it","url":"https://registerspill.thorstenball.com/p/they-all-use-it","created_at":"2024-11-20T11:51:28.000-06:00","comment_count":164,"comments_url":"https://lobste.rs/s/v3zarc/they_all_use_it","submitter_name":"carlana","tags":["ai"],"description":""},{"short_id":"mzlyyf","title":"How I run my servers","url":"https://blog.wesleyac.com/posts/how-i-run-my-servers","created_at":"2023-07-16T06:46:41.000-05:00","comment_count":33,"comments_url":"https://lobste.rs/s/mzlyyf/how_i_run_my_servers","submitter_name":"pondidum","tags":["devops"],"description":""},{"short_id":"qohs5y","title":"bfs 3.0: the fastest find yet","url":"https://tavianator.com/2023/bfs_3.0.html","created_at":"2023-07-18T22:25:11.000-05:00","comment_count":46,"comments_url":"https://lobste.rs/s/qohs5y/bfs_3_0_fastest_find_yet","submitter_name":"tavianator","tags":["c","performance","unix"],"description":""},{"short_id":"2yzqmv","title":"The Seamstress Event Loop In Zig","url":"https://ryleealanza.org/2023/06/21/The-Seamstress-Event-Loop-in-Zig.html","created_at":"2023-06-23T04:07:54.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/2yzqmv/seamstress_event_loop_zig","submitter_name":"matklad","tags":["zig"],"description":""},{"short_id":"raujqa","title":"Crossing the Impossible FFI Boundary, and My Gradual Descent Into Madness","url":"https://verdagon.dev/blog/exploring-seamless-rust-interop-part-2","created_at":"2024-06-17T10:22:49.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/raujqa/crossing_impossible_ffi_boundary_my","submitter_name":"Verdagon","tags":["compilers","plt"],"description":""},{"short_id":"zivvw7","title":"whippet: towards a new local maximum","url":"https://wingolog.org/archives/2023/02/07/whippet-towards-a-new-local-maximum","created_at":"2023-02-07T10:43:18.000-06:00","comment_count":7,"comments_url":"https://lobste.rs/s/zivvw7/whippet_towards_new_local_maximum","submitter_name":"tumdum","tags":["lisp","plt"],"description":""},{"short_id":"ci470u","title":"Place expressions and value expressions in Rust","url":"https://www.ralfj.de/blog/2024/08/14/places.html","created_at":"2024-09-01T20:57:41.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/ci470u/place_expressions_value_expressions","submitter_name":"jmillikin","tags":["rust"],"description":""},{"short_id":"rsfp1p","title":"Enabling seamless interop between Rust and other languages","url":"https://hackmd.io/@rust-lang-team/rJvv36hq1e","created_at":"2025-03-22T20:14:39.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/rsfp1p/enabling_seamless_interop_between_rust","submitter_name":"wofo","tags":["compilers","plt","rust"],"description":""},{"short_id":"h0yytn","title":"C++/Rust Interoperability Problem Statement","url":"https://github.com/rustfoundation/interop-initiative","created_at":"2025-03-21T17:53:17.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/h0yytn/c_rust_interoperability_problem","submitter_name":"ucirello","tags":["c++","plt","rust"],"description":""},{"short_id":"iozq2j","title":"The legend of \"x86 CPUs decode instructions into RISC form internally\"","url":"https://fanael.github.io/is-x86-risc-internally.html","created_at":"2023-06-18T09:59:51.000-05:00","comment_count":35,"comments_url":"https://lobste.rs/s/iozq2j/legend_x86_cpus_decode_instructions_into","submitter_name":"Freaky","tags":["assembly","hardware"],"description":""},{"short_id":"n2cpfi","title":"Ergonomic Self-Referential Types for Rust","url":"https://blog.yoshuawuyts.com/self-referential-types/","created_at":"2024-07-01T14:25:25.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/n2cpfi/ergonomic_self_referential_types_for","submitter_name":"raymii","tags":["rust"],"description":""},{"short_id":"wsx2qe","title":"So you think you want to write a deterministic hypervisor?","url":"https://antithesis.com/blog/deterministic_hypervisor/","created_at":"2024-03-20T08:50:39.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/wsx2qe/so_you_think_you_want_write_deterministic","submitter_name":"amw-zero","tags":["testing","virtualization"],"description":""},{"short_id":"yt4eqa","title":"Land ahoy: leaving the Sea of Nodes","url":"https://v8.dev/blog/leaving-the-sea-of-nodes","created_at":"2025-03-25T10:07:48.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/yt4eqa/land_ahoy_leaving_sea_nodes","submitter_name":"asb","tags":["compilers","javascript"],"description":""},{"short_id":"ujc13n","title":"Bringing Record and Replay everywhere","url":"https://github.com/sidkshatriya/me/blob/master/008-rr-everywhere.md","created_at":"2025-03-24T08:43:23.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/ujc13n/bringing_record_replay_everywhere","submitter_name":"jmillikin","tags":["debugging"],"description":""},{"short_id":"d2er0v","title":"Typst as a Language","url":"https://justinpombrio.net/2024/11/30/typst.html","created_at":"2024-11-30T21:08:17.000-06:00","comment_count":12,"comments_url":"https://lobste.rs/s/d2er0v/typst_as_language","submitter_name":"tsion","tags":["plt"],"description":"<p>Investigating the Typst programming language.</p>\n"},{"short_id":"ezjev6","title":"Tree Calculus","url":"https://treecalcul.us","created_at":"2024-12-09T23:54:48.000-06:00","comment_count":13,"comments_url":"https://lobste.rs/s/ezjev6/tree_calculus","submitter_name":"signal-11","tags":["plt","programming"],"description":""},{"short_id":"xyvwux","title":"What are your favorite non-standard CLI utilities/applications","url":"","created_at":"2024-12-10T11:17:09.000-06:00","comment_count":77,"comments_url":"https://lobste.rs/s/xyvwux/what_are_your_favorite_non_standard_cli","submitter_name":"adriano","tags":["ask","unix"],"description":"<p>I previously asked this in 2020 [1] and I think many of us learned of some upcoming and interesting tools.</p>\n<p>I use “non-standard” loosly here. We’re looking for CLI utilities that are definitely not part of the POSIX required or optional utilities, and more coloquiallly not considered to be standard BSD or *nix fare.</p>\n<p>[1] <a href=\"https://lobste.rs/s/eprvjp/what_are_your_favorite_non_standard_cli\" rel=\"ugc\">https://lobste.rs/s/eprvjp/what_are_your_favorite_non_standard_cli</a></p>\n"},{"short_id":"rtlddh","title":"Weak references and garbage collectors","url":"https://bernsteinbear.com/blog/weakrefs/","created_at":"2025-01-04T18:26:43.000-06:00","comment_count":6,"comments_url":"https://lobste.rs/s/rtlddh/weak_references_garbage_collectors","submitter_name":"tekknolagi","tags":["c"],"description":""},{"short_id":"et3ivs","title":"Zig May Pass Anything By Reference","url":"https://www.1a-insec.net/blog/25-zig-reference-semantics/","created_at":"2023-11-21T02:30:26.000-06:00","comment_count":34,"comments_url":"https://lobste.rs/s/et3ivs/zig_may_pass_anything_by_reference","submitter_name":"iacore","tags":["zig"],"description":""},{"short_id":"gp9scd","title":"Faster compilation with the parallel front-end in nightly","url":"https://blog.rust-lang.org/2023/11/09/parallel-rustc.html","created_at":"2023-11-09T10:44:33.000-06:00","comment_count":13,"comments_url":"https://lobste.rs/s/gp9scd/faster_compilation_with_parallel_front","submitter_name":"voutilad","tags":["rust"],"description":""},{"short_id":"ibtnxo","title":"What is the type of Type?","url":"https://avestura.dev/blog/what-is-the-type-of-type","created_at":"2023-07-07T02:49:39.000-05:00","comment_count":29,"comments_url":"https://lobste.rs/s/ibtnxo/what_is_type_type","submitter_name":"avestura","tags":["math","plt"],"description":""},{"short_id":"3dv6ix","title":"Thinking like a compiler: places and values in Rust","url":"https://steveklabnik.com/writing/thinking-like-a-compiler-places-and-values-in-rust/","created_at":"2025-04-07T14:08:26.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/3dv6ix/thinking_like_compiler_places_values","submitter_name":"steveklabnik","tags":["plt","rust"],"description":""},{"short_id":"vmyk7d","title":"Composable SQL","url":"https://borretti.me/article/composable-sql","created_at":"2025-01-25T11:35:35.000-06:00","comment_count":12,"comments_url":"https://lobste.rs/s/vmyk7d/composable_sql","submitter_name":"emschwartz","tags":["databases","plt"],"description":""},{"short_id":"qgcu7j","title":"How fast is your shell?","url":"https://registerspill.thorstenball.com/p/how-fast-is-your-shell","created_at":"2024-01-14T07:33:34.000-06:00","comment_count":53,"comments_url":"https://lobste.rs/s/qgcu7j/how_fast_is_your_shell","submitter_name":"carlana","tags":["performance","unix"],"description":""},{"short_id":"dqw5zq","title":"A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++","url":"https://www.phoronix.com/news/CPP-Linux-Kernel-2024-Discuss","created_at":"2024-01-15T10:50:52.000-06:00","comment_count":44,"comments_url":"https://lobste.rs/s/dqw5zq/2024_discussion_whether_convert_linux","submitter_name":"drs","tags":["c","c++","linux"],"description":""},{"short_id":"xbknvr","title":"Typst 0.12 is just ... better","url":"https://typst.app/blog/2024/typst-0.12/","created_at":"2024-10-18T16:46:39.000-05:00","comment_count":29,"comments_url":"https://lobste.rs/s/xbknvr/typst_0_12_is_just_better","submitter_name":"isuffix","tags":["programming","release"],"description":""},{"short_id":"p6or46","title":"First-Class Modules and Modular Implicits in OCaml (2017)","url":"https://tycon.github.io/modular-implicits.html","created_at":"2023-04-30T01:14:29.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/p6or46/first_class_modules_modular_implicits","submitter_name":"5d22b","tags":["ml"],"description":""},{"short_id":"rsubd9","title":"Lezer","url":"https://marijnhaverbeke.nl/blog/lezer.html","created_at":"2024-03-24T19:05:38.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/rsubd9/lezer","submitter_name":"telemachus","tags":["javascript"],"description":""},{"short_id":"zmz8zv","title":"Rust needs an official specification","url":"https://tweedegolf.nl/en/blog/140/rust-needs-an-official-specification","created_at":"2024-11-12T06:04:13.000-06:00","comment_count":50,"comments_url":"https://lobste.rs/s/zmz8zv/rust_needs_official_specification","submitter_name":"airdrop","tags":["rust"],"description":""},{"short_id":"baobft","title":"Analyzing the codebase of Caffeine: a high performance caching library","url":"https://adriacabeza.github.io/2024/07/12/caffeine-cache.html","created_at":"2024-11-11T16:15:24.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/baobft/analyzing_codebase_caffeine_high","submitter_name":"emschwartz","tags":["java","performance"],"description":""},{"short_id":"0r1whx","title":"SICP in Emacs","url":"https://kchousos.github.io/posts/sicp-in-emacs/","created_at":"2023-06-07T08:04:55.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/0r1whx/sicp_emacs","submitter_name":"Kchousos","tags":["emacs","lisp","show"],"description":""},{"short_id":"ozaiyz","title":"breakelse: When Compiler Developers Get Bored","url":"https://neat-lang.github.io/breakelse.html","created_at":"2023-10-07T11:40:29.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/ozaiyz/breakelse_when_compiler_developers_get","submitter_name":"FeepingCreature","tags":["plt"],"description":""},{"short_id":"jhuosw","title":"\"Where have all the hackers gone?\" + a way to discuss programming languages","url":"https://morepablo.com/2023/05/where-have-all-the-hackers-gone.html","created_at":"2023-05-17T13:40:51.000-05:00","comment_count":36,"comments_url":"https://lobste.rs/s/jhuosw/where_have_all_hackers_gone_way_discuss","submitter_name":"srpablo","tags":["culture","plt"],"description":""},{"short_id":"ljlmid","title":"The life and times of an Abstract Syntax Tree","url":"https://blog.trailofbits.com/2024/05/02/the-life-and-times-of-an-abstract-syntax-tree/","created_at":"2024-05-02T08:30:26.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/ljlmid/life_times_abstract_syntax_tree","submitter_name":"jmillikin","tags":["compilers"],"description":""},{"short_id":"hjxd80","title":"Rust std fs slower than Python!? No, it's hardware","url":"https://xuanwo.io/2023/04-rust-std-fs-slower-than-python/","created_at":"2023-11-29T06:48:48.000-06:00","comment_count":18,"comments_url":"https://lobste.rs/s/hjxd80/rust_std_fs_slower_than_python_no_it_s","submitter_name":"pims","tags":["hardware","python","rust"],"description":""},{"short_id":"woj8tt","title":"How conditional breakpoints work","url":"https://werat.dev/blog/how-conditional-breakpoints-work/","created_at":"2024-07-22T11:47:59.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/woj8tt/how_conditional_breakpoints_work","submitter_name":"werat","tags":["debugging"],"description":""},{"short_id":"8yr4r3","title":"How JIT Compilers are Implemented and Fast: Pypy, LuaJIT, Graal and More","url":"https://kipp.ly/jits-impls/","created_at":"2023-12-30T11:23:57.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/8yr4r3/how_jit_compilers_are_implemented_fast","submitter_name":"WilhelmVonWeiner","tags":["compilers"],"description":""},{"short_id":"trbciw","title":"A response to 'A decade of developing a programming language'","url":"https://www.ncameron.org/blog/a-response-to-a-decade-of-developing-a-programming-language/","created_at":"2023-11-30T18:13:31.000-06:00","comment_count":9,"comments_url":"https://lobste.rs/s/trbciw/response_decade_developing_programming","submitter_name":"wezm","tags":["plt"],"description":""},{"short_id":"i8gyah","title":"Functional Semantics in Imperative Clothing","url":"https://rtfeldman.com/imperative-clothing","created_at":"2024-04-29T06:46:09.000-05:00","comment_count":22,"comments_url":"https://lobste.rs/s/i8gyah/functional_semantics_imperative","submitter_name":"restrictedchoice","tags":["plt"],"description":""},{"short_id":"tie1ao","title":"Compilation of JavaScript to Wasm, part 3: Partial evaluation","url":"https://cfallin.org/blog/2024/08/28/weval/","created_at":"2024-08-28T21:24:18.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/tie1ao/compilation_javascript_wasm_part_3","submitter_name":"jmillikin","tags":["javascript","wasm"],"description":""},{"short_id":"avzof2","title":"RustRover Is Released and Includes a Free Non-Commercial Option","url":"https://blog.jetbrains.com/rust/2024/05/21/rustrover-is-released-and-includes-a-free-non-commercial-option/","created_at":"2024-05-21T20:23:31.000-05:00","comment_count":27,"comments_url":"https://lobste.rs/s/avzof2/rustrover_is_released_includes_free_non","submitter_name":"rjzak","tags":["rust"],"description":""},{"short_id":"txapce","title":"Who Killed the Network Switch? A Hubris Bug Story","url":"https://cliffle.com/blog/who-killed-the-network-switch/","created_at":"2024-03-27T15:29:27.000-05:00","comment_count":24,"comments_url":"https://lobste.rs/s/txapce/who_killed_network_switch_hubris_bug","submitter_name":"creature","tags":["osdev","rust"],"description":""},{"short_id":"5zk21i","title":"Usb-C and its overengineered history","url":"https://www.youtube.com/watch?v=yqL-MEQ9HQ8","created_at":"2025-04-11T01:48:29.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/5zk21i/usb_c_its_overengineered_history","submitter_name":"friendlysock","tags":["hardware","historical","video"],"description":""},{"short_id":"cmrgzh","title":"BTrees, Inverted Indices, and a Model for Full Text Search","url":"https://ohadravid.github.io/posts/2025-04-08-btrees-and-mental-models/","created_at":"2025-04-10T07:11:25.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/cmrgzh/btrees_inverted_indices_model_for_full","submitter_name":"ohrv","tags":["databases","practices","rust"],"description":""},{"short_id":"zqqvms","title":"Async from scratch 1: What's in a Future, anyway?","url":"https://natkr.com/2025-04-10-async-from-scratch-1/","created_at":"2025-04-09T18:25:30.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/zqqvms/async_from_scratch_1_what_s_future_anyway","submitter_name":"natkr","tags":["rust"],"description":""},{"short_id":"hnnrdn","title":"facet: Rust reflection, serialization, deserialization — know the shape of your types","url":"https://github.com/facet-rs/facet","created_at":"2025-04-09T06:53:55.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/hnnrdn/facet_rust_reflection_serialization","submitter_name":"waltteri","tags":["plt","rust"],"description":""},{"short_id":"9s6mep","title":"Why is Snapshot Isolation not enough?","url":"http://concurrencyfreaks.blogspot.com/2023/12/why-is-snapshot-isolation-not-enough.html","created_at":"2025-04-09T17:29:28.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/9s6mep/why_is_snapshot_isolation_not_enough","submitter_name":"awreece","tags":["databases","osdev"],"description":""},{"short_id":"bcdwwa","title":"How to Sync Anything","url":"https://neighbourhood.ie/blog/2025/04/06/how-to-sync-anything","created_at":"2025-04-09T07:06:41.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/bcdwwa/how_sync_anything","submitter_name":"mpweiher","tags":["distributed"],"description":""},{"short_id":"2ixxem","title":"React for Two Computers","url":"https://overreacted.io/react-for-two-computers/","created_at":"2025-04-09T16:07:05.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/2ixxem/react_for_two_computers","submitter_name":"adamshaylor","tags":["javascript","web"],"description":""},{"short_id":"b9kbg3","title":"\"Verified\" \"Compilation\" of \"Python\" with Knuckledragger, GCC, and Ghidra","url":"https://www.philipzucker.com/knuckle_C_pcode/","created_at":"2025-04-08T08:29:03.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/b9kbg3/verified_compilation_python_with","submitter_name":"philzook","tags":["assembly","compilers","formalmethods","python","reversing"],"description":""},{"short_id":"4fee7y","title":"Erlang’s not about lightweight processes and message passing…","url":"https://stevana.github.io/erlangs_not_about_lightweight_processes_and_message_passing.html","created_at":"2025-04-11T10:49:31.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/4fee7y/erlang_s_not_about_lightweight_processes","submitter_name":"teymour","tags":["distributed","erlang","testing"],"description":""},{"short_id":"u4h9ff","title":"FuturesUnordered and the order of futures","url":"https://without.boats/blog/futures-unordered/","created_at":"2024-02-18T04:24:33.000-06:00","comment_count":24,"comments_url":"https://lobste.rs/s/u4h9ff/futuresunordered_order_futures","submitter_name":"withoutboats","tags":["rust"],"description":""},{"short_id":"0u5b9u","title":"Flambda2 Ep. 2: Loopifying Tail-Recursive Functions","url":"https://ocamlpro.com/blog/2024_05_07_the_flambda2_snippets_2/","created_at":"2024-06-20T18:48:32.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/0u5b9u/flambda2_ep_2_loopifying_tail_recursive","submitter_name":"ignatius","tags":["compilers","ml","plt"],"description":""},{"short_id":"wyeffq","title":"A decade of developing a programming language","url":"https://yorickpeterse.com/articles/a-decade-of-developing-a-programming-language/","created_at":"2023-11-14T07:59:00.000-06:00","comment_count":9,"comments_url":"https://lobste.rs/s/wyeffq/decade_developing_programming_language","submitter_name":"andrewfromx","tags":["compilers"],"description":""},{"short_id":"jnrxuv","title":"We have proved \"BB(5) = 47,176,870\"","url":"https://discuss.bbchallenge.org/t/july-2nd-2024-we-have-proved-bb-5-47-176-870/237","created_at":"2024-07-02T16:57:13.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/jnrxuv/we_have_proved_bb_5_47_176_870","submitter_name":"yoshi","tags":["compsci","math"],"description":""},{"short_id":"ql9vt1","title":"What I Learned Building a CLI App in Rust","url":"http://stratus3d.com/blog/2023/07/18/what-i-learned-building-a-cli-app-in-rust/","created_at":"2023-07-20T07:54:49.000-05:00","comment_count":52,"comments_url":"https://lobste.rs/s/ql9vt1/what_i_learned_building_cli_app_rust","submitter_name":"Stratus3D","tags":["rust"],"description":""},{"short_id":"4gkrmb","title":"NP-Complete isn't (always) Hard","url":"https://www.hillelwayne.com/post/np-hard/","created_at":"2023-02-20T11:37:39.000-06:00","comment_count":18,"comments_url":"https://lobste.rs/s/4gkrmb/np_complete_isn_t_always_hard","submitter_name":"hwayne","tags":["compsci","programming"],"description":""},{"short_id":"zzuirh","title":"A curiously recurring lifetime issue","url":"https://blog.dureuill.net/articles/recurring-lifetime/","created_at":"2023-12-15T08:17:30.000-06:00","comment_count":20,"comments_url":"https://lobste.rs/s/zzuirh/curiously_recurring_lifetime_issue","submitter_name":"dureuill","tags":["api","c++","rust"],"description":""},{"short_id":"wbwtgm","title":"Good theory books you would recommend?","url":"","created_at":"2023-01-14T10:22:41.000-06:00","comment_count":29,"comments_url":"https://lobste.rs/s/wbwtgm/good_theory_books_you_would_recommend","submitter_name":"teymour","tags":["ask","compsci"],"description":"<p>By this I mean books on any topic of computer science or mathematics (ideally computer science adjacent mathematics) that opened up a new way of thinking about problems and exposed you to new ideas.</p>\n<p>Some of my recommendations:</p>\n<ul>\n<li>Why Programs Fail, Andreas Zeller</li>\n<li>Introduction to the Analysis of Algorithms, Flajolet and Sedgewick</li>\n<li>The Art and Craft of Mathematical Problem Solving, Paul Zeitz</li>\n</ul>\n"},{"short_id":"z4jjjp","title":"Flambda2 Ep. 3: Speculative Inlining","url":"https://ocamlpro.com/blog/2024_08_09_the_flambda2_snippets_3/","created_at":"2024-09-05T09:15:15.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/z4jjjp/flambda2_ep_3_speculative_inlining","submitter_name":"ignatius","tags":["compilers","ml","performance","plt"],"description":""},{"short_id":"j3j2kt","title":"The missing tier for query compilers","url":"https://www.scattered-thoughts.net/writing/the-missing-tier-for-query-compilers/","created_at":"2025-01-13T15:00:41.000-06:00","comment_count":12,"comments_url":"https://lobste.rs/s/j3j2kt/missing_tier_for_query_compilers","submitter_name":"eatonphil","tags":["databases"],"description":""},{"short_id":"3dlozj","title":"Derivative grammars: a symbolic approach to parsing with derivatives","url":"https://dl.acm.org/doi/10.1145/3360553","created_at":"2025-01-13T09:36:51.000-06:00","comment_count":4,"comments_url":"https://lobste.rs/s/3dlozj/derivative_grammars_symbolic_approach","submitter_name":"fanf","tags":["pdf","plt"],"description":""},{"short_id":"myqnqs","title":"Async Rust","url":"https://zed.dev/blog/zed-decoded-async-rust","created_at":"2024-04-09T13:04:02.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/myqnqs/async_rust","submitter_name":"kbknapp","tags":["rust"],"description":""},{"short_id":"tpe028","title":"On Learning Compilers and Creating Programming Languages","url":"https://www.craigstuntz.com/posts/2023-10-13-learning-compilers-and-programming-languages.html","created_at":"2023-10-24T08:56:41.000-05:00","comment_count":24,"comments_url":"https://lobste.rs/s/tpe028/on_learning_compilers_creating","submitter_name":"craigstuntz","tags":["compilers","plt"],"description":""},{"short_id":"lvjc6k","title":"Haskell: A Great Procedural Language","url":"https://entropicthoughts.com/haskell-procedural-programming","created_at":"2024-11-27T00:08:18.000-06:00","comment_count":19,"comments_url":"https://lobste.rs/s/lvjc6k/haskell_great_procedural_language","submitter_name":"kqr","tags":["haskell"],"description":""},{"short_id":"p30juy","title":"Why Swift's type checker is slow","url":"https://danielchasehooper.com/posts/why-swift-is-slow/","created_at":"2024-06-13T13:38:53.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/p30juy/why_swift_s_type_checker_is_slow","submitter_name":"asb","tags":["plt","swift"],"description":""},{"short_id":"1cfddf","title":"An Intro to DeepSeek's Distributed File System","url":"https://maknee.github.io/blog/2025/3FS-Performance-Journal-1/","created_at":"2025-04-16T11:41:54.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/1cfddf/intro_deepseek_s_distributed_file_system","submitter_name":"maknee","tags":["distributed"],"description":""},{"short_id":"v7lsrv","title":"Two Years of Rust","url":"https://borretti.me/article/two-years-of-rust","created_at":"2025-04-15T07:35:59.000-05:00","comment_count":57,"comments_url":"https://lobste.rs/s/v7lsrv/two_years_rust","submitter_name":"EvanHahn","tags":["rust"],"description":""},{"short_id":"hscqec","title":"Atomicless Concurrency (2023)","url":"https://mcyoung.xyz/2023/03/29/rseq-checkout/","created_at":"2025-04-15T21:00:32.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/hscqec/atomicless_concurrency_2023","submitter_name":"YogurtGuy","tags":["assembly","linux","performance"],"description":""},{"short_id":"ta5a6w","title":"Flambda2 Ep. 4: How to write a purely functional compiler","url":"https://ocamlpro.com/blog/2025_02_19_the_flambda2_snippets_4/","created_at":"2025-04-15T08:41:12.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/ta5a6w/flambda2_ep_4_how_write_purely_functional","submitter_name":"ignatius","tags":["compilers","ml","performance"],"description":""},{"short_id":"vn6j5k","title":"Async from scratch 2: Wake me maybe","url":"https://natkr.com/2025-04-15-async-from-scratch-2/","created_at":"2025-04-14T20:16:28.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/vn6j5k/async_from_scratch_2_wake_me_maybe","submitter_name":"natkr","tags":["rust"],"description":""},{"short_id":"wgiqko","title":"Decomposing Transactional Systems","url":"https://transactional.blog/blog/2025-decomposing-transactional-systems","created_at":"2025-04-17T17:18:52.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/wgiqko/decomposing_transactional_systems","submitter_name":"mjb","tags":["databases"],"description":""},{"short_id":"8an4my","title":"15,000 lines of verified cryptography now in Python","url":"http://jonathan.protzenko.fr/2025/04/18/python.html","created_at":"2025-04-18T14:27:18.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/8an4my/15_000_lines_verified_cryptography_now","submitter_name":"asb","tags":["cryptography","python"],"description":""},{"short_id":"ywiqey","title":"falsify: Hypothesis-inspired shrinking for Haskell","url":"https://www.well-typed.com/blog/2023/04/falsify/","created_at":"2025-04-19T08:08:23.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/ywiqey/falsify_hypothesis_inspired_shrinking","submitter_name":"sergeyb","tags":["haskell","python","testing"],"description":""},{"short_id":"c3dbkh","title":"A Survey Of System Languages (2024)","url":"https://wiki.alopex.li/SurveyOfSystemLanguages2024","created_at":"2024-12-17T19:27:38.000-06:00","comment_count":102,"comments_url":"https://lobste.rs/s/c3dbkh/survey_system_languages_2024","submitter_name":"icefox","tags":["plt"],"description":""},{"short_id":"8992zd","title":"All my favorite tracing tools: eBPF, QEMU, Perfetto, new ones I built and more","url":"https://thume.ca/2023/12/02/tracing-methods/","created_at":"2023-12-05T16:58:12.000-06:00","comment_count":12,"comments_url":"https://lobste.rs/s/8992zd/all_my_favorite_tracing_tools_ebpf_qemu","submitter_name":"trishume","tags":["performance"],"description":""},{"short_id":"lr7jor","title":"Async Rust is about concurrency, not (just) performance","url":"https://kobzol.github.io/rust/2025/01/15/async-rust-is-about-concurrency.html","created_at":"2025-01-15T08:47:02.000-06:00","comment_count":16,"comments_url":"https://lobste.rs/s/lr7jor/async_rust_is_about_concurrency_not_just","submitter_name":"emschwartz","tags":["rust"],"description":""},{"short_id":"zmnr01","title":"How decentralized is Bluesky really?","url":"https://dustycloud.org/blog/how-decentralized-is-bluesky/","created_at":"2024-11-22T10:54:02.000-06:00","comment_count":53,"comments_url":"https://lobste.rs/s/zmnr01/how_decentralized_is_bluesky_really","submitter_name":"icy","tags":["distributed","web"],"description":""},{"short_id":"fbyu2n","title":"How Designing Carbon C++ Interop Taught me About C++ Variadics & Bound Members","url":"https://youtu.be/8SGMy9ENGz8","created_at":"2024-11-22T22:06:18.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/fbyu2n/how_designing_carbon_c_interop_taught_me","submitter_name":"chandlerc","tags":["c++","plt","programming","video"],"description":""},{"short_id":"8lubts","title":"Why is std::pin::Pin so weird?","url":"https://sander.saares.eu/2024/11/06/why-is-stdpinpin-so-weird/","created_at":"2024-11-15T03:05:08.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/8lubts/why_is_std_pin_pin_so_weird","submitter_name":"bitfield","tags":["rust"],"description":""},{"short_id":"fsbkzg","title":"Improving the approachability of data-race safety","url":"https://github.com/hborla/swift-evolution/blob/approachable-concurrency-vision/visions/approachable-concurrency.md","created_at":"2024-11-23T11:58:31.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/fsbkzg/improving_approachability_data_race","submitter_name":"kevinc","tags":["swift"],"description":"<p>This is a prospective vision document. There’s a call for feedback by the language steering group in this <a href=\"https://forums.swift.org/t/prospective-vision-improving-the-approachability-of-data-race-safety/76183\" rel=\"ugc\">Swift community discussion</a>.</p>\n"},{"short_id":"xm8yyj","title":"The most elegant search data structure | (a,b)-trees","url":"https://youtube.com/watch?v=lifFgyB77zc","created_at":"2023-07-19T10:31:21.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/xm8yyj/most_elegant_search_data_structure_b","submitter_name":"dpercy","tags":["compsci","video"],"description":""},{"short_id":"fekcju","title":"Visions of the future: formal verification in Rust","url":"https://xav.io/blog/rust-formal-verification/","created_at":"2024-05-22T13:41:54.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/fekcju/visions_future_formal_verification_rust","submitter_name":"jado","tags":["plt","rust"],"description":""},{"short_id":"lunvg8","title":"Too dangerous for C++","url":"https://blog.dureuill.net/articles/too-dangerous-cpp/","created_at":"2024-02-09T12:17:44.000-06:00","comment_count":26,"comments_url":"https://lobste.rs/s/lunvg8/too_dangerous_for_c","submitter_name":"dureuill","tags":["c++","rust"],"description":""},{"short_id":"wrd9ff","title":"The last 5 years of V8's garbage collector","url":"https://wingolog.org/archives/2023/12/07/the-last-5-years-of-v8s-garbage-collector","created_at":"2023-12-07T06:29:16.000-06:00","comment_count":17,"comments_url":"https://lobste.rs/s/wrd9ff/last_5_years_v8_s_garbage_collector","submitter_name":"samebchase","tags":["javascript"],"description":""},{"short_id":"bjvznb","title":"Compiling higher order functions with GADTs","url":"https://injuly.in/blog/defunct/","created_at":"2024-05-09T01:44:02.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/bjvznb/compiling_higher_order_functions_with","submitter_name":"injuly","tags":["compilers","haskell","plt"],"description":""},{"short_id":"xsquae","title":"My Kind of REPL","url":"https://ianthehenry.com/posts/my-kind-of-repl/","created_at":"2023-07-05T09:24:35.000-05:00","comment_count":27,"comments_url":"https://lobste.rs/s/xsquae/my_kind_repl","submitter_name":"jmiven","tags":["programming"],"description":""},{"short_id":"tkzyme","title":"How do databases execute expressions?","url":"https://notes.eatonphil.com/2023-09-21-how-do-databases-execute-expressions.html","created_at":"2023-09-21T14:19:03.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/tkzyme/how_do_databases_execute_expressions","submitter_name":"eatonphil","tags":["compilers","databases"],"description":""},{"short_id":"sa0meo","title":"What is PID 0?","url":"https://blog.dave.tf/post/linux-pid0/","created_at":"2024-06-07T16:41:46.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/sa0meo/what_is_pid_0","submitter_name":"carlana","tags":["unix"],"description":""},{"short_id":"qxezif","title":"Effects, capabilities, and boxes: from scope-based reasoning to type-based reasoning and back (2022)","url":"https://dl.acm.org/doi/pdf/10.1145/3527320","created_at":"2024-06-08T18:51:06.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/qxezif/effects_capabilities_boxes_from_scope","submitter_name":"5d22b","tags":["pdf","plt"],"description":"<p>Abstract:</p>\n<blockquote>\n<p>Reasoning about the use of external resources is an important aspect of many practical applications. Effect systems enable tracking such information in types, but at the cost of complicating signatures of common functions. Capabilities coupled with escape analysis offer safety and natural signatures, but are often overly coarse grained and restrictive. We present System C, which builds on and generalizes ideas from type-based escape analysis and demonstrates that capabilities and effects can be reconciled harmoniously. By assuming that all functions are second class, we can admit natural signatures for many common programs. By introducing a notion of boxed values, we can lift the restrictions of second-class values at the cost of needing to track degree-of-impurity information in types. The system we present is expressive enough to support effect handlers in full capacity. We practically evaluate System C in an implementation and prove its soundness.</p>\n</blockquote>\n"},{"short_id":"kf3xym","title":"Introducing: Zero to Nix","url":"https://determinate.systems/posts/zero-to-nix","created_at":"2023-01-23T09:58:11.000-06:00","comment_count":25,"comments_url":"https://lobste.rs/s/kf3xym/introducing_zero_nix","submitter_name":"grahamc","tags":["nix"],"description":""},{"short_id":"jvxb8s","title":"My thoughts on OCaml","url":"https://osa1.net/posts/2023-04-24-ocaml-thoughts.html","created_at":"2023-04-25T09:01:23.000-05:00","comment_count":27,"comments_url":"https://lobste.rs/s/jvxb8s/my_thoughts_on_ocaml","submitter_name":"jado","tags":["ml"],"description":""},{"short_id":"zag1bo","title":"On Tech Debt: My Rust Library is now a CDO","url":"https://lucumr.pocoo.org/2024/3/26/rust-cdo/","created_at":"2024-03-26T09:08:02.000-05:00","comment_count":31,"comments_url":"https://lobste.rs/s/zag1bo/on_tech_debt_my_rust_library_is_now_cdo","submitter_name":"dani","tags":["rust"],"description":""},{"short_id":"dzk5tp","title":"LSP: the good, the bad, and the ugly","url":"https://www.michaelpj.com/blog/2024/09/03/lsp-good-bad-ugly.html","created_at":"2024-09-03T20:04:53.000-05:00","comment_count":28,"comments_url":"https://lobste.rs/s/dzk5tp/lsp_good_bad_ugly","submitter_name":"jmillikin","tags":["api"],"description":""},{"short_id":"yhtpk0","title":"Things Zig comptime Won't Do","url":"https://matklad.github.io/2025/04/19/things-zig-comptime-wont-do.html","created_at":"2025-04-19T22:21:53.000-05:00","comment_count":19,"comments_url":"https://lobste.rs/s/yhtpk0/things_zig_comptime_won_t_do","submitter_name":"jamii","tags":["plt","zig"],"description":""},{"short_id":"fywpfw","title":"Exploiting Undefined Behavior in C/C++ Programs for Optimization: A Study on the Performance Impact","url":"https://web.ist.utl.pt/nuno.lopes/pubs/ub-pldi25.pdf","created_at":"2025-04-22T21:47:58.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/fywpfw/exploiting_undefined_behavior_c_c","submitter_name":"PuercoPop","tags":["c","pdf"],"description":""},{"short_id":"lj5st0","title":"Zed Decoded: Linux when?","url":"https://zed.dev/blog/zed-decoded-linux-when","created_at":"2024-05-07T10:30:46.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/lj5st0/zed_decoded_linux_when","submitter_name":"RGBCube","tags":["programming"],"description":""},{"short_id":"fauwpt","title":"Okay, fine, I'm using a static site generator now","url":"https://xeiaso.net/blog/xesite-v4/","created_at":"2023-10-12T14:56:15.000-05:00","comment_count":33,"comments_url":"https://lobste.rs/s/fauwpt/okay_fine_i_m_using_static_site_generator","submitter_name":"cadey","tags":["go","javascript","web"],"description":""},{"short_id":"hpxj9o","title":"Was Rust Worth It For Us?","url":"https://jsoverson.medium.com/was-rust-worth-it-f43d171fb1b3","created_at":"2023-10-25T17:36:00.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/hpxj9o/was_rust_worth_it_for_us","submitter_name":"cgenschwap","tags":["rust"],"description":""},{"short_id":"b5buoi","title":"TigerBeetle Architecture","url":"https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/internals/ARCHITECTURE.md","created_at":"2025-03-04T05:59:43.000-06:00","comment_count":18,"comments_url":"https://lobste.rs/s/b5buoi/tigerbeetle_architecture","submitter_name":"matklad","tags":["databases","distributed","zig"],"description":""},{"short_id":"dhfbu9","title":"Generics and Typeclasses in Knuckledragger","url":"https://www.philipzucker.com/knuckle_typeclass/","created_at":"2025-03-03T11:45:49.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/dhfbu9/generics_typeclasses_knuckledragger","submitter_name":"asb","tags":["formalmethods","plt","python"],"description":""},{"short_id":"3yblc2","title":"Claiming, auto and otherwise","url":"https://smallcultfollowing.com/babysteps/blog/2024/06/21/claim-auto-and-otherwise/","created_at":"2024-06-21T06:35:35.000-05:00","comment_count":33,"comments_url":"https://lobste.rs/s/3yblc2/claiming_auto_otherwise","submitter_name":"kerollmops","tags":["rust"],"description":""},{"short_id":"evjohn","title":"Modular Borrowing Without Ownership or Linear Types","url":"https://2024.splashcon.org/details/iwaco-2024-papers/5/Modular-Borrowing-Without-Ownership-or-Linear-Types","created_at":"2024-10-22T04:51:34.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/evjohn/modular_borrowing_without_ownership","submitter_name":"manuel","tags":["plt"],"description":""},{"short_id":"23nc0b","title":"Adding row polymorphism to Damas-Hindley-Milner","url":"https://bernsteinbear.com/blog/row-poly/","created_at":"2024-10-23T00:27:52.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/23nc0b/adding_row_polymorphism_damas_hindley","submitter_name":"surprisetalk","tags":["plt"],"description":""},{"short_id":"g9ob2p","title":"Unsafe Rust Is Harder Than C","url":"https://chadaustin.me/2024/10/intrusive-linked-list-in-rust/","created_at":"2024-10-25T06:10:21.000-05:00","comment_count":29,"comments_url":"https://lobste.rs/s/g9ob2p/unsafe_rust_is_harder_than_c","submitter_name":"imadij","tags":["rust"],"description":""},{"short_id":"zh4h99","title":"Generators with UnpinCell","url":"https://without.boats/blog/generators-with-unpin-cell/","created_at":"2024-10-25T09:15:53.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/zh4h99/generators_with_unpincell","submitter_name":"withoutboats","tags":["rust"],"description":""},{"short_id":"uersyg","title":"The most ugly trick in Rust language","url":"https://types.pl/@safinaskar/111325536022277867","created_at":"2023-10-30T14:10:34.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/uersyg/most_ugly_trick_rust_language","submitter_name":"safinaskar","tags":["plt","rust"],"description":""},{"short_id":"icz96h","title":"HYTRADBOI 2025 postmortem","url":"https://www.scattered-thoughts.net/writing/hytradboi-2025-postmortem/","created_at":"2025-03-04T14:36:10.000-06:00","comment_count":11,"comments_url":"https://lobste.rs/s/icz96h/hytradboi_2025_postmortem","submitter_name":"jamii","tags":["event"],"description":""},{"short_id":"gz90fx","title":"Answer Set Programming 01 | Just the Facts","url":"https://team.charmiq.ai/@surfacetension/building-blocks/asp-01-just-the-facts","created_at":"2025-03-04T19:59:54.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/gz90fx/answer_set_programming_01_just_facts","submitter_name":"vosper","tags":["programming"],"description":""},{"short_id":"b7gvbq","title":"Algebraic effects are a functional approach to manage side effects","url":"https://crowdhailer.me/2025-02-14/algebraic-effects-are-a-functional-approach-to-manage-side-effects/","created_at":"2025-03-06T19:20:56.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/b7gvbq/algebraic_effects_are_functional","submitter_name":"iamwil","tags":["programming"],"description":""},{"short_id":"wccows","title":"Distributed Systems without Raft (part 1)","url":"https://david-delassus.medium.com/distributed-systems-without-raft-part-1-a6b0b43db7ee","created_at":"2025-03-06T11:12:08.000-06:00","comment_count":6,"comments_url":"https://lobste.rs/s/wccows/distributed_systems_without_raft_part_1","submitter_name":"linkdd","tags":["distributed","go","programming"],"description":""},{"short_id":"pjbdph","title":"Systems Correctness Practices at AWS: Leveraging Formal and Semi-formal Methods","url":"https://dl.acm.org/doi/10.1145/3712057","created_at":"2025-03-06T14:02:54.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/pjbdph/systems_correctness_practices_at_aws","submitter_name":"ahelwer","tags":["formalmethods"],"description":""},{"short_id":"suafzq","title":"Bit-Stealing Made Legal: Compilation for Custom Memory Representations Of Algebraic Data Types","url":"https://inria.hal.science/hal-04165615","created_at":"2023-10-22T23:07:32.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/suafzq/bit_stealing_made_legal_compilation_for","submitter_name":"andyc","tags":["compilers","compsci","plt"],"description":""},{"short_id":"mx9hxr","title":"Career advice for young system programmers","url":"https://glaubercosta-11125.medium.com/career-advice-for-young-system-programmers-c7443f2d3edf","created_at":"2023-08-18T02:37:55.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/mx9hxr/career_advice_for_young_system","submitter_name":"rusrushal13","tags":["philosophy","practices"],"description":""},{"short_id":"zmm8eg","title":"Some Programming Language Ideas","url":"https://jerf.org/iri/post/2025/programming_language_ideas/","created_at":"2025-01-08T12:57:48.000-06:00","comment_count":25,"comments_url":"https://lobste.rs/s/zmm8eg/some_programming_language_ideas","submitter_name":"carlana","tags":["plt"],"description":""},{"short_id":"2rwzq4","title":"TigerBeetle on The Primeagen","url":"https://www.youtube.com/watch?v=sC1B3d9C_sI","created_at":"2024-02-26T14:50:08.000-06:00","comment_count":12,"comments_url":"https://lobste.rs/s/2rwzq4/tigerbeetle_on_primeagen","submitter_name":"jorangreef","tags":["distributed","video","wasm","zig"],"description":""},{"short_id":"pmhf1a","title":"Dada, an experiement by the creators of Rust","url":"https://dada-lang.org/","created_at":"2024-03-05T08:03:54.000-06:00","comment_count":49,"comments_url":"https://lobste.rs/s/pmhf1a/dada_experiement_by_creators_rust","submitter_name":"veera","tags":["plt","rust"],"description":""},{"short_id":"d3qqgv","title":"An alternative idea for a typed language living alongside/inside JavaScript","url":"https://axisofeval.blogspot.com/2024/11/an-alternative-idea-for-typed-language.html","created_at":"2024-11-09T15:05:55.000-06:00","comment_count":10,"comments_url":"https://lobste.rs/s/d3qqgv/alternative_idea_for_typed_language","submitter_name":"manuel","tags":["javascript","plt"],"description":""},{"short_id":"az2qlz","title":"An epic treatise on error models for systems programming languages","url":"https://typesanitizer.com/blog/errors.html","created_at":"2025-03-08T01:32:19.000-06:00","comment_count":39,"comments_url":"https://lobste.rs/s/az2qlz/epic_treatise_on_error_models_for_systems","submitter_name":"asb","tags":["plt"],"description":""},{"short_id":"retfuv","title":"Databases are not Compilers","url":"https://buttondown.email/jaffray/archive/databases-are-not-compilers/","created_at":"2023-10-30T13:08:47.000-05:00","comment_count":33,"comments_url":"https://lobste.rs/s/retfuv/databases_are_not_compilers","submitter_name":"eatonphil","tags":["compilers","databases"],"description":""},{"short_id":"kt1ayf","title":"Fixing the Next 10,000 Aliasing Bugs","url":"https://blog.polybdenum.com/2023/03/05/fixing-the-next-10-000-aliasing-bugs.html","created_at":"2023-03-06T05:44:39.000-06:00","comment_count":11,"comments_url":"https://lobste.rs/s/kt1ayf/fixing_next_10_000_aliasing_bugs","submitter_name":"msfjarvis","tags":["plt"],"description":""},{"short_id":"gpb0qh","title":"Garbage Collection for Systems Programmers","url":"https://bitbashing.io/gc-for-systems-programmers.html","created_at":"2024-03-27T04:52:29.000-05:00","comment_count":35,"comments_url":"https://lobste.rs/s/gpb0qh/garbage_collection_for_systems","submitter_name":"ngrilly","tags":["c","linux","performance"],"description":""},{"short_id":"qxlh6m","title":"Native Implementation of Mutable Value Semantics","url":"https://arxiv.org/pdf/2106.12678.pdf","created_at":"2023-04-28T02:51:30.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/qxlh6m/native_implementation_mutable_value","submitter_name":"matklad","tags":["pdf","plt"],"description":""},{"short_id":"5xeuew","title":"Losing the Faith on Testing","url":"https://registerspill.thorstenball.com/p/a-few-words-on-testing","created_at":"2024-03-16T18:31:39.000-05:00","comment_count":42,"comments_url":"https://lobste.rs/s/5xeuew/losing_faith_on_testing","submitter_name":"carlana","tags":["testing"],"description":""},{"short_id":"a46njy","title":"Rust in 2025: Targeting foundational software","url":"https://smallcultfollowing.com/babysteps/blog/2025/03/10/rust-2025-intro/","created_at":"2025-03-10T09:53:28.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/a46njy/rust_2025_targeting_foundational","submitter_name":"krtab","tags":["rust"],"description":""},{"short_id":"fbndgj","title":"Functional vs Data-Driven development: a Case-Study in Clojure & OCaml","url":"https://kirancodes.me/posts/log-data-oriented-programming.html","created_at":"2025-03-09T12:56:35.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/fbndgj/functional_vs_data_driven_development","submitter_name":"veqq","tags":["lisp","ml"],"description":""},{"short_id":"xszyoz","title":"FIFO queues are all you need for cache eviction","url":"https://blog.jasony.me/system/cache/2023/08/01/s3fifo","created_at":"2023-08-27T19:47:38.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/xszyoz/fifo_queues_are_all_you_need_for_cache","submitter_name":"azeemba","tags":["distributed","performance"],"description":""},{"short_id":"z96yzi","title":"A few programming language features I’d like to see","url":"https://neilmadden.blog/2023/01/18/a-few-programming-language-features-id-like-to-see/","created_at":"2023-01-19T09:49:05.000-06:00","comment_count":10,"comments_url":"https://lobste.rs/s/z96yzi/few_programming_language_features_i_d","submitter_name":"calvin","tags":["plt"],"description":""},{"short_id":"ozojfe","title":"ARC: A Self-Tuning, Low Overhead Replacement Cache","url":"https://www.usenix.org/legacy/events/fast03/tech/full_papers/megiddo/megiddo.pdf","created_at":"2023-12-03T19:40:14.000-06:00","comment_count":8,"comments_url":"https://lobste.rs/s/ozojfe/arc_self_tuning_low_overhead_replacement","submitter_name":"friendlysock","tags":["compsci","pdf"],"description":""},{"short_id":"1cqlzd","title":"Perspectives from the Technical University of Munich","url":"https://mirawelner.com/posts/TUM_thoughts.html","created_at":"2025-03-11T20:56:30.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/1cqlzd/perspectives_from_technical_university","submitter_name":"MiraWelner","tags":["education"],"description":""},{"short_id":"z66ftn","title":"The Art of Formatting Code","url":"https://mcyoung.xyz/2025/03/11/formatters/","created_at":"2025-03-11T23:48:38.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/z66ftn/art_formatting_code","submitter_name":"asb","tags":["programming"],"description":""},{"short_id":"y1dvmd","title":"Representing type lattices compactly","url":"https://bernsteinbear.com/blog/lattice-bitset/","created_at":"2025-03-11T11:44:39.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/y1dvmd/representing_type_lattices_compactly","submitter_name":"surprisetalk","tags":["compilers","plt"],"description":""},{"short_id":"phiyu4","title":"Inspecting rustc LLVM optimization remarks using cargo-remark","url":"https://kobzol.github.io/rust/cargo/2023/08/12/rust-llvm-optimization-remarks.html","created_at":"2023-08-21T05:25:18.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/phiyu4/inspecting_rustc_llvm_optimization","submitter_name":"adaszko","tags":["rust"],"description":""},{"short_id":"ry1gda","title":"An Introduction to TLA+ and Its Use in Parties","url":"https://www.innoq.com/en/articles/2023/04/an-introduction-to-tla/","created_at":"2023-05-09T04:18:04.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/ry1gda/introduction_tla_its_use_parties","submitter_name":"jeeger","tags":["formalmethods"],"description":""},{"short_id":"j5xrsf","title":"MDN Curriculum","url":"https://developer.mozilla.org/en-US/curriculum/","created_at":"2024-02-28T07:26:42.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/j5xrsf/mdn_curriculum","submitter_name":"freddyb","tags":["web"],"description":""},{"short_id":"2ep6mu","title":"The seven programming ur-languages","url":"https://madhadron.com/programming/seven_ur_languages.html","created_at":"2023-05-04T00:12:48.000-05:00","comment_count":19,"comments_url":"https://lobste.rs/s/2ep6mu/seven_programming_ur_languages","submitter_name":"wryl","tags":["plt","programming"],"description":""},{"short_id":"cczkdj","title":"Faster virtual machines: Speeding up programming language execution","url":"https://mort.coffee/home/fast-interpreters/","created_at":"2023-01-15T10:17:08.000-06:00","comment_count":23,"comments_url":"https://lobste.rs/s/cczkdj/faster_virtual_machines_speeding_up","submitter_name":"mort","tags":["assembly","c","compilers","performance","plt"],"description":""},{"short_id":"rvl9yh","title":"Verifying Selection Sort: an Introduction to Program Verification in Dafny","url":"https://dafny.org/blog/2023/10/11/insertion-sort/","created_at":"2023-10-18T12:05:16.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/rvl9yh/verifying_selection_sort_introduction","submitter_name":"hwayne","tags":["formalmethods"],"description":""},{"short_id":"qsrsff","title":"Go internals: invariance and memory layout of slices (2021)","url":"https://eli.thegreenplace.net/2021/go-internals-invariance-and-memory-layout-of-slices/","created_at":"2023-08-06T15:30:41.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/qsrsff/go_internals_invariance_memory_layout","submitter_name":"agent281","tags":["go"],"description":""},{"short_id":"8qdaps","title":"Demystifying Pratt Parsers","url":"https://martin.janiczek.cz/2023/07/03/demystifying-pratt-parsers.html","created_at":"2023-07-03T07:59:27.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/8qdaps/demystifying_pratt_parsers","submitter_name":"janiczek","tags":["compilers","plt"],"description":""},{"short_id":"hxbjug","title":"did u ever read so hard u accidentally wrote?","url":"https://blog.danslimmon.com/2025/03/14/did-u-ever-read-so-hard-u-accidentally-wrote/","created_at":"2025-03-14T10:10:25.000-05:00","comment_count":12,"comments_url":"https://lobste.rs/s/hxbjug/did_u_ever_read_so_hard_u_accidentally","submitter_name":"soulcutter","tags":["databases","debugging"],"description":""},{"short_id":"peyn5x","title":"snmalloc: Message passing based allocator","url":"https://github.com/microsoft/snmalloc","created_at":"2023-10-11T23:12:01.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/peyn5x/snmalloc_message_passing_based","submitter_name":"emschwartz","tags":["c++"],"description":""},{"short_id":"6tz1oq","title":"Hacking on PostgreSQL is really hard","url":"https://rhaas.blogspot.com/2024/05/hacking-on-postgresql-is-really-hard.html","created_at":"2024-05-02T02:11:26.000-05:00","comment_count":21,"comments_url":"https://lobste.rs/s/6tz1oq/hacking_on_postgresql_is_really_hard","submitter_name":"jmillikin","tags":["practices"],"description":""},{"short_id":"xttfur","title":"Language interop and the extensible compiler","url":"https://smallcultfollowing.com/babysteps/blog/2025/03/18/lang-interop-extensibility/","created_at":"2025-03-19T04:35:03.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/xttfur/language_interop_extensible_compiler","submitter_name":"bitfield","tags":["compilers","rust"],"description":""},{"short_id":"mg1khc","title":"Does unsafe undermine Rust's guarantees?","url":"https://steveklabnik.com/writing/does-unsafe-undermine-rusts-guarantees/","created_at":"2025-03-19T10:59:12.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/mg1khc/does_unsafe_undermine_rust_s_guarantees","submitter_name":"steveklabnik","tags":["compsci","plt","rust"],"description":"<p>Hey folks, I don’t normally write about more CS-y kinds of things, but I wanted to in this post. I’m pretty sure I did an okay job of representing these ideas to a broader audience, but given that I only got a BS in CS, I may have done less than an okay job. Feedback very welcome.</p>\n"},{"short_id":"48hqpz","title":"Faster interpreters in Go: Catching up with C++","url":"https://planetscale.com/blog/faster-interpreters-in-go-catching-up-with-cpp","created_at":"2025-03-20T12:25:21.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/48hqpz/faster_interpreters_go_catching_up_with_c","submitter_name":"xvello","tags":["databases","go","performance"],"description":""},{"short_id":"aevptj","title":"Why is Prettier rock solid?","url":"https://mrmr.io/til/prettier","created_at":"2024-02-19T20:34:43.000-06:00","comment_count":18,"comments_url":"https://lobste.rs/s/aevptj/why_is_prettier_rock_solid","submitter_name":"hongminhee","tags":["haskell","plt"],"description":""},{"short_id":"lxysd2","title":"Semantics and Scheduling for Machine Knitting Compilers","url":"https://textiles-lab.github.io/publications/2023-knitout-semantics/","created_at":"2024-06-29T07:21:07.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/lxysd2/semantics_scheduling_for_machine","submitter_name":"fanf","tags":["art","plt"],"description":""},{"short_id":"tlmvrr","title":"I'm a programmer and I'm stupid","url":"https://antonz.org/stupid/","created_at":"2024-03-07T01:44:50.000-06:00","comment_count":96,"comments_url":"https://lobste.rs/s/tlmvrr/i_m_programmer_i_m_stupid","submitter_name":"av","tags":["practices"],"description":""},{"short_id":"aljhv8","title":"Hasochism: The Pleasure and Pain of Dependently Typed Haskell Programming","url":"https://personal.cis.strath.ac.uk/conor.mcbride/pub/hasochism.pdf","created_at":"2025-01-19T12:04:50.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/aljhv8/hasochism_pleasure_pain_dependently","submitter_name":"fanf","tags":["haskell","pdf"],"description":""},{"short_id":"hbzctm","title":"Type Inference in Rust and C++","url":"https://herecomesthemoon.net/2025/01/type-inference-in-rust-and-cpp/","created_at":"2025-01-21T07:37:42.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/hbzctm/type_inference_rust_c","submitter_name":"mond","tags":["c++","plt","rust"],"description":""},{"short_id":"zi7kdx","title":"ACTORS: A Model of Concurrent Computation in Distributed Systems (1985)","url":"https://dspace.mit.edu/handle/1721.1/6952","created_at":"2025-01-21T13:14:25.000-06:00","comment_count":10,"comments_url":"https://lobste.rs/s/zi7kdx/actors_model_concurrent_computation","submitter_name":"animatronic","tags":["distributed"],"description":""},{"short_id":"4c51gw","title":"CakeML","url":"https://cakeml.org/","created_at":"2024-04-23T10:51:54.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/4c51gw/cakeml","submitter_name":"quad","tags":["compilers","formalmethods","ml"],"description":""},{"short_id":"w8vovg","title":"Squeezing a Little More Performance Out of Bytecode Interpreters","url":"https://stefan-marr.de/2023/06/squeezing-a-little-more-performance-out-of-bytecode-interpreters/","created_at":"2023-06-17T23:21:37.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/w8vovg/squeezing_little_more_performance_out","submitter_name":"abhi9u","tags":["compilers","performance"],"description":""},{"short_id":"bo0yqm","title":"The CAP Theorem is Irrelevant for Cloud Systems","url":"https://brooker.co.za/blog/2024/07/25/cap-again.html","created_at":"2024-07-25T09:53:07.000-05:00","comment_count":36,"comments_url":"https://lobste.rs/s/bo0yqm/cap_theorem_is_irrelevant_for_cloud","submitter_name":"antonz","tags":["distributed"],"description":""},{"short_id":"x5avwc","title":"Verse Language Reference","url":"https://dev.epicgames.com/documentation/en-us/uefn/verse-language-reference","created_at":"2023-03-23T03:59:22.000-05:00","comment_count":19,"comments_url":"https://lobste.rs/s/x5avwc/verse_language_reference","submitter_name":"knl","tags":["programming"],"description":""},{"short_id":"mxwit7","title":"Link-time optimisation (LTO)","url":"https://convolv.es/guides/lto/","created_at":"2023-11-08T10:19:21.000-06:00","comment_count":17,"comments_url":"https://lobste.rs/s/mxwit7/link_time_optimisation_lto","submitter_name":"jryans","tags":["compilers"],"description":""},{"short_id":"rurlxp","title":"Asynchronous clean-up [in Rust]","url":"https://without.boats/blog/asynchronous-clean-up/","created_at":"2024-02-24T09:41:20.000-06:00","comment_count":26,"comments_url":"https://lobste.rs/s/rurlxp/asynchronous_clean_up_rust","submitter_name":"withoutboats","tags":["rust"],"description":""},{"short_id":"krqlml","title":"A Lambda Calculus With Coroutines and Heapless, Directly-Called Closures","url":"https://ayazhafiz.com/articles/23/a-lambda-calculus-with-coroutines-and-heapless-closures","created_at":"2023-02-20T10:57:54.000-06:00","comment_count":8,"comments_url":"https://lobste.rs/s/krqlml/lambda_calculus_with_coroutines","submitter_name":"hafiz","tags":["compilers","plt"],"description":""},{"short_id":"m1mv4o","title":"The Structure of a Programming Language Revolution (2012)","url":"https://www.dreamsongs.com/Files/Incommensurability.pdf","created_at":"2024-10-24T10:57:41.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/m1mv4o/structure_programming_language","submitter_name":"dpk","tags":["historical","pdf","plt"],"description":""},{"short_id":"djphwz","title":"Type Tailoring","url":"https://users.cs.utah.edu/~blg/publications/tt/wcfg-ecoop-2024.pdf","created_at":"2024-10-24T17:27:26.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/djphwz/type_tailoring","submitter_name":"veqq","tags":["lisp","pdf","plt"],"description":""},{"short_id":"lfguc0","title":"A Mathematical Model of Package Management Systems","url":"https://arxiv.org/abs/2302.05417","created_at":"2024-10-17T05:22:55.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/lfguc0/mathematical_model_package_management","submitter_name":"linkdd","tags":["math","pdf","plt","programming"],"description":""},{"short_id":"oxywix","title":"When static types make your code shorter","url":"https://evanhahn.com/when-static-types-make-your-code-shorter/","created_at":"2023-12-04T08:47:52.000-06:00","comment_count":117,"comments_url":"https://lobste.rs/s/oxywix/when_static_types_make_your_code_shorter","submitter_name":"EvanHahn","tags":["plt"],"description":""},{"short_id":"8mzfmj","title":"Improving Your Zig Language Server Experience","url":"https://kristoff.it/blog/improving-your-zls-experience/","created_at":"2024-07-01T17:45:57.000-05:00","comment_count":8,"comments_url":"https://lobste.rs/s/8mzfmj/improving_your_zig_language_server","submitter_name":"kristoff","tags":["zig"],"description":""},{"short_id":"ypck1n","title":"How to stop Linux threads cleanly","url":"https://mazzo.li/posts/stopping-linux-threads.html","created_at":"2024-01-08T01:45:29.000-06:00","comment_count":23,"comments_url":"https://lobste.rs/s/ypck1n/how_stop_linux_threads_cleanly","submitter_name":"francesco","tags":["assembly","c","c++","linux"],"description":""},{"short_id":"jr48n1","title":"Threads and Goroutines","url":"https://shane.ai/posts/threads-and-goroutines/","created_at":"2023-07-21T16:26:42.000-05:00","comment_count":69,"comments_url":"https://lobste.rs/s/jr48n1/threads_goroutines","submitter_name":"shanemhansen","tags":["go","linux","rust"],"description":""},{"short_id":"8gbxet","title":"Coroutines and effects","url":"https://without.boats/blog/coroutines-and-effects/","created_at":"2024-04-20T09:38:42.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/8gbxet/coroutines_effects","submitter_name":"withoutboats","tags":["plt","rust"],"description":""},{"short_id":"hhcros","title":"Somehow AutoHotKey is kinda good now","url":"https://www.hillelwayne.com/post/ahk-v2/","created_at":"2023-05-03T13:17:06.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/hhcros/somehow_autohotkey_is_kinda_good_now","submitter_name":"hwayne","tags":["release","windows"],"description":""},{"short_id":"6eizz1","title":"The Wizardry Frontier ","url":"https://v5.chriskrycho.com/journal/wizardry-frontier/","created_at":"2023-12-07T12:10:31.000-06:00","comment_count":7,"comments_url":"https://lobste.rs/s/6eizz1/wizardry_frontier","submitter_name":"chriskrycho","tags":["haskell","plt","rust"],"description":""},{"short_id":"ypuwrw","title":"Building a search engine from scratch, in Rust: part 1","url":"https://jdrouet.github.io/posts/202503170800-search-engine-part-1/","created_at":"2025-03-29T05:58:44.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/ypuwrw/building_search_engine_from_scratch_rust","submitter_name":"Unfixable1373","tags":["rust","wasm"],"description":""},{"short_id":"2qafif","title":"Learn CSS Layout The Pedantic Way","url":"https://book.mixu.net/css/","created_at":"2025-03-28T18:55:49.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/2qafif/learn_css_layout_pedantic_way","submitter_name":"chamlis","tags":["css","web"],"description":""},{"short_id":"dfjcom","title":"Data demand some damn respect","url":"https://taylor.town/flat-scraps-002","created_at":"2025-03-28T08:35:16.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/dfjcom/data_demand_some_damn_respect","submitter_name":"surprisetalk","tags":["compilers","rant"],"description":""},{"short_id":"g8pxhy","title":"Things that go wrong with disk IO","url":"https://notes.eatonphil.com/2025-03-27-things-that-go-wrong-with-disk-io.html","created_at":"2025-03-27T12:37:44.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/g8pxhy/things_go_wrong_with_disk_io","submitter_name":"eatonphil","tags":["databases","linux"],"description":""},{"short_id":"6ngygp","title":"Pile of Eternal Rejections: The Cost of Garbage Collection for State Machine Replication – Aleksey Charapko","url":"https://charap.co/pile-of-eternal-rejections-the-cost-of-garbage-collection-for-state-machine-replication/","created_at":"2025-03-27T11:42:57.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/6ngygp/pile_eternal_rejections_cost_garbage","submitter_name":"yorickpeterse","tags":["performance","plt"],"description":""},{"short_id":"dqhofu","title":"Simple Datalog engine in Rust (2018)","url":"https://github.com/frankmcsherry/blog/blob/master/posts/2018-05-19.md","created_at":"2025-03-27T16:28:32.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/dqhofu/simple_datalog_engine_rust_2018","submitter_name":"veqq","tags":["databases","rust"],"description":""},{"short_id":"mvcoat","title":"Rust Any part 3: Finally we have upcasts","url":"https://lucumr.pocoo.org/2025/3/27/any-upcast/","created_at":"2025-03-30T06:15:19.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/mvcoat/rust_any_part_3_finally_we_have_upcasts","submitter_name":"jmillikin","tags":["rust"],"description":""},{"short_id":"2rgojg","title":"Single Ownership and Memory Safety without Borrow Checking, Reference Counting, or Garbage Collection","url":"https://verdagon.dev/blog/single-ownership-without-borrow-checking-rc-gc","created_at":"2023-06-16T06:28:09.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/2rgojg/single_ownership_memory_safety_without","submitter_name":"mpweiher","tags":["rust"],"description":""},{"short_id":"y43nr9","title":"CPS Representation and Foundational Design Decisions in Flambda2","url":"https://ocamlpro.com/blog/2024_01_31_the_flambda2_snippets_1/","created_at":"2024-06-20T18:47:44.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/y43nr9/cps_representation_foundational_design","submitter_name":"ignatius","tags":["compilers","ml","plt"],"description":""},{"short_id":"bykhdz","title":"Rust to Assembly: Understanding the Inner Workings of Rust","url":"https://eventhelix.com/rust/","created_at":"2023-06-01T06:10:05.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/bykhdz/rust_assembly_understanding_inner","submitter_name":"williballenthin","tags":["reversing","rust"],"description":""},{"short_id":"s8iyop","title":"Semantics of Programming (video lectures that go with the \"Concrete Semantics\" book)","url":"https://live.rbg.tum.de/?year=2022&term=W&view=3&slug=Sem","created_at":"2024-11-30T15:04:56.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/s8iyop/semantics_programming_video_lectures_go","submitter_name":"nikki93","tags":["formalmethods"],"description":"<p>I’ve been working through the “Software Foundations” material that’s been mentioned around here; and also briefly looked at but haven’t yet worked through “Concrete Semantics.” I do like watching / listening to lectures too, and I came across a bunch for Software Foundations (also some from Xavier Leroy on compiler certification – <a href=\"https://www.youtube.com/playlist?list=PLGCr8P_YncjUX7yHchN7KSS83KXMHmC6e\" rel=\"ugc\">https://www.youtube.com/playlist?list=PLGCr8P_YncjUX7yHchN7KSS83KXMHmC6e</a>).</p>\n<p>I hadn’t seen this series on Concrete Semantics be mentioned (I had to do a little bit of diving to find it), so thought I’d post. You’ll likely want to click ‘Oldest first’ at the top if you want to check out the lectures in order.</p>\n"},{"short_id":"rtmz0y","title":"When is inlining useful?","url":"https://osa1.net/posts/2024-12-07-inlining.html","created_at":"2024-12-07T20:12:34.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/rtmz0y/when_is_inlining_useful","submitter_name":"emschwartz","tags":["plt"],"description":""},{"short_id":"7mbcn0","title":"Writing down (and searching through) every UUID","url":"https://eieio.games/blog/writing-down-every-uuid/","created_at":"2024-12-06T16:51:09.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/7mbcn0/writing_down_searching_through_every","submitter_name":"lorddimwit","tags":["math","programming"],"description":""},{"short_id":"wigald","title":"Precedence-aware pretty printing","url":"https://bernsteinbear.com/blog/precedence-printing/","created_at":"2024-08-25T23:19:44.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/wigald/precedence_aware_pretty_printing","submitter_name":"hashemi","tags":["compilers"],"description":""},{"short_id":"fy551x","title":"Thoughts on Zig","url":"https://arne.me/blog/thoughts-on-zig","created_at":"2024-05-01T11:45:57.000-05:00","comment_count":55,"comments_url":"https://lobste.rs/s/fy551x/thoughts_on_zig","submitter_name":"bahlo","tags":["zig"],"description":"<p>After three nights of using it.</p>\n"},{"short_id":"gpvjlw","title":"Interaction nets","url":"https://wiki.xxiivv.com/site/interaction_nets.html","created_at":"2025-03-31T10:38:11.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/gpvjlw/interaction_nets","submitter_name":"Hecate","tags":["plt"],"description":""},{"short_id":"espq0p","title":"Warren's Abstract Machine: A Tutorial Reconstruction (1999)","url":"https://web.archive.org/web/20110403055600/http://wambook.sourceforge.net/","created_at":"2025-03-31T11:33:02.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/espq0p/warren_s_abstract_machine_tutorial","submitter_name":"hwayne","tags":["pdf","plt"],"description":""},{"short_id":"ybbhxp","title":"Giving up the dylib dream","url":"https://octet-stream.net/b/scb/2025-03-31-giving-up-the-dylib-dream.html","created_at":"2025-03-31T08:08:47.000-05:00","comment_count":93,"comments_url":"https://lobste.rs/s/ybbhxp/giving_up_dylib_dream","submitter_name":"thombles","tags":["programming"],"description":""},{"short_id":"xtrx71","title":"Intuiting TLS","url":"https://kprotty.me/2025/04/01/intuiting-tls.html","created_at":"2025-04-01T09:01:58.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/xtrx71/intuiting_tls","submitter_name":"kprotty","tags":["cryptography","education"],"description":""},{"short_id":"sjnbsz","title":"3110 Coq Tactics Cheatsheet","url":"https://www.cs.cornell.edu/courses/cs3110/2018sp/a5/coq-tactics-cheatsheet.html","created_at":"2025-03-31T21:15:47.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/sjnbsz/3110_coq_tactics_cheatsheet","submitter_name":"gnyeki","tags":["formalmethods"],"description":""},{"short_id":"w9l7q5","title":"The Best Refactoring You've Never Heard Of","url":"https://www.pathsensitive.com/2019/07/the-best-refactoring-youve-never-heard.html","created_at":"2025-04-04T10:59:47.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/w9l7q5/best_refactoring_you_ve_never_heard","submitter_name":"matklad","tags":["programming"],"description":""},{"short_id":"sirtt6","title":"How We Got the Generics We Have: (Or, how I learned to stop worrying and love erasure)","url":"https://openjdk.org/projects/valhalla/design-notes/in-defense-of-erasure","created_at":"2025-04-03T11:43:46.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/sirtt6/how_we_got_generics_we_have_how_i_learned","submitter_name":"icefox","tags":["java","plt"],"description":""},{"short_id":"9p2yca","title":"Deadlock-free Mutexes and Directed Acyclic Graphs (2022)","url":"https://bertptrs.nl/2022/06/23/deadlock-free-mutexes-and-directed-acyclic-graphs.html","created_at":"2025-04-03T12:44:50.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/9p2yca/deadlock_free_mutexes_directed_acyclic","submitter_name":"ReinierMaas","tags":["rust"],"description":""},{"short_id":"qyhip1","title":"Rust Temporary Lifetimes and \"Super Let\"","url":"https://blog.m-ou.se/super-let/","created_at":"2024-01-10T13:49:33.000-06:00","comment_count":4,"comments_url":"https://lobste.rs/s/qyhip1/rust_temporary_lifetimes_super_let","submitter_name":"pushcx","tags":["rust"],"description":""},{"short_id":"e5kbev","title":"Baby's second wasm compiler","url":"https://www.scattered-thoughts.net/writing/babys-second-wasm-compiler","created_at":"2024-07-21T14:35:21.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/e5kbev/baby_s_second_wasm_compiler","submitter_name":"jamii","tags":["compilers","wasm","zig"],"description":""},{"short_id":"wry3pp","title":"Logic and Proof","url":"https://leanprover.github.io/logic_and_proof/","created_at":"2023-03-26T15:13:04.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/wry3pp/logic_proof","submitter_name":"nextos","tags":["book","compsci"],"description":""},{"short_id":"avpooi","title":"A Gentle Introduction to LLVM IR","url":"https://mcyoung.xyz/2023/08/01/llvm-ir/","created_at":"2023-08-03T10:21:21.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/avpooi/gentle_introduction_llvm_ir","submitter_name":"jado","tags":["compilers"],"description":""},{"short_id":"6i27yi","title":"You could have invented denotational semantics","url":"https://langdev.stackexchange.com/a/2021/1445","created_at":"2024-10-19T02:12:44.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/6i27yi/you_could_have_invented_denotational","submitter_name":"dpk","tags":["plt"],"description":""},{"short_id":"heatnr","title":"The Design & Implementation of the CPython Virtual Machine","url":"https://blog.codingconfessions.com/p/cpython-vm-internals","created_at":"2024-09-01T07:23:20.000-05:00","comment_count":20,"comments_url":"https://lobste.rs/s/heatnr/design_implementation_cpython_virtual","submitter_name":"abhi9u","tags":["c","compilers"],"description":""},{"short_id":"cvdwwr","title":"Learning about debuggers","url":"https://werat.dev/blog/learning-about-debuggers/","created_at":"2024-01-08T17:46:20.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/cvdwwr/learning_about_debuggers","submitter_name":"werat","tags":["debugging","linux"],"description":""},{"short_id":"sbuuzu","title":"Compilers: Incrementally and Extensibly","url":"https://okmij.org/ftp/tagless-final/Compiler/index.html","created_at":"2025-04-05T07:52:32.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/sbuuzu/compilers_incrementally_extensibly","submitter_name":"edwintorok","tags":["compilers","ml","plt"],"description":""},{"short_id":"wn2ley","title":"A rough survey of compilation, recompilation, and compile-time evaluation","url":"https://www.scattered-thoughts.net/writing/a-rough-survey-of-compilation-recompilation-and-compile-time-evaluation/","created_at":"2025-04-04T17:05:25.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/wn2ley/rough_survey_compilation_recompilation","submitter_name":"jamii","tags":["plt"],"description":""},{"short_id":"srthgr","title":"The road to hell is paved with good intentions and C++ modules","url":"https://nibblestew.blogspot.com/2023/10/the-road-to-hell-is-paved-with-good.html","created_at":"2023-10-18T08:43:33.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/srthgr/road_hell_is_paved_with_good_intentions_c","submitter_name":"drs","tags":["c++"],"description":""},{"short_id":"avljlh","title":"What's the big deal about embedded key-value databases like RocksDB?","url":"https://notes.eatonphil.com/whats-the-big-deal-about-key-value-databases.html","created_at":"2022-08-23T10:58:35.000-05:00","comment_count":31,"comments_url":"https://lobste.rs/s/avljlh/what_s_big_deal_about_embedded_key_value","submitter_name":"eatonphil","tags":["databases"],"description":""},{"short_id":"crgjnh","title":"Nix Based C++ Workflow From Scratch (2021)","url":"https://www.breakds.org/post/nix-based-c++-workflow/","created_at":"2023-02-12T18:03:10.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/crgjnh/nix_based_c_workflow_from_scratch_2021","submitter_name":"LolPython","tags":["nix"],"description":""},{"short_id":"xo7a4v","title":"Simple fast value semantics","url":"https://boomla.com/docs/simple-fast-value-semantics","created_at":"2024-08-02T08:05:20.000-05:00","comment_count":24,"comments_url":"https://lobste.rs/s/xo7a4v/simple_fast_value_semantics","submitter_name":"zupa","tags":["compilers","plt"],"description":"<p>For more context, this solution is mutable value semantics implementation with implicit copy, optimized for simplicity and ergonomics.</p>\n<p>The language itself is closed but I wanted to show how it solves value semantics as I consider it to be a very interesting point in the solution space.</p>\n<p>If you want to play with the language try the language docs that includes executable playgrounds:\n<a href=\"https://lang.boomla.app/types/boolean\" rel=\"ugc\">https://lang.boomla.app/types/boolean</a></p>\n"},{"short_id":"cf6vqa","title":"Streams, Calculational Proofs and Dafny","url":"https://rdivyanshu.github.io/posts/2024/08/streams-calculation-proof-and-dafny.html","created_at":"2024-08-02T12:50:27.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/cf6vqa/streams_calculational_proofs_dafny","submitter_name":"rdivyanshu","tags":["formalmethods"],"description":""},{"short_id":"cmgn5v","title":"Parallel property-based testing with a deterministic thread scheduler","url":"https://stevana.github.io/parallel_property-based_testing_with_a_deterministic_thread_scheduler.html","created_at":"2024-08-08T01:14:28.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/cmgn5v/parallel_property_based_testing_with","submitter_name":"stevan","tags":["testing"],"description":""},{"short_id":"tntsjc","title":"Why some of us like \"interdiff\" code review systems (not GitHub)","url":"https://gist.github.com/thoughtpolice/9c45287550a56b2047c6311fbadebed2","created_at":"2024-09-10T15:27:54.000-05:00","comment_count":32,"comments_url":"https://lobste.rs/s/tntsjc/why_some_us_like_interdiff_code_review","submitter_name":"Student","tags":["vcs"],"description":""},{"short_id":"vzzxtm","title":"Oleg's Programming Site","url":"https://okmij.org/ftp/","created_at":"2025-01-22T13:33:25.000-06:00","comment_count":11,"comments_url":"https://lobste.rs/s/vzzxtm/oleg_s_programming_site","submitter_name":"veqq","tags":["compsci","plt","programming"],"description":""},{"short_id":"2sbgxk","title":"The Juggler's Curse","url":"https://buttondown.com/hillelwayne/archive/the-jugglers-curse/","created_at":"2025-01-22T14:34:16.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/2sbgxk/juggler_s_curse","submitter_name":"eBPF","tags":["practices"],"description":""},{"short_id":"zol11z","title":"Use Monoids for Construction","url":"https://reasonablypolymorphic.com/blog/use-monoids/index.html","created_at":"2025-01-25T10:33:28.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/zol11z/use_monoids_for_construction","submitter_name":"felixyz","tags":["haskell","programming"],"description":""},{"short_id":"h5nira","title":"Macros and optimizations: it's just a phase","url":"https://marianoguerra.org/posts/macros-and-optimizations-its-just-a-phase/","created_at":"2024-06-24T04:28:58.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/h5nira/macros_optimizations_it_s_just_phase","submitter_name":"marianoguerra","tags":["compilers","plt"],"description":""},{"short_id":"te7x8n","title":"Durable Incrementality","url":"https://rust-analyzer.github.io/blog/2023/07/24/durable-incrementality.html","created_at":"2023-07-24T14:28:45.000-05:00","comment_count":23,"comments_url":"https://lobste.rs/s/te7x8n/durable_incrementality","submitter_name":"matklad","tags":["compilers"],"description":""},{"short_id":"qnvvne","title":"pgdog: Horizontal scaling for PostgreSQL with automatic sharding","url":"https://github.com/pgdogdev/pgdog","created_at":"2025-04-21T10:25:47.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/qnvvne/pgdog_horizontal_scaling_for_postgresql","submitter_name":"adamgs","tags":["databases","distributed"],"description":"<p>A new open source project attempting to achieve <a href=\"https://vitess.io/\" rel=\"ugc\">Vitess-like</a> scalability for PostgreSQL.</p>\n"},{"short_id":"tnhgze","title":"Blindsided by Rust's Subtyping and Variance","url":"https://nullderef.com/blog/rust-variance/","created_at":"2024-09-17T06:55:13.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/tnhgze/blindsided_by_rust_s_subtyping_variance","submitter_name":"dureuill","tags":["rust"],"description":""},{"short_id":"blszfs","title":"It Takes Two to Contract","url":"https://tigerbeetle.com/blog/2023-12-27-it-takes-two-to-contract/","created_at":"2023-12-27T07:18:09.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/blszfs/it_takes_two_contract","submitter_name":"matklad","tags":["databases","zig"],"description":""},{"short_id":"t6oqhk","title":"Interaction Nets, Combinators, and Calculus","url":"https://zicklag.github.io/blog/interaction-nets-combinators-calculus/","created_at":"2023-04-11T14:28:13.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/t6oqhk/interaction_nets_combinators_calculus","submitter_name":"arcade","tags":["compsci"],"description":""},{"short_id":"zyngxb","title":"Simplifying Expressions Bottom-Up","url":"https://buttondown.email/jaffray/archive/simplifying-expressions-bottom-up/","created_at":"2023-11-27T13:36:07.000-06:00","comment_count":9,"comments_url":"https://lobste.rs/s/zyngxb/simplifying_expressions_bottom_up","submitter_name":"xoranth","tags":["compilers","databases"],"description":""},{"short_id":"sra8zc","title":"Fantastic Learning Resources","url":"https://matklad.github.io/2023/08/06/fantastic-learning-resources.html","created_at":"2023-08-13T12:53:02.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/sra8zc/fantastic_learning_resources","submitter_name":"safinaskar","tags":["programming"],"description":""},{"short_id":"t4ifza","title":"What Austral Proves","url":"https://animaomnium.github.io/what-austral-proves/","created_at":"2023-02-19T09:20:49.000-06:00","comment_count":23,"comments_url":"https://lobste.rs/s/t4ifza/what_austral_proves","submitter_name":"rkallos","tags":["compilers","plt","programming"],"description":""},{"short_id":"g2tl3w","title":"Why SQLite Uses Bytecode","url":"https://sqlite.org/draft/whybytecode.html","created_at":"2024-04-29T21:47:31.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/g2tl3w/why_sqlite_uses_bytecode","submitter_name":"hashemi","tags":["databases"],"description":""},{"short_id":"gseiin","title":"UI for sums must remember products","url":"https://eighty-twenty.org/2024/07/21/ui-for-sums-remembers-products","created_at":"2024-07-21T08:57:34.000-05:00","comment_count":36,"comments_url":"https://lobste.rs/s/gseiin/ui_for_sums_must_remember_products","submitter_name":"tonyg","tags":["plt"],"description":""},{"short_id":"uoprsr","title":"How bad is LLVM really?","url":"https://c3.handmade.network/blog/p/8852-how_bad_is_llvm_really","created_at":"2024-05-14T08:07:19.000-05:00","comment_count":38,"comments_url":"https://lobste.rs/s/uoprsr/how_bad_is_llvm_really","submitter_name":"jmillikin","tags":["compilers"],"description":""},{"short_id":"vwgmz0","title":"Jepsen: RavenDB 6.0.2","url":"https://jepsen.io/analyses/ravendb-6.0.2","created_at":"2024-01-31T09:04:49.000-06:00","comment_count":24,"comments_url":"https://lobste.rs/s/vwgmz0/jepsen_ravendb_6_0_2","submitter_name":"aphyr","tags":["databases","distributed","testing"],"description":""},{"short_id":"0xkanu","title":"I Have No Constructor, and I Must Initialize","url":"https://consteval.ca/2024/07/03/initialization/","created_at":"2024-07-04T17:35:16.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/0xkanu/i_have_no_constructor_i_must_initialize","submitter_name":"tendstofortytwo","tags":["c++"],"description":""},{"short_id":"shrc35","title":"Queueing - an interactive study of queueing strategies","url":"https://encore.dev/blog/queueing","created_at":"2024-05-22T11:02:23.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/shrc35/queueing_interactive_study_queueing","submitter_name":"samwho","tags":["compsci","visualization"],"description":""},{"short_id":"ffq9te","title":"Coding as Craft: Going Back to the Old Gym","url":"https://cekrem.github.io/posts/coding-as-craft-going-back-to-the-old-gym/","created_at":"2025-04-23T03:25:59.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/ffq9te/coding_as_craft_going_back_old_gym","submitter_name":"agent281","tags":["practices"],"description":""},{"short_id":"8s6cxz","title":"What If We Could Rebuild Kafka From Scratch?","url":"https://www.morling.dev/blog/what-if-we-could-rebuild-kafka-from-scratch/","created_at":"2025-04-24T09:52:46.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/8s6cxz/what_if_we_could_rebuild_kafka_from","submitter_name":"rmoff","tags":["distributed"],"description":""},{"short_id":"edtvb3","title":"How Discord Indexes Trillions of Messages","url":"https://discord.com/blog/how-discord-indexes-trillions-of-messages","created_at":"2025-04-24T14:12:20.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/edtvb3/how_discord_indexes_trillions_messages","submitter_name":"msun","tags":["databases","distributed"],"description":""},{"short_id":"aukxak","title":"Differential Coverage for Debugging","url":"https://research.swtch.com/diffcover","created_at":"2025-04-25T10:58:22.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/aukxak/differential_coverage_for_debugging","submitter_name":"dzwdz","tags":["debugging","go"],"description":""},{"short_id":"8avzyk","title":"DataFusion - The Database Building Toolkit","url":"https://www.youtube.com/watch?v=8QNNCr8WfDM","created_at":"2025-04-26T12:09:35.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/8avzyk/datafusion_database_building_toolkit","submitter_name":"intarga","tags":["audio","databases"],"description":""},{"short_id":"11k4ri","title":"How should I read type system notation?","url":"https://langdev.stackexchange.com/questions/2692/how-should-i-read-type-system-notation","created_at":"2023-08-14T07:29:52.000-05:00","comment_count":43,"comments_url":"https://lobste.rs/s/11k4ri/how_should_i_read_type_system_notation","submitter_name":"azeemba","tags":["plt"],"description":""},{"short_id":"5hf7qf","title":"Why You Should Write Your Own Static Site Generator","url":"https://arne.me/articles/write-your-own-ssg","created_at":"2023-11-03T04:10:34.000-05:00","comment_count":52,"comments_url":"https://lobste.rs/s/5hf7qf/why_you_should_write_your_own_static_site","submitter_name":"bahlo","tags":["practices","web"],"description":""},{"short_id":"zqa4cc","title":"Learning modern compilers?","url":"","created_at":"2023-06-14T10:03:26.000-05:00","comment_count":17,"comments_url":"https://lobste.rs/s/zqa4cc/learning_modern_compilers","submitter_name":"vector_spaces","tags":["ask","compilers","plt"],"description":"<p>There was a video a few years ago where Anders Hejlsberg (of C#, TypeScript, Turbo Pascal, and Delphi fame, among others) discussed modern compiler architecture and how it’s vastly different from what is taught in university compiler courses, or even in recent books on compilers and language implementation</p>\n<p><a href=\"https://www.youtube.com/watch?v=wSdV1M7n4gQ\" rel=\"ugc\">https://www.youtube.com/watch?v=wSdV1M7n4gQ</a></p>\n<p>Specifically, he talks about the Roslyn compiler and how it utilizes a more service oriented architecture, so that, for example, developer tooling can get information about the state of the actual parse tree used by the compiler in real time without forcing a full recompile.</p>\n<p>I recall also that within the last year or so on Hacker News, someone who worked on compilers in industry commented on a thread about compilers that it was hard to hire people because of how vastly different compiler implementation is in practice vs what’s taught in university courses.</p>\n<p>Anyway, writing to see if anyone else agrees with the last comment, and if any workers in compilers (whether in academia or industry) have any suggestions for how someone can get up to speed on new developments in this field outside of reading the Roslyn source code.</p>\n<ul>\n<li>Are there particular papers that have been especially important to recent developments?</li>\n<li>Other than Roslyn, are there any other well known or less well known open source projects one could study?</li>\n<li>Somewhat orthogonal to the last two questions, is “programming language theory” (e.g. denotational semantics, abstract interpretation, type theory, lambda calculus, Floyd-Hoare logic, and other more abstract topics) relevant to the practice of modern compiler construction and worth learning? Or is this stuff mostly a distraction? Referring to this sort of material [1]</li>\n</ul>\n<p>[1] <a href=\"https://steshaw.org/plt/\" rel=\"ugc\">https://steshaw.org/plt/</a></p>\n"},{"short_id":"blmitg","title":"A Very Subtle Bug (2010)","url":"https://blog.nelhage.com/2010/02/a-very-subtle-bug/","created_at":"2023-11-16T01:58:33.000-06:00","comment_count":19,"comments_url":"https://lobste.rs/s/blmitg/very_subtle_bug_2010","submitter_name":"knl","tags":["python","unix"],"description":""},{"short_id":"2zqaap","title":"Async Rust Complexity ","url":"https://v5.chriskrycho.com/journal/async-rust-complexity/","created_at":"2024-05-07T07:43:08.000-05:00","comment_count":36,"comments_url":"https://lobste.rs/s/2zqaap/async_rust_complexity","submitter_name":"alper","tags":["rust"],"description":""},{"short_id":"sxmrfg","title":"Typestate - the new Design Pattern in Swift 5.9","url":"https://swiftology.io/articles/typestate/","created_at":"2024-02-01T07:57:35.000-06:00","comment_count":14,"comments_url":"https://lobste.rs/s/sxmrfg/typestate_new_design_pattern_swift_5_9","submitter_name":"idrougge","tags":["swift"],"description":""},{"short_id":"sts3wo","title":"Linear-time parser combinators","url":"https://semantic-domain.blogspot.com/2023/07/linear-time-parser-combinators.html","created_at":"2023-07-22T06:21:41.000-05:00","comment_count":7,"comments_url":"https://lobste.rs/s/sts3wo/linear_time_parser_combinators","submitter_name":"fanf","tags":["compilers","ml"],"description":""},{"short_id":"vdhlun","title":"Swift *almost* does a really cool thing I want","url":"https://wolfgirl.dev/blog/2024-11-13-swift-almost-does-a-really-cool-thing-i-want/","created_at":"2024-11-13T08:29:17.000-06:00","comment_count":6,"comments_url":"https://lobste.rs/s/vdhlun/swift_almost_does_really_cool_thing_i_want","submitter_name":"calvin","tags":["swift"],"description":""},{"short_id":"eslpei","title":"References are like jumps","url":"https://without.boats/blog/references-are-like-jumps/","created_at":"2024-05-13T17:09:38.000-05:00","comment_count":24,"comments_url":"https://lobste.rs/s/eslpei/references_are_like_jumps","submitter_name":"withoutboats","tags":["plt","rust"],"description":""},{"short_id":"lbzdtu","title":"Resilient LL Parsing Tutorial","url":"https://matklad.github.io/2023/05/21/resilient-ll-parsing-tutorial.html","created_at":"2023-05-21T09:22:11.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/lbzdtu/resilient_ll_parsing_tutorial","submitter_name":"matklad","tags":["compilers"],"description":""},{"short_id":"uo3sck","title":"What a good debugger can do","url":"https://werat.dev/blog/what-a-good-debugger-can-do/","created_at":"2023-03-10T05:14:47.000-06:00","comment_count":12,"comments_url":"https://lobste.rs/s/uo3sck/what_good_debugger_can_do","submitter_name":"werat","tags":["debugging","programming"],"description":""},{"short_id":"lca4xn","title":"Strange Loop's greatest hits","url":"https://changelog.com/posts/strange-loops-greatest-hits","created_at":"2023-09-15T08:54:02.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/lca4xn/strange_loop_s_greatest_hits","submitter_name":"jerodsanto","tags":["programming"],"description":""},{"short_id":"7g4l4h","title":"Compiling ML models to C for fun","url":"https://bernsteinbear.com//blog/compiling-ml-models/","created_at":"2023-09-19T08:20:42.000-05:00","comment_count":14,"comments_url":"https://lobste.rs/s/7g4l4h/compiling_ml_models_c_for_fun","submitter_name":"raymii","tags":["c","compilers"],"description":""},{"short_id":"cbbv9z","title":"Let's write a setjmp","url":"https://nullprogram.com/blog/2023/02/12/","created_at":"2023-02-12T01:54:16.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/cbbv9z/let_s_write_setjmp","submitter_name":"jmillikin","tags":["assembly","c"],"description":""},{"short_id":"ralgvw","title":"Cosmopolitan Third Edition","url":"https://justine.lol/cosmo3/","created_at":"2023-11-01T12:44:01.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/ralgvw/cosmopolitan_third_edition","submitter_name":"eatonphil","tags":["c"],"description":""},{"short_id":"5benrr","title":"Testing Distributed Systems for Linearizability (2017)","url":"https://anishathalye.com/testing-distributed-systems-for-linearizability/","created_at":"2023-10-06T13:19:30.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/5benrr/testing_distributed_systems_for","submitter_name":"eatonphil","tags":["distributed","testing"],"description":""},{"short_id":"feueff","title":"swift-evolution/0382: Expression Macros","url":"https://github.com/apple/swift-evolution/blob/main/proposals/0382-expression-macros.md","created_at":"2023-04-09T14:39:45.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/feueff/swift_evolution_0382_expression_macros","submitter_name":"snej","tags":["plt","swift"],"description":""},{"short_id":"heyzwe","title":"Is something bugging you?","url":"https://antithesis.com/blog/is_something_bugging_you/","created_at":"2024-02-13T07:39:53.000-06:00","comment_count":14,"comments_url":"https://lobste.rs/s/heyzwe/is_something_bugging_you","submitter_name":"Jrmurr","tags":["testing"],"description":""},{"short_id":"numxvi","title":"Traits are a Local Maximum","url":"https://thunderseethe.dev/posts/traits-are-a-local-maxima/","created_at":"2024-11-18T14:48:46.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/numxvi/traits_are_local_maximum","submitter_name":"icefox","tags":["plt"],"description":""},{"short_id":"yihdph","title":"Story-time: C++, bounds checking, performance, and compilers","url":"https://chandlerc.blog/posts/2024/11/story-time-bounds-checking/","created_at":"2024-11-17T16:07:27.000-06:00","comment_count":14,"comments_url":"https://lobste.rs/s/yihdph/story_time_c_bounds_checking_performance","submitter_name":"calvin","tags":["c++"],"description":""},{"short_id":"o2xl17","title":"Ghosts of Departed Proofs (2018)","url":"https://iohk.io/en/research/library/papers/ghosts-of-departed-proofs-functional-pearls/","created_at":"2024-11-20T05:01:35.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/o2xl17/ghosts_departed_proofs_2018","submitter_name":"fanf","tags":["haskell","pdf"],"description":""},{"short_id":"mpcoj1","title":"I'm betting on Call-by-Push-Value","url":"https://thunderseethe.dev/posts/bet-on-cbpv/","created_at":"2024-03-09T12:54:58.000-06:00","comment_count":11,"comments_url":"https://lobste.rs/s/mpcoj1/i_m_betting_on_call_by_push_value","submitter_name":"gf0","tags":["plt"],"description":""},{"short_id":"erys14","title":"A Dependently Typed Assembly Language","url":"https://www.cs.cmu.edu/~rwh/papers/dtal/OGI-CSE-99-008.pdf","created_at":"2025-04-28T12:06:49.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/erys14/dependently_typed_assembly_language","submitter_name":"linkdd","tags":["assembly","pdf","plt","programming"],"description":""},{"short_id":"d3neqf","title":"Syntactic musings on match expressions","url":"https://blog.yoshuawuyts.com/syntactic-musings-on-match-expressions/","created_at":"2025-04-29T06:44:50.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/d3neqf/syntactic_musings_on_match_expressions","submitter_name":"ChrisDenton","tags":["plt","rust"],"description":""},{"short_id":"ja3oaw","title":"Asynchronous IO: the next billion-dollar mistake?","url":"https://yorickpeterse.com/articles/asynchronous-io-the-next-billion-dollar-mistake/","created_at":"2024-09-06T13:21:46.000-05:00","comment_count":83,"comments_url":"https://lobste.rs/s/ja3oaw/asynchronous_io_next_billion_dollar","submitter_name":"agent281","tags":["programming"],"description":""},{"short_id":"iz0rwp","title":"conservative gc can be faster than precise gc","url":"https://wingolog.org/archives/2024/09/07/conservative-gc-can-be-faster-than-precise-gc","created_at":"2024-09-07T08:05:55.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/iz0rwp/conservative_gc_can_be_faster_than","submitter_name":"fanf","tags":["performance","plt"],"description":""},{"short_id":"zxiui9","title":"The State of Full-Stack OCaml","url":"https://youtu.be/vSSpbAI_-t0","created_at":"2024-09-11T09:22:27.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/zxiui9/state_full_stack_ocaml","submitter_name":"krisajenkins","tags":["ml","video"],"description":""},{"short_id":"khgkpn","title":"Extending Rust's Effect System","url":"https://blog.yoshuawuyts.com/extending-rusts-effect-system/","created_at":"2024-02-10T21:18:12.000-06:00","comment_count":13,"comments_url":"https://lobste.rs/s/khgkpn/extending_rust_s_effect_system","submitter_name":"5d22b","tags":["plt","rust","transcript"],"description":""},{"short_id":"oyyrx0","title":"New Go garbage collector","url":"https://bsky.app/profile/michael.express/post/3lo7irdr6ic24","created_at":"2025-05-04T05:58:00.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/oyyrx0/new_go_garbage_collector","submitter_name":"zarldev","tags":["go"],"description":""},{"short_id":"euv4fr","title":"Functional HTML","url":"https://overreacted.io/functional-html/","created_at":"2025-05-04T10:20:25.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/euv4fr/functional_html","submitter_name":"frontsideair","tags":["javascript","web"],"description":""},{"short_id":"akhul3","title":"modern-latex: A short guide to LaTeX that avoids legacy cruft","url":"https://github.com/mrkline/modern-latex","created_at":"2025-05-05T01:38:04.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/akhul3/modern_latex_short_guide_latex_avoids","submitter_name":"diktomat","tags":["practices"],"description":""},{"short_id":"eeoz0s","title":"An Interactive Debugger for Rust Trait Errors","url":"https://cel.cs.brown.edu/blog/an-interactive-debugger-for-rust-trait-errors/","created_at":"2025-05-06T06:46:31.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/eeoz0s/interactive_debugger_for_rust_trait","submitter_name":"runxiyu","tags":["debugging","rust"],"description":""},{"short_id":"1t0gpl","title":"The Curse of Knowing How, or; Fixing Everything","url":"https://notashelf.dev/posts/curse-of-knowing","created_at":"2025-05-06T09:06:05.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/1t0gpl/curse_knowing_how_fixing_everything","submitter_name":"neeasade","tags":["philosophy","programming"],"description":""},{"short_id":"tyeodn","title":"Implement your language twice","url":"https://futhark-lang.org/blog/2025-05-07-implement-your-language-twice.html","created_at":"2025-05-07T12:16:22.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/tyeodn/implement_your_language_twice","submitter_name":"linkdd","tags":["plt"],"description":""},{"short_id":"twu7sz","title":"Newtyped Indices are Proofs","url":"https://eikopf.bearblog.dev/newtyped-indices-are-proofs/","created_at":"2025-05-07T09:54:40.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/twu7sz/newtyped_indices_are_proofs","submitter_name":"waltteri","tags":["plt","rust"],"description":""},{"short_id":"xnyrve","title":"Memory Safety Features in Zig","url":"https://gencmurat.com/en/posts/memory-safety-features-in-zig/","created_at":"2025-05-08T04:24:15.000-05:00","comment_count":16,"comments_url":"https://lobste.rs/s/xnyrve/memory_safety_features_zig","submitter_name":"vpol","tags":["zig"],"description":""},{"short_id":"12m2f0","title":"Algebraic Effects: Another mistake carried through to perfection?","url":"https://kjosib.github.io/Counterpoint/effects.html","created_at":"2025-05-09T21:45:40.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/12m2f0/algebraic_effects_another_mistake","submitter_name":"veqq","tags":["plt"],"description":""},{"short_id":"j3nhhc","title":"Rust Dependencies scare Me","url":"https://vincents.dev/blog/rust-dependencies-scare-me/?","created_at":"2025-05-08T14:57:38.000-05:00","comment_count":78,"comments_url":"https://lobste.rs/s/j3nhhc/rust_dependencies_scare_me","submitter_name":"vaguelytagged","tags":["rust"],"description":""},{"short_id":"aotvqu","title":"Functional programming languages should be so much better at mutation than they are","url":"https://cohost.org/prophet/post/7083950-functional-programming","created_at":"2024-07-30T00:32:45.000-05:00","comment_count":28,"comments_url":"https://lobste.rs/s/aotvqu/functional_programming_languages","submitter_name":"injuly","tags":["haskell","ml","plt"],"description":""},{"short_id":"y25pgg","title":"The Hitchhiker's Guide to Logical Verification","url":"https://browncs1951x.github.io/static/files/hitchhikersguide.pdf","created_at":"2024-07-30T13:30:10.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/y25pgg/hitchhiker_s_guide_logical_verification","submitter_name":"nextos","tags":["formalmethods","pdf","plt"],"description":""},{"short_id":"jslbix","title":"Java FFI vs JNI for Meta's RocksDB Java API","url":"https://rocksdb.org/blog/2024/02/20/foreign-function-interface.html","created_at":"2024-02-23T05:02:36.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/jslbix/java_ffi_vs_jni_for_meta_s_rocksdb_java_api","submitter_name":"adamretter","tags":["databases","java","performance"],"description":""},{"short_id":"hv9q5z","title":"So You Want to Optimize Your Code? (also, a disordered, confusing and absolutely incomplete oral history of Firefox performance)","url":"https://yoric.github.io/post/so-you-want-to-optimize-your-code/","created_at":"2023-12-22T09:28:07.000-06:00","comment_count":6,"comments_url":"https://lobste.rs/s/hv9q5z/so_you_want_optimize_your_code_also","submitter_name":"jmiven","tags":["performance"],"description":""},{"short_id":"z3ilei","title":"How I think about Zig and Rust","url":"https://lewiscampbell.tech/blog/250117.html","created_at":"2025-01-17T04:35:08.000-06:00","comment_count":51,"comments_url":"https://lobste.rs/s/z3ilei/how_i_think_about_zig_rust","submitter_name":"bitfield","tags":["rust","zig"],"description":""},{"short_id":"gvtkgq","title":"Scheduling Internals","url":"https://tontinton.com/posts/scheduling-internals/","created_at":"2024-02-27T13:00:51.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/gvtkgq/scheduling_internals","submitter_name":"briankung","tags":["osdev","performance","programming"],"description":""},{"short_id":"1r0aak","title":"A Twist on Wadler's Printer","url":"https://justinpombrio.net/2024/02/23/a-twist-on-Wadlers-printer.html","created_at":"2024-02-26T01:08:41.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/1r0aak/twist_on_wadler_s_printer","submitter_name":"andyc","tags":["plt","programming","rust"],"description":""},{"short_id":"gsk2l7","title":"Jepsen: jetcd 0.8.2","url":"https://jepsen.io/analyses/jetcd-0.8.2","created_at":"2024-08-08T09:09:42.000-05:00","comment_count":12,"comments_url":"https://lobste.rs/s/gsk2l7/jepsen_jetcd_0_8_2","submitter_name":"aphyr","tags":["databases","distributed","testing"],"description":""},{"short_id":"b0e2nt","title":"Time is not a synchronization primitive","url":"https://xeiaso.net/blog/nosleep","created_at":"2023-06-24T23:03:00.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/b0e2nt/time_is_not_synchronization_primitive","submitter_name":"cadey","tags":["go","philosophy"],"description":""},{"short_id":"qkzikl","title":"How RocksDB works","url":"https://artem.krylysov.com/blog/2023/04/19/how-rocksdb-works/","created_at":"2023-04-19T08:04:53.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/qkzikl/how_rocksdb_works","submitter_name":"akrylysov","tags":["databases"],"description":""},{"short_id":"jgk0id","title":"Programming Languages Going Above and Beyond","url":"https://whileydave.com/2023/06/27/programming-languages-going-above-and-beyond/","created_at":"2023-06-28T01:13:31.000-05:00","comment_count":20,"comments_url":"https://lobste.rs/s/jgk0id/programming_languages_going_above","submitter_name":"redjamjar","tags":["formalmethods","programming"],"description":""},{"short_id":"sizjds","title":"Second-Class References","url":"https://borretti.me/article/second-class-references","created_at":"2023-06-12T06:47:36.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/sizjds/second_class_references","submitter_name":"adaszko","tags":["plt"],"description":""},{"short_id":"hq1xda","title":"Reconstructing TypeScript, part 0: intro and background","url":"https://jaked.org/blog/2021-09-07-Reconstructing-TypeScript-part-0","created_at":"2023-08-22T23:16:31.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/hq1xda/reconstructing_typescript_part_0_intro","submitter_name":"andyc","tags":["compilers","plt"],"description":""},{"short_id":"uutqvn","title":"The sad state of property-based testing libraries","url":"https://stevana.github.io/the_sad_state_of_property-based_testing_libraries.html","created_at":"2024-07-03T05:02:17.000-05:00","comment_count":32,"comments_url":"https://lobste.rs/s/uutqvn/sad_state_property_based_testing","submitter_name":"stevan","tags":["testing"],"description":""},{"short_id":"v2zmv3","title":"Writing that changed how I think about PL","url":"https://bernsteinbear.com/blog/pl-writing/","created_at":"2025-05-13T11:57:44.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/v2zmv3/writing_changed_how_i_think_about_pl","submitter_name":"surprisetalk","tags":["plt"],"description":""},{"short_id":"zcpnge","title":"Lock-Free Rust: How to Build a Rollercoaster While It’s on Fire","url":"https://yeet.cx/blog/lock-free-rust/","created_at":"2025-05-13T02:29:19.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/zcpnge/lock_free_rust_how_build_rollercoaster","submitter_name":"av","tags":["performance","rust"],"description":""},{"short_id":"tjbgo2","title":"Hyper-Typing","url":"https://pscanf.com/s/341/","created_at":"2025-05-12T09:54:01.000-05:00","comment_count":25,"comments_url":"https://lobste.rs/s/tjbgo2/hyper_typing","submitter_name":"felixyz","tags":["javascript","plt"],"description":""},{"short_id":"9a0x7c","title":"The penultimate conditional syntax","url":"https://dotat.at/@/2025-05-13-if-is.html","created_at":"2025-05-13T16:50:54.000-05:00","comment_count":13,"comments_url":"https://lobste.rs/s/9a0x7c/penultimate_conditional_syntax","submitter_name":"fanf","tags":["plt"],"description":""},{"short_id":"svhzj9","title":"Divorce from LLVM","url":"https://github.com/ziglang/zig/issues/16270","created_at":"2023-06-30T01:41:42.000-05:00","comment_count":63,"comments_url":"https://lobste.rs/s/svhzj9/divorce_from_llvm","submitter_name":"tomekw","tags":["zig"],"description":""},{"short_id":"7rtvnp","title":"Async Rust Challenges in Iroh","url":"https://iroh.computer/blog/async-rust-challenges-in-iroh","created_at":"2024-08-01T10:21:25.000-05:00","comment_count":21,"comments_url":"https://lobste.rs/s/7rtvnp/async_rust_challenges_iroh","submitter_name":"the-mikedavis","tags":["rust"],"description":""},{"short_id":"jexsmk","title":"smol_world: Compact garbage-collected heap and JSON-like object model","url":"https://github.com/snej/smol_world","created_at":"2023-02-05T16:18:52.000-06:00","comment_count":16,"comments_url":"https://lobste.rs/s/jexsmk/smol_world_compact_garbage_collected","submitter_name":"snej","tags":["c++","programming","show"],"description":""},{"short_id":"tmhk3n","title":"Use GNU Emacs","url":"https://www2.lib.uchicago.edu/keith/emacs/","created_at":"2023-03-01T07:14:46.000-06:00","comment_count":35,"comments_url":"https://lobste.rs/s/tmhk3n/use_gnu_emacs","submitter_name":"jakob","tags":["emacs"],"description":""},{"short_id":"pmvh6y","title":"Implementing MVCC and major SQL transaction isolation levels","url":"https://notes.eatonphil.com/2024-05-16-mvcc.html","created_at":"2024-05-16T16:57:33.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/pmvh6y/implementing_mvcc_major_sql_transaction","submitter_name":"eatonphil","tags":["databases"],"description":""},{"short_id":"nrypq7","title":"The Heart of a Language Server","url":"https://rust-analyzer.github.io/blog/2023/12/26/the-heart-of-a-language-server.html","created_at":"2023-12-27T07:15:40.000-06:00","comment_count":4,"comments_url":"https://lobste.rs/s/nrypq7/heart_language_server","submitter_name":"matklad","tags":["compilers","rust"],"description":""},{"short_id":"ucvs7v","title":"Why Static Languages Suffer From Complexity (and type-safe printf implementation without macros)","url":"https://hirrolot.github.io/posts/why-static-languages-suffer-from-complexity.html","created_at":"2023-08-09T09:29:32.000-05:00","comment_count":33,"comments_url":"https://lobste.rs/s/ucvs7v/why_static_languages_suffer_from","submitter_name":"safinaskar","tags":["plt","rust","zig"],"description":""},{"short_id":"47amaq","title":"The Rust I Wanted Had No Future","url":"https://graydon2.dreamwidth.org/307291.html","created_at":"2023-06-05T03:45:49.000-05:00","comment_count":40,"comments_url":"https://lobste.rs/s/47amaq/rust_i_wanted_had_no_future","submitter_name":"matklad","tags":["plt","rust"],"description":""},{"short_id":"rfat3m","title":"Formal verification makes RSA faster — and faster to deploy","url":"https://www.amazon.science/blog/formal-verification-makes-rsa-faster-and-faster-to-deploy","created_at":"2024-08-10T11:50:36.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/rfat3m/formal_verification_makes_rsa_faster","submitter_name":"calvin","tags":["cryptography","formalmethods","performance"],"description":""},{"short_id":"u6b8gq","title":"Do we fear the serializable isolation level more than we fear subtle bugs?","url":"https://blog.ydb.tech/do-we-fear-the-serializable-isolation-level-more-than-we-fear-subtle-bugs-5a025401b609","created_at":"2024-07-02T05:57:40.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/u6b8gq/do_we_fear_serializable_isolation_level","submitter_name":"eatonphil","tags":["databases"],"description":""},{"short_id":"lefvgm","title":"Stop Making Me Memorize The Borrow Checker","url":"https://erikmcclure.com/blog/stop-making-me-memorize-borrow-checker/","created_at":"2024-11-15T03:33:33.000-06:00","comment_count":41,"comments_url":"https://lobste.rs/s/lefvgm/stop_making_me_memorize_borrow_checker","submitter_name":"erikmcclure","tags":["rust"],"description":""},{"short_id":"swm85w","title":"A rustc soundness bug in the wild","url":"https://specy.app/blog/posts/a-rustc-soundness-bug-in-the-wild","created_at":"2024-11-14T16:55:49.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/swm85w/rustc_soundness_bug_wild","submitter_name":"airdrop","tags":["rust"],"description":""},{"short_id":"kh3hrz","title":"Implementing Type Systems as Macros","url":"https://lambdaland.org/posts/2023-08-14_types_with_macros/","created_at":"2024-11-15T08:36:50.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/kh3hrz/implementing_type_systems_as_macros","submitter_name":"dpk","tags":["lisp","plt"],"description":""},{"short_id":"xlmejv","title":"Zig Reproduced Without Binaries","url":"https://jakstys.lt/2024/zig-reproduced-without-binaries/","created_at":"2024-11-13T00:43:13.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/xlmejv/zig_reproduced_without_binaries","submitter_name":"eBPF","tags":["nix","security","zig"],"description":""},{"short_id":"ws0mt8","title":"Structured Editing and Incremental Parsing","url":"https://tratt.net/laurie/blog/2024/structured_editing_and_incremental_parsing.html","created_at":"2024-11-27T06:31:36.000-06:00","comment_count":56,"comments_url":"https://lobste.rs/s/ws0mt8/structured_editing_incremental_parsing","submitter_name":"ltratt","tags":["editors"],"description":""},{"short_id":"sognxb","title":"Dependent Types and the Art of HTTP Headers","url":"https://www.unwoundstack.com/blog/dependent-types-and-http-headers.html","created_at":"2024-11-28T01:41:09.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/sognxb/dependent_types_art_http_headers","submitter_name":"ehamberg","tags":["programming"],"description":""},{"short_id":"mavub8","title":"A love letter to make","url":"https://kmaasrud.com/blog/make","created_at":"2023-04-19T01:01:46.000-05:00","comment_count":66,"comments_url":"https://lobste.rs/s/mavub8/love_letter_make","submitter_name":"kmaasrud","tags":["programming"],"description":""},{"short_id":"quouu0","title":"All about LeakSanitizer","url":"https://maskray.me/blog/2023-02-12-all-about-leak-sanitizer","created_at":"2023-02-12T18:27:51.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/quouu0/all_about_leaksanitizer","submitter_name":"MaskRay","tags":["compilers"],"description":""},{"short_id":"2sixlc","title":"Timeouts and cancellation for humans (2018)","url":"https://vorpus.org/blog/timeouts-and-cancellation-for-humans/","created_at":"2024-05-05T12:23:16.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/2sixlc/timeouts_cancellation_for_humans_2018","submitter_name":"manuel","tags":["python"],"description":""},{"short_id":"sdttgb","title":"How Discord Stores Trillions of Messages","url":"https://discord.com/blog/how-discord-stores-trillions-of-messages","created_at":"2023-03-07T14:50:40.000-06:00","comment_count":27,"comments_url":"https://lobste.rs/s/sdttgb/how_discord_stores_trillions_messages","submitter_name":"j11g","tags":["databases","performance"],"description":""},{"short_id":"e6tz0r","title":"Memory Safety is a Red Herring","url":"https://steveklabnik.com/writing/memory-safety-is-a-red-herring","created_at":"2023-12-21T17:12:23.000-06:00","comment_count":100,"comments_url":"https://lobste.rs/s/e6tz0r/memory_safety_is_red_herring","submitter_name":"stchris","tags":["rust"],"description":""},{"short_id":"djxada","title":"missing the point of webassembly","url":"http://wingolog.org/archives/2024/01/08/missing-the-point-of-webassembly","created_at":"2024-01-08T06:54:26.000-06:00","comment_count":56,"comments_url":"https://lobste.rs/s/djxada/missing_point_webassembly","submitter_name":"flockofbirbs","tags":["wasm"],"description":""},{"short_id":"rjonl7","title":"Jepsen: Datomic Pro 1.0.7075","url":"https://jepsen.io/analyses/datomic-pro-1.0.7075","created_at":"2024-05-15T11:57:56.000-05:00","comment_count":15,"comments_url":"https://lobste.rs/s/rjonl7/jepsen_datomic_pro_1_0_7075","submitter_name":"aphyr","tags":["databases","distributed","testing"],"description":""},{"short_id":"xotzim","title":"Emacs From Scratch Part Two: Projects and Keybindings","url":"https://arne.me/articles/emacs-from-scratch-part-two","created_at":"2023-12-28T13:24:25.000-06:00","comment_count":9,"comments_url":"https://lobste.rs/s/xotzim/emacs_from_scratch_part_two_projects","submitter_name":"bahlo","tags":["emacs"],"description":""},{"short_id":"erfhyu","title":"Readings in Database Systems, 5th Edition","url":"http://www.redbook.io/index.html","created_at":"2023-08-04T00:24:56.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/erfhyu/readings_database_systems_5th_edition","submitter_name":"vector_spaces","tags":["databases"],"description":""},{"short_id":"zfnak4","title":"What if everybody did everything right?","url":"https://surfingcomplexity.blog/2024/02/17/what-if-everybody-did-everything-right/","created_at":"2024-03-18T16:59:46.000-05:00","comment_count":12,"comments_url":"https://lobste.rs/s/zfnak4/what_if_everybody_did_everything_right","submitter_name":"hwayne","tags":["devops","practices"],"description":""},{"short_id":"kuq1ha","title":"Unsafe : on Rust still being helpful even with a lot of `unsafe`","url":"https://v5.chriskrycho.com/journal/unsafe/","created_at":"2023-08-02T08:03:56.000-05:00","comment_count":35,"comments_url":"https://lobste.rs/s/kuq1ha/unsafe_on_rust_still_being_helpful_even","submitter_name":"chriskrycho","tags":["rust"],"description":""},{"short_id":"rvqez7","title":"How I Use Git Worktrees","url":"https://matklad.github.io/2024/07/25/git-worktrees.html","created_at":"2024-07-25T16:16:02.000-05:00","comment_count":62,"comments_url":"https://lobste.rs/s/rvqez7/how_i_use_git_worktrees","submitter_name":"antonz","tags":["vcs"],"description":""},{"short_id":"4g7xju","title":"Investigating an Event Queue Hang: The Code Works Correctly","url":"https://gist.github.com/FeepingCreature/a8099d2bcf850a9c388ed045fa3b5c0e","created_at":"2024-06-24T06:33:00.000-05:00","comment_count":3,"comments_url":"https://lobste.rs/s/4g7xju/investigating_event_queue_hang_code","submitter_name":"FeepingCreature","tags":["debugging","distributed","historical"],"description":""},{"short_id":"iovz9o","title":"The State of Async Rust","url":"https://corrode.dev/blog/async/","created_at":"2023-09-21T16:00:24.000-05:00","comment_count":29,"comments_url":"https://lobste.rs/s/iovz9o/state_async_rust","submitter_name":"robey","tags":["rust"],"description":""},{"short_id":"j2aprn","title":"Logic and Computation Intertwined","url":"https://cs.uwaterloo.ca/~plragde/flaneries/LACI/index.html","created_at":"2024-09-02T12:17:16.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/j2aprn/logic_computation_intertwined","submitter_name":"veqq","tags":["formalmethods","lisp"],"description":""},{"short_id":"mg1dfm","title":"Debugging by querying a database of all program state","url":"https://www.hytradboi.com/2022/debugging-by-querying-a-database-of-all-program-state/","created_at":"2024-10-02T19:50:22.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/mg1dfm/debugging_by_querying_database_all","submitter_name":"teymour","tags":["databases","debugging"],"description":""},{"short_id":"naxyao","title":"Compilers for free with weval","url":"https://bernsteinbear.com/blog/weval/","created_at":"2024-05-19T06:31:26.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/naxyao/compilers_for_free_with_weval","submitter_name":"carlana","tags":["plt","wasm"],"description":""},{"short_id":"0hbzos","title":"rsc-regexp: Translations of a simple C program to Rust","url":"https://github.com/BurntSushi/rsc-regexp","created_at":"2023-11-03T04:07:52.000-05:00","comment_count":10,"comments_url":"https://lobste.rs/s/0hbzos/rsc_regexp_translations_simple_c_program","submitter_name":"knl","tags":["performance","rust"],"description":""},{"short_id":"rz5wcp","title":"How Austral’s Linear Type Checker Works","url":"https://borretti.me/article/how-australs-linear-type-checker-works","created_at":"2023-01-29T01:31:13.000-06:00","comment_count":24,"comments_url":"https://lobste.rs/s/rz5wcp/how_austral_s_linear_type_checker_works","submitter_name":"adaszko","tags":["plt","rust"],"description":""},{"short_id":"ymgdcq","title":"You should be reading academic computer science papers (2022)","url":"https://stackoverflow.blog/2022/12/30/you-should-be-reading-academic-computer-science-papers/","created_at":"2023-05-16T01:43:43.000-05:00","comment_count":31,"comments_url":"https://lobste.rs/s/ymgdcq/you_should_be_reading_academic_computer","submitter_name":"5d22b","tags":["compsci","practices"],"description":""},{"short_id":"nj86kb","title":"Refined Input, Degraded Output: The Counterintuitive World of Compiler Behavior","url":"https://dl.acm.org/doi/pdf/10.1145/3656404","created_at":"2024-07-07T21:53:14.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/nj86kb/refined_input_degraded_output","submitter_name":"GeoffWozniak","tags":["compilers","pdf"],"description":""},{"short_id":"aqs1ma","title":"Does Your Test Suite Account For Weak Transaction Isolation?","url":"https://concerningquality.com/txn-isolation-testing/","created_at":"2024-01-04T08:57:26.000-06:00","comment_count":8,"comments_url":"https://lobste.rs/s/aqs1ma/does_your_test_suite_account_for_weak","submitter_name":"amw-zero","tags":["databases","testing"],"description":""},{"short_id":"mt4aze","title":"A tour of the LLVM backend","url":"https://artagnon.com/computing/compilers/backend","created_at":"2024-08-05T10:42:15.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/mt4aze/tour_llvm_backend","submitter_name":"artagnon","tags":["compilers"],"description":""},{"short_id":"hxpb4z","title":"Implementing #embed for C and C++","url":"https://thephd.dev/implementing-embed-c-and-c++","created_at":"2023-10-20T10:22:44.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/hxpb4z/implementing_embed_for_c_c","submitter_name":"NoahTheDuke","tags":["c","c++"],"description":""},{"short_id":"m6kn08","title":"Faking Algebraic Effects and Handlers With Traits: A Rust Design Pattern","url":"https://blog.shtsoft.eu/2022/12/22/effect-trait-dp.html","created_at":"2023-02-23T20:17:00.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/m6kn08/faking_algebraic_effects_handlers_with","submitter_name":"5d22b","tags":["plt","rust"],"description":""},{"short_id":"jmcsmu","title":"Maglev - V8’s Fastest Optimizing JIT","url":"https://v8.dev/blog/maglev","created_at":"2023-12-08T11:36:07.000-06:00","comment_count":7,"comments_url":"https://lobste.rs/s/jmcsmu/maglev_v8_s_fastest_optimizing_jit","submitter_name":"asb","tags":["javascript"],"description":""},{"short_id":"99rf3c","title":"The State Of Garnet in 2025","url":"https://wiki.alopex.li/TheStateOfGarnet2025","created_at":"2025-01-03T16:08:09.000-06:00","comment_count":30,"comments_url":"https://lobste.rs/s/99rf3c/state_garnet_2025","submitter_name":"icefox","tags":["plt"],"description":""},{"short_id":"bbntql","title":"Understanding React Compiler","url":"https://tonyalicea.dev/blog/understanding-react-compiler/","created_at":"2024-06-30T12:42:25.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/bbntql/understanding_react_compiler","submitter_name":"mpweiher","tags":["web"],"description":""},{"short_id":"ewxw1i","title":"Less-technical introductions to type checking?","url":"","created_at":"2023-07-11T11:10:12.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/ewxw1i/less_technical_introductions_type","submitter_name":"snej","tags":["ask","compilers","plt"],"description":"<p>I’ve picked up my <a href=\"https://github.com/snej/tails\" rel=\"ugc\">Tails</a> project again — a little Forth-like language using a fast tail-calling threaded interpreter. It’s statically-typed, but I’ve run into the limits of its very simple type system and I want to fix that*.</p>\n<p>I’d like to read more about type systems, type checkers, type inference … but everything I’ve seen on the topic is quite technical and leaves me lost in a fog of lambda calculus, category theory and advanced FP techniques.</p>\n<p>Is there anything that explains these topics from more of an implementor’s perspective, preferably without assuming the reader is skilled in OCaml or Haskell, and preferably using [pseudo]code instead of math notation? Or do I need to suck it up and study texts like <em>SICP</em> and <em>Learn You A Haskell</em> first?</p>\n<p>FWIW, I’m pretty familiar with parsers and bytecode interpreters, having implemented several over the years, but for <em>dynamically typed</em> languages. Tails is my first attempt at static typing.</p>\n<blockquote>\n<p>* the problems I’m working on now have to do with type-checking calls to lambdas (“quotes”). I need to extend the type system to represent the signature of a lambda parameter within a function signature, and to do this “row polymorphism” thing that’s unique to concatenative languages.</p>\n</blockquote>\n"},{"short_id":"vugxuj","title":"MLIR For Beginners","url":"https://github.com/j2kun/mlir-tutorial","created_at":"2023-08-11T14:27:09.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/vugxuj/mlir_for_beginners","submitter_name":"mepian","tags":["compilers"],"description":""},{"short_id":"ilbq2q","title":"Functional Data Structures and Algorithms. A Proof Assistant Approach","url":"https://functional-algorithms-verified.org/","created_at":"2023-08-31T19:24:35.000-05:00","comment_count":6,"comments_url":"https://lobste.rs/s/ilbq2q/functional_data_structures_algorithms","submitter_name":"nextos","tags":["book","formalmethods","pdf","plt"],"description":""},{"short_id":"mutdyp","title":"Borrow checking, RC, GC, and the Eleven (!) Other Memory Safety Approaches","url":"https://verdagon.dev/grimoire/grimoire","created_at":"2024-04-24T11:37:55.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/mutdyp/borrow_checking_rc_gc_eleven_other_memory","submitter_name":"jado","tags":["programming"],"description":""},{"short_id":"z2qhlm","title":"On Modularity of Lexical Analysis","url":"https://matklad.github.io/2023/08/01/on-modularity-of-lexical-analysis.html","created_at":"2023-08-01T06:20:12.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/z2qhlm/on_modularity_lexical_analysis","submitter_name":"matklad","tags":["compilers","plt"],"description":""},{"short_id":"toubeb","title":"Yo, I heard you like decorators","url":"https://www.bbayles.com/index/decorator_factory","created_at":"2023-04-06T14:55:04.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/toubeb/yo_i_heard_you_like_decorators","submitter_name":"hwayne","tags":["python"],"description":""},{"short_id":"o1zdwv","title":"Reasons I still love the fish shell","url":"https://jvns.ca/blog/2024/09/12/reasons-i--still--love-fish/","created_at":"2024-09-12T16:51:53.000-05:00","comment_count":102,"comments_url":"https://lobste.rs/s/o1zdwv/reasons_i_still_love_fish_shell","submitter_name":"equeue","tags":["programming"],"description":""},{"short_id":"88rsuc","title":"How Swift Achieved Dynamic Linking Where Rust Couldn't (2019)","url":"https://faultlore.com/blah/swift-abi/","created_at":"2023-01-29T15:39:16.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/88rsuc/how_swift_achieved_dynamic_linking_where","submitter_name":"jado","tags":["compilers","rust","swift"],"description":""},{"short_id":"m88upk","title":"Tiny challenges for learning WebAssembly","url":"https://github.com/danprince/webassembly-wizardry","created_at":"2024-12-24T16:29:30.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/m88upk/tiny_challenges_for_learning","submitter_name":"eeue56","tags":["wasm"],"description":""},{"short_id":"u5ddne","title":"Programming and computing bloggers: How do you decide what to write about?","url":"","created_at":"2023-07-04T14:11:33.000-05:00","comment_count":23,"comments_url":"https://lobste.rs/s/u5ddne/programming_computing_bloggers_how_do","submitter_name":"bugsmith","tags":["ask","programming"],"description":"<p>This is a question aimed at those of you that keep blogs particularly if you (or anyone else) share your posts here.</p>\n<p>How do you go about finding interesting topics to write about?</p>\n<p>Additionally, for the sake of discussion:</p>\n<p>What leads you to digging into language features or discovering framework quirks or finding better patterns than what everyone else is using?</p>\n<p>Do you do things with the intention of writing about them, or do you just write about the things you happen upon?</p>\n<p>When writing your hot take on something, what gives you the confidence to put text to page and share it with the world?</p>\n<p>Why do you blog at all? Is it to benefit others, to help you learn, just to document things, or just for the fame and fortune that comes from it?</p>\n<p>How would you advise someone knew to blogging and early in their computing career begin?</p>\n"},{"short_id":"ohcl00","title":"A catalog of ways to generate SSA","url":"https://bernsteinbear.com/blog/ssa/","created_at":"2025-02-11T08:10:36.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/ohcl00/catalog_ways_generate_ssa","submitter_name":"tekknolagi","tags":["compilers","plt"],"description":""},{"short_id":"c90ird","title":"Write more \"useless\" software","url":"https://ntietz.com/blog/write-more-useless-software/","created_at":"2023-10-18T20:25:36.000-05:00","comment_count":24,"comments_url":"https://lobste.rs/s/c90ird/write_more_useless_software","submitter_name":"amw-zero","tags":["programming"],"description":""},{"short_id":"5417dx","title":"Storing data in pointers","url":"https://muxup.com/2023q4/storing-data-in-pointers","created_at":"2023-11-26T14:52:53.000-06:00","comment_count":29,"comments_url":"https://lobste.rs/s/5417dx/storing_data_pointers","submitter_name":"eatonphil","tags":["compilers"],"description":""},{"short_id":"hkkcan","title":"TypeScript is Surprisingly OK for Compilers","url":"https://matklad.github.io/2023/08/17/typescript-is-surprisingly-ok-for-compilers.html","created_at":"2023-08-18T06:45:30.000-05:00","comment_count":21,"comments_url":"https://lobste.rs/s/hkkcan/typescript_is_surprisingly_ok_for","submitter_name":"jryans","tags":["compilers","javascript","plt"],"description":""},{"short_id":"ltbw08","title":"Moving Beyond Type Systems","url":"https://vhyrro.github.io/posts/effect-systems/","created_at":"2024-06-06T15:20:14.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/ltbw08/moving_beyond_type_systems","submitter_name":"sunflowerseastar","tags":["plt"],"description":""},{"short_id":"tu7kjz","title":"Introducing the Determinate Nix Installer","url":"https://determinate.systems/posts/determinate-nix-installer","created_at":"2023-02-27T10:04:08.000-06:00","comment_count":33,"comments_url":"https://lobste.rs/s/tu7kjz/introducing_determinate_nix_installer","submitter_name":"linuxhackerman","tags":["nix"],"description":""},{"short_id":"u7y4lk","title":"'Modules Matter' Most for the Masses","url":"https://www.pathsensitive.com/2023/03/modules-matter-most-for-masses.html","created_at":"2023-03-30T20:07:12.000-05:00","comment_count":23,"comments_url":"https://lobste.rs/s/u7y4lk/modules_matter_most_for_masses","submitter_name":"jkoppel","tags":["ml","plt","programming"],"description":""},{"short_id":"tr9lkd","title":"Delimited Generators - A more natural API for JS generators","url":"https://axisofeval.blogspot.com/2024/05/delimited-generators.html","created_at":"2024-05-02T04:32:18.000-05:00","comment_count":21,"comments_url":"https://lobste.rs/s/tr9lkd/delimited_generators_more_natural_api","submitter_name":"manuel","tags":["javascript"],"description":""},{"short_id":"lfg3lj","title":"Zig, Rust, and other languages","url":"https://notes.eatonphil.com/2024-03-15-zig-rust-and-other-languages.html","created_at":"2024-03-15T16:06:08.000-05:00","comment_count":49,"comments_url":"https://lobste.rs/s/lfg3lj/zig_rust_other_languages","submitter_name":"eatonphil","tags":["rust","zig"],"description":""},{"short_id":"bd1y8i","title":"Bril: An Intermediate Language for Teaching Compilers","url":"https://www.cs.cornell.edu/~asampson/blog/bril.html","created_at":"2024-07-26T10:37:37.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/bd1y8i/bril_intermediate_language_for_teaching","submitter_name":"asb","tags":["compilers","education"],"description":""},{"short_id":"jdgjjt","title":"Visitor Pattern Considered Pointless - Use Pattern Switches Instead (2021)","url":"https://nipafx.dev/java-visitor-pattern-pointless/","created_at":"2024-12-19T18:00:46.000-06:00","comment_count":42,"comments_url":"https://lobste.rs/s/jdgjjt/visitor_pattern_considered_pointless","submitter_name":"roryokane","tags":["java"],"description":""},{"short_id":"tgihfq","title":"Into CPS, never to return","url":"https://bernsteinbear.com/blog/cps/","created_at":"2024-12-25T14:35:47.000-06:00","comment_count":4,"comments_url":"https://lobste.rs/s/tgihfq/into_cps_never_return","submitter_name":"tekknolagi","tags":["compilers","lisp","plt"],"description":""},{"short_id":"jr38vj","title":"Use of Time in Distributed Databases (part 2): Use of logical clocks in databases","url":"https://muratbuffalo.blogspot.com/2024/12/use-of-time-in-distributed-databases_26.html","created_at":"2024-12-26T16:43:58.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/jr38vj/use_time_distributed_databases_part_2_use","submitter_name":"emschwartz","tags":["databases","distributed"],"description":""},{"short_id":"pjoydd","title":"Stuff I learnt in 2024","url":"https://pixel-druid.com/articles/stuff-i-learnt-in-2024","created_at":"2024-12-28T13:20:49.000-06:00","comment_count":3,"comments_url":"https://lobste.rs/s/pjoydd/stuff_i_learnt_2024","submitter_name":"bollu","tags":["formalmethods"],"description":""},{"short_id":"rxof59","title":"Reference Counting: Harder than it Sounds (2015)","url":"https://www.playingwithpointers.com/blog/refcounting-harder-than-it-sounds.html","created_at":"2025-02-11T15:26:34.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/rxof59/reference_counting_harder_than_it_sounds","submitter_name":"hwayne","tags":["compsci"],"description":""},{"short_id":"563zjp","title":"How does a Linux machine connect to the internet, really?","url":"https://pjg1.site/linux-internet-from-scratch","created_at":"2025-02-12T04:33:54.000-06:00","comment_count":20,"comments_url":"https://lobste.rs/s/563zjp/how_does_linux_machine_connect_internet","submitter_name":"pjg1","tags":["linux","networking"],"description":""},{"short_id":"quhtak","title":"Do you use a debugger?","url":"https://www.sandordargo.com/blog/2025/02/12/do-you-use-a-debugger","created_at":"2025-02-12T12:01:50.000-06:00","comment_count":22,"comments_url":"https://lobste.rs/s/quhtak/do_you_use_debugger","submitter_name":"raymii","tags":["c++"],"description":""},{"short_id":"cuakjw","title":"A survey of every iterator variant","url":"https://blog.yoshuawuyts.com/a-survey-of-every-iterator-variant","created_at":"2025-02-12T08:58:34.000-06:00","comment_count":8,"comments_url":"https://lobste.rs/s/cuakjw/survey_every_iterator_variant","submitter_name":"emschwartz","tags":["rust"],"description":""},{"short_id":"nz0imd","title":"Iteration in one language, then all the others (2016)","url":"https://eev.ee/blog/2016/11/18/iteration-in-one-language-then-all-the-others/","created_at":"2025-02-12T12:27:19.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/nz0imd/iteration_one_language_then_all_others","submitter_name":"hwayne","tags":["plt"],"description":""},{"short_id":"zikzbv","title":"Debugging in the Multiverse","url":"https://antithesis.com/blog/multiverse_debugging/","created_at":"2024-09-10T08:20:35.000-05:00","comment_count":5,"comments_url":"https://lobste.rs/s/zikzbv/debugging_multiverse","submitter_name":"Jrmurr","tags":["debugging"],"description":""},{"short_id":"frbh3v","title":"Many explanations of JOIN are wrong, and people get confused","url":"https://minimalmodeling.substack.com/p/many-explanations-of-join-are-wrong","created_at":"2023-11-26T04:47:45.000-06:00","comment_count":35,"comments_url":"https://lobste.rs/s/frbh3v/many_explanations_join_are_wrong_people","submitter_name":"squadette","tags":["databases"],"description":""},{"short_id":"rdjqw0","title":"Why am I writing a JavaScript toolchain in Zig?","url":"https://injuly.in/blog/announcing-jam/index.html","created_at":"2024-11-22T13:15:54.000-06:00","comment_count":19,"comments_url":"https://lobste.rs/s/rdjqw0/why_am_i_writing_javascript_toolchain_zig","submitter_name":"injuly","tags":["compilers","javascript","web","zig"],"description":""},{"short_id":"krgcvz","title":"How do modern compilers choose which variables to put in registers?","url":"https://langdev.stackexchange.com/questions/4325/how-do-modern-compilers-choose-which-variables-to-put-in-registers","created_at":"2025-02-14T07:30:54.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/krgcvz/how_do_modern_compilers_choose_which","submitter_name":"azeemba","tags":["compilers","plt"],"description":""},{"short_id":"fw48of","title":"Algebraic effects are a functional approach to manage side effects","url":"http://crowdhailer.me/2025-02-06/programs-dont-kill-people-computers-do/","created_at":"2025-02-13T06:50:15.000-06:00","comment_count":13,"comments_url":"https://lobste.rs/s/fw48of/algebraic_effects_are_functional","submitter_name":"crowdhailer","tags":["plt"],"description":""},{"short_id":"rsuopk","title":"TeX and Typst: Layout Models","url":"https://laurmaedje.github.io/posts/layout-models/","created_at":"2025-02-14T15:21:03.000-06:00","comment_count":8,"comments_url":"https://lobste.rs/s/rsuopk/tex_typst_layout_models","submitter_name":"fanf","tags":["graphics"],"description":""},{"short_id":"fqarj7","title":"Type Erasure: The Implementation Details","url":"https://www.youtube.com/watch?v=7MNyAHp0h7A","created_at":"2024-02-18T21:39:22.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/fqarj7/type_erasure_implementation_details","submitter_name":"option","tags":["c++","video"],"description":""},{"short_id":"pywrnr","title":"aya-dev: A proof assistant and a dependently-typed language","url":"https://github.com/aya-prover/aya-dev","created_at":"2024-08-29T02:23:14.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/pywrnr/aya_dev_proof_assistant_dependently","submitter_name":"5d22b","tags":["formalmethods","plt"],"description":""},{"short_id":"hua6hp","title":"Building Type Search for Unison","url":"https://chrispenner.ca/posts/unison-type-search","created_at":"2024-08-14T18:50:07.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/hua6hp/building_type_search_for_unison","submitter_name":"shapr","tags":["plt"],"description":""},{"short_id":"tc8l4r","title":"Cranelift: Correctness in Register Allocation","url":"https://cfallin.org/blog/2021/03/15/cranelift-isel-3/","created_at":"2023-01-19T13:15:48.000-06:00","comment_count":0,"comments_url":"https://lobste.rs/s/tc8l4r/cranelift_correctness_register","submitter_name":"teymour","tags":["compilers"],"description":""},{"short_id":"wl1qe1","title":"What I've Learned About Formal Methods In Half a Year","url":"https://jakob.space/blog/what-ive-learned-about-formal-methods.html","created_at":"2023-04-10T06:29:34.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/wl1qe1/what_i_ve_learned_about_formal_methods","submitter_name":"jakob","tags":["formalmethods"],"description":""},{"short_id":"hl00vs","title":"Type safe variadic printf, without macros","url":"https://www.stranger.systems/posts/by-slug/type-safe-variadic-printf.html","created_at":"2025-02-14T14:09:48.000-06:00","comment_count":24,"comments_url":"https://lobste.rs/s/hl00vs/type_safe_variadic_printf_without_macros","submitter_name":"thatonelutenist","tags":["api","plt"],"description":""},{"short_id":"zm1g8r","title":"Why I'm Writing a Scheme Implementation in 2025 (The Answer is Async Rust)","url":"https://maplant.com/2025-02-17-Why-I'm-Writing-a-Scheme-Implementation-in-2025-(The-Answer-is-Async-Rust).html","created_at":"2025-02-17T14:29:53.000-06:00","comment_count":29,"comments_url":"https://lobste.rs/s/zm1g8r/why_i_m_writing_scheme_implementation","submitter_name":"mplant","tags":["compilers","lisp","plt","rust"],"description":""},{"short_id":"vpiex3","title":"Code Style Sheets: CSS for Code","url":"https://arxiv.org/pdf/2502.09386","created_at":"2025-02-18T02:39:50.000-06:00","comment_count":1,"comments_url":"https://lobste.rs/s/vpiex3/code_style_sheets_css_for_code","submitter_name":"gasche","tags":["css","pdf","plt"],"description":""},{"short_id":"w7qf9o","title":"How I implement SSA form","url":"https://gist.github.com/pizlonator/cf1e72b8600b1437dda8153ea3fdb963","created_at":"2025-02-16T01:20:14.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/w7qf9o/how_i_implement_ssa_form","submitter_name":"asb","tags":["compilers"],"description":""},{"short_id":"pt14vn","title":"The worst bug we faced at Antithesis","url":"https://antithesis.com/blog/worst_bug/","created_at":"2024-05-21T08:49:47.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/pt14vn/worst_bug_we_faced_at_antithesis","submitter_name":"eatonphil","tags":["debugging","freebsd","virtualization"],"description":""},{"short_id":"e6pzfr","title":"Unwind considered harmful?","url":"https://smallcultfollowing.com/babysteps/blog/2024/05/02/unwind-considered-harmful/","created_at":"2024-05-02T11:53:35.000-05:00","comment_count":19,"comments_url":"https://lobste.rs/s/e6pzfr/unwind_considered_harmful","submitter_name":"vi_mi","tags":["rust"],"description":""},{"short_id":"lnyfm6","title":"Compiling typed Python","url":"https://bernsteinbear.com//blog/typed-python/","created_at":"2023-06-19T19:52:17.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/lnyfm6/compiling_typed_python","submitter_name":"eBPF","tags":["performance","plt","python"],"description":""},{"short_id":"unfyqm","title":"Tasks are the wrong abstraction","url":"https://blog.yoshuawuyts.com/tasks-are-the-wrong-abstraction/","created_at":"2024-04-27T16:02:45.000-05:00","comment_count":11,"comments_url":"https://lobste.rs/s/unfyqm/tasks_are_wrong_abstraction","submitter_name":"kornel","tags":["rust"],"description":""},{"short_id":"xcwla4","title":"Hardest Problem in Computer Science: Centering Things","url":"https://tonsky.me/blog/centering/","created_at":"2024-04-16T23:38:08.000-05:00","comment_count":40,"comments_url":"https://lobste.rs/s/xcwla4/hardest_problem_computer_science","submitter_name":"jamesgecko","tags":["css","design"],"description":""},{"short_id":"seenwo","title":"Types and the Zig Programming Language","url":"https://matklad.github.io/2023/08/09/types-and-zig.html","created_at":"2023-08-10T04:25:47.000-05:00","comment_count":12,"comments_url":"https://lobste.rs/s/seenwo/types_zig_programming_language","submitter_name":"matklad","tags":["plt","zig"],"description":""},{"short_id":"awcoy3","title":"Let futures be futures","url":"https://without.boats/blog/let-futures-be-futures/","created_at":"2024-02-03T13:26:47.000-06:00","comment_count":60,"comments_url":"https://lobste.rs/s/awcoy3/let_futures_be_futures","submitter_name":"jado","tags":["plt","rust"],"description":""},{"short_id":"vjsada","title":"Proof Pearl: Magic Wand as Frame","url":"https://arxiv.org/abs/1909.08789","created_at":"2024-10-29T10:20:42.000-05:00","comment_count":2,"comments_url":"https://lobste.rs/s/vjsada/proof_pearl_magic_wand_as_frame","submitter_name":"meithecatte","tags":["formalmethods","pdf"],"description":"<blockquote>\n<p>Separation logic adds two connectives to assertion languages: separating conjunction <code>*</code> (“star”) and its adjoint, separating implication <code>-*</code> (“magic wand”). Comparatively, separating implication is less widely used.</p>\n<p>This paper demonstrates that by using magic wand to express frames that relate mutable local portions of data structures to global portions, we can exploit its power while proofs are still easily understandable. Many useful separation logic theorems about partial data structures can now be proved by simple automated tactics, which were usually proved by induction. This magic-wand-as-frame technique is especially useful when formalizing the proofs by a high order logic. We verify binary search tree insert in Coq as an example to demonstrate this proof technique.</p>\n</blockquote>\n"},{"short_id":"pepihj","title":"Transaction Isolation in Postgres, explained","url":"https://www.thenile.dev/blog/transaction-isolation-postgres","created_at":"2024-10-26T15:30:03.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/pepihj/transaction_isolation_postgres","submitter_name":"jbranchaud","tags":["databases"],"description":""},{"short_id":"yo1bez","title":"Optimizing a parser/compiler with data-oriented design: a case study","url":"https://tweedegolf.nl/en/blog/88/data-oriented-design","created_at":"2023-03-24T02:02:45.000-05:00","comment_count":1,"comments_url":"https://lobste.rs/s/yo1bez/optimizing_parser_compiler_with_data","submitter_name":"5d22b","tags":["compilers","performance","rust"],"description":""},{"short_id":"aohy4i","title":"A Python frozenset interpretation of Dependent Type Theory","url":"https://www.philipzucker.com/frozenset_dtt/","created_at":"2025-05-19T13:18:35.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/aohy4i/python_frozenset_interpretation","submitter_name":"philzook","tags":["formalmethods","plt"],"description":""},{"short_id":"4ukqbf","title":"How the jax.jit() JIT compiler works in jax-js","url":"https://ekzhang.substack.com/p/how-the-jaxjit-jit-compiler-works","created_at":"2025-05-20T05:22:23.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/4ukqbf/how_jax_jit_jit_compiler_works_jax_js","submitter_name":"abhi9u","tags":["compilers"],"description":""},{"short_id":"hvufhx","title":"Zenbleed","url":"https://lock.cmpxchg8b.com/zenbleed.html","created_at":"2023-07-24T09:59:01.000-05:00","comment_count":39,"comments_url":"https://lobste.rs/s/hvufhx/zenbleed","submitter_name":"toastal","tags":["hardware","security"],"description":""},{"short_id":"xmpj1p","title":"You probably wrote half a monad by accident","url":"https://gieseanw.wordpress.com/2024/06/25/you-probably-wrote-half-a-monad-by-accident/","created_at":"2024-06-26T11:32:44.000-05:00","comment_count":26,"comments_url":"https://lobste.rs/s/xmpj1p/you_probably_wrote_half_monad_by_accident","submitter_name":"Juan","tags":["programming"],"description":""},{"short_id":"ftsowh","title":"Building a baseline JIT for Lua automatically","url":"https://sillycross.github.io/2023/05/12/2023-05-12/","created_at":"2023-05-12T09:38:30.000-05:00","comment_count":18,"comments_url":"https://lobste.rs/s/ftsowh/building_baseline_jit_for_lua","submitter_name":"sillycross","tags":["c++","compilers","lua"],"description":""},{"short_id":"hbr6zl","title":"The Cloud Computer / Oxide","url":"https://oxide.computer/blog/the-cloud-computer","created_at":"2023-10-26T06:18:01.000-05:00","comment_count":63,"comments_url":"https://lobste.rs/s/hbr6zl/cloud_computer_oxide","submitter_name":"maxdeviant","tags":["hardware"],"description":""},{"short_id":"ax4j9b","title":"Go evolves in the wrong direction","url":"https://valyala.medium.com/go-evolves-in-the-wrong-direction-7dfda8a1a620","created_at":"2024-06-10T19:15:57.000-05:00","comment_count":151,"comments_url":"https://lobste.rs/s/ax4j9b/go_evolves_wrong_direction","submitter_name":"valyala","tags":["go"],"description":""},{"short_id":"ybedui","title":"Don’t Implement Unification by Recursion","url":"https://www.philipzucker.com/unify/","created_at":"2024-10-28T13:00:24.000-05:00","comment_count":4,"comments_url":"https://lobste.rs/s/ybedui/don_t_implement_unification_by_recursion","submitter_name":"mjn","tags":["plt"],"description":""},{"short_id":"0lpqdr","title":"Bergamot: Exploring Programming Language Inference Rules","url":"https://danilafe.com/blog/bergamot/","created_at":"2024-02-18T09:43:18.000-06:00","comment_count":2,"comments_url":"https://lobste.rs/s/0lpqdr/bergamot_exploring_programming","submitter_name":"ehamberg","tags":["plt"],"description":""},{"short_id":"y3o3vf","title":"Testing Distributed Systems w/ Deterministic Simulation (2014)","url":"https://youtu.be/4fFDFbi3toc","created_at":"2024-02-18T22:02:26.000-06:00","comment_count":5,"comments_url":"https://lobste.rs/s/y3o3vf/testing_distributed_systems_w","submitter_name":"agent281","tags":["testing","video"],"description":""},{"short_id":"v4xwjv","title":"The Windows Subsystem for Linux is now open source","url":"https://blogs.windows.com/windowsdeveloper/2025/05/19/the-windows-subsystem-for-linux-is-now-open-source/","created_at":"2025-05-19T11:51:55.000-05:00","comment_count":25,"comments_url":"https://lobste.rs/s/v4xwjv/windows_subsystem_for_linux_is_now_open","submitter_name":"Foxboron","tags":["linux","windows"],"description":""},{"short_id":"erab7d","title":"The Lisp in the Cellar: Dependent Types that Live Upstairs","url":"https://zenodo.org/records/15424968/files/deputy-els.pdf","created_at":"2025-05-20T08:34:41.000-05:00","comment_count":0,"comments_url":"https://lobste.rs/s/erab7d/lisp_cellar_dependent_types_live","submitter_name":"LeahNeukirchen","tags":["clojure","pdf","plt"],"description":""},{"short_id":"fgvbsc","title":"Why Algebraic Effects?","url":"https://antelang.org/blog/why_effects/","created_at":"2025-05-23T14:04:33.000-05:00","comment_count":21,"comments_url":"https://lobste.rs/s/fgvbsc/why_algebraic_effects","submitter_name":"osa1","tags":["plt"],"description":""},{"short_id":"zty9jf","title":"Async from scratch 3: Pinned against the wall","url":"https://natkr.com/2025-05-22-async-from-scratch-3/","created_at":"2025-05-22T15:01:09.000-05:00","comment_count":9,"comments_url":"https://lobste.rs/s/zty9jf/async_from_scratch_3_pinned_against_wall","submitter_name":"natkr","tags":["rust"],"description":""}]