<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Dipesh</title>
    <link rel="self" type="application/atom+xml" href="https://dipeshkaphle.github.io/Learning/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2001-03-25T00:00:00+00:00</updated>
    <id>https://dipeshkaphle.github.io/Learning/atom.xml</id>
    <entry xml:lang="en">
        <title>Blogs, Papers and Podcasts</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/blogs-and-papers/"/>
        <id>https://dipeshkaphle.github.io/Learning/blogs-and-papers/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/blogs-and-papers/">&lt;h1 id=&quot;blogs-and-podcasts&quot;&gt;Blogs and Podcasts&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cohost.org&#x2F;lexyeevee&#x2F;post&#x2F;495441-css-for-css-baby-1&quot;&gt;CSS tutorial series(looks nice)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;davekilian.com&#x2F;acquire-release.html&quot;&gt;Making Sense of Acquire Release Semantics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;austinhenley.com&#x2F;blog&#x2F;favblogs.html&quot;&gt;Tech Blogs Worth Reading by Austin Henley(Lots of nice blogs mentioned)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Steve Yegge Blogs &lt;a href=&quot;https:&#x2F;&#x2F;sites.google.com&#x2F;site&#x2F;steveyegge2&#x2F;blog-rants&quot;&gt;Old Blog&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;steve-yegge.blogspot.com&#x2F;&quot;&gt;New Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;sites.google.com&#x2F;site&#x2F;steveyegge2&#x2F;ten-great-books&quot;&gt;ten-great-books&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;sites.google.com&#x2F;site&#x2F;steveyegge2&#x2F;ten-challenges&quot;&gt;ten-challenges (more good books)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;&quot;&gt;Alex Kladov blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.janestreet.com&quot;&gt;Jane Street Tech Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;eng.uber.com&#x2F;&quot;&gt;Uber Eng Blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;category&#x2F;engineering&quot;&gt;Discord Engineering Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;fasterthanli.me&#x2F;&quot;&gt;fasterthanli.me(so good)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sidkshatriya&#x2F;me&quot;&gt;Sid Kshatriya Blogs, good blog on rust and rr debuggers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.pathsensitive.com&#x2F;2021&#x2F;03&#x2F;why-programmers-shouldnt-learn-theory.html&quot;&gt;Why Programmers Should(n&#x27;t) Learn Theory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;&quot;&gt;Max Bernstein blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GoWind&#x2F;GoWind.github.io&quot;&gt;GoWind blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polytypic&#x2F;blog&quot;&gt;Vesa blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.eventhelix.com&#x2F;design&#x2F;&quot;&gt;Eventhelix&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;faultlore.com&#x2F;blah&#x2F;&quot;&gt;Gankra_&#x27;s blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.ralfj.de&#x2F;blog&quot;&gt;Ralf Jung&#x27;s blog(lot of advanced Rust things)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;&quot;&gt;Niko Matsiakis blog(lots of Rust stuff)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;&quot;&gt;Fernando Borretti&#x27;s blog(again super nice PL blogs)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v8.dev&#x2F;blog&quot;&gt;V8 blog, many memory and general optimization related things&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;semantic-domain.blogspot.com&#x2F;&quot;&gt;Neel Krishnaswami&#x27;s blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;www.pl-enthusiast.net&#x2F;&quot;&gt;Michael Hick&#x27;s blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;nnethercote.github.io&#x2F;&quot;&gt;Nicholas Nethercote(lots of stuff about rust, valgrind)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31762574&quot;&gt;Retrofitting Temporal Memory Safety on C++(HN Discussion)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;research.swtch.com&#x2F;&quot;&gt;Russ Cox blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.hillelwayne.com&#x2F;post&#x2F;&quot;&gt;Hillel Wayne Blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;courses&#x2F;cs6120&#x2F;2022sp&#x2F;blog&#x2F;&quot;&gt;CS6120 Blogs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;courses&#x2F;cs6120&#x2F;2019fa&#x2F;blog&#x2F;&quot;&gt;2019 version blogs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;courses&#x2F;cs6120&#x2F;2020fa&#x2F;blog&#x2F;&quot;&gt;2020 version blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.trailofbits.com&#x2F;&quot;&gt;Nice blogs on C++&#x2F;Clang mostly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.pathsensitive.com&#x2F;2019&#x2F;07&#x2F;the-best-refactoring-youve-never-heard.html&quot;&gt;The best refactoring you&#x27;ve never heard of&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.andrew.cmu.edu&#x2F;user&#x2F;mrainey&#x2F;papers&#x2F;pardefunc.pdf&quot;&gt;The best multicore-parallelization refactoring you&#x27;ve never heard of&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ps-tuebingen-courses.github.io&#x2F;pl1-lecture-notes&#x2F;19-shift-reset&#x2F;shift-reset.html&quot;&gt;More stuff on Delimited Continuations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;okmij.org&#x2F;ftp&#x2F;continuations&#x2F;#tutorial&quot;&gt;Continuation and Delimited Control&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;lambda-the-ultimate.org&#x2F;node&#x2F;4349&quot;&gt;Yield : Mainstream Delimited Continuations; &quot;yield&quot; from different languages compared and formalized&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;okmij.org&#x2F;ftp&#x2F;&quot;&gt;Too many cool topics in this site(See especially Types, Metaprogramming and Continuation related things)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lewissbaker.github.io&#x2F;&quot;&gt;Way too much information about C++ coroutines&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;mcyoung.xyz&#x2F;posts.html&quot;&gt;mcyoung&#x27;s blog(very nice systems and rust related posts)&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;mcyoung.xyz&#x2F;syllabus?s=08&quot;&gt;some readings&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;melodiessim.netlify.app&#x2F;notes&#x2F;&quot;&gt;MeloSpace notes(has distsys paper summaries and some more cool things in blogs)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.bartoszsypytkowski.com&#x2F;wasm-replayable-functions&#x2F;?s=08&quot;&gt;WebAssembly and replayable functions&lt;&#x2F;a&gt;, other blogs by the author are also cool&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kipp.ly&#x2F;system-design-interviews&#x2F;&quot;&gt;System Design Interviews Overview&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kipp.ly&#x2F;past-webdev&#x2F;?s=08&quot;&gt;Ideas for Programmers Looking Beyond Web Development&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kipp.ly&#x2F;&quot;&gt;Good blogs by Kipply&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;briancallahan.net&#x2F;blog&#x2F;archive.html&quot;&gt;Brian Callahan&#x27;s blog(Lots of Compiler stuff)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.iamtk.co&#x2F;?s=08&quot;&gt;Lots of articles&#x2F;resources on Typescript compiler , compilers, books, web performance stuff&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;veera.app&#x2F;&quot;&gt;Type checker + Compiler Stuff&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;martin.kleppmann.com&#x2F;&quot;&gt;Martin Kleppman blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;aphyr.com&#x2F;posts&quot;&gt;Aphyr blogs, lots of distsys stuff&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;aphyr.com&#x2F;tags&#x2F;jepsen&quot;&gt;Jepsen tagged posts on aphyr&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;apple.github.io&#x2F;foundationdb&#x2F;contents.html&quot;&gt;FoundationDB blogs(lottt of distsys + db content, I need to read this someday)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.tedinski.com&#x2F;archive&#x2F;&quot;&gt;Ted Kaminski blog(matklad recommends to read all of this in chronological order)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
[Justin Jaffray blogs,lots of DB stuff]https:&#x2F;&#x2F;justinjaffray.com&#x2F;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;stefan-marr.de&#x2F;archive&quot;&gt;Stefan Marr blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;&quot;&gt;Jamie Brandon&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;log&quot;&gt;logs?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.redvice.org&quot;&gt;Red Vice Blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;sillycross.github.io&#x2F;archives&#x2F;?s=08&quot;&gt;SillyCross blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;compiler.club&#x2F;&quot;&gt;Colin James blogs, compiling lambda calculus one looks nice&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cohost.org&#x2F;prophet&#x2F;post&#x2F;4032868-some-of-the-things-i?s=08&quot;&gt;Some nice PL related blogs by @prophet cohost&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;transactional.blog&#x2F;&quot;&gt;Alex Miller Blog(distsys + db)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;forums.swift.org&#x2F;t&#x2F;pitch-dependent-types-universes-stage-1-of-proof-driven-development&#x2F;63754&quot;&gt;Adding Dependent Types to Swift(Forum Discussion for the Pitch)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;misc-blogs&quot;&gt;Misc blogs&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;www.catb.org&#x2F;~esr&#x2F;faqs&#x2F;hacker-howto.html?s=08&quot;&gt;How to become a hacker&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;must-listen-podcasts&quot;&gt;Must Listen Podcasts&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;signalsandthreads.com&#x2F;&quot;&gt;Signals and Threads&lt;&#x2F;a&gt; Some episodes that I highly recommend are:
&lt;ul&gt;
&lt;li&gt;Memory management with Stephen Dolan&lt;&#x2F;li&gt;
&lt;li&gt;What is an Operating System? with Anil Madhavapeddy&lt;&#x2F;li&gt;
&lt;li&gt;Language Design with Leo White&lt;&#x2F;li&gt;
&lt;li&gt;Compiler Optimization with Greta Yorsh&lt;&#x2F;li&gt;
&lt;li&gt;Build Systems with Andrey Mokhov&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;typetheoryforall.com&#x2F;&quot;&gt;Type Theory Forall&lt;&#x2F;a&gt; Some episodes that I highly recommend are(I haven&#x27;t listened to a lot of them):
&lt;ul&gt;
&lt;li&gt;#13 C&#x2F;C++, Emacs, Haskell, and Coq. The Journey&lt;&#x2F;li&gt;
&lt;li&gt;#23 What is the SIGPLAN?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;corecursive.com&#x2F;&quot;&gt;Corecursive podcast&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@theforkjoin&quot;&gt;TheForkJoin podcast&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;papers-reading-list&quot;&gt;Papers Reading List&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;3453483.3454039&quot;&gt;Retrofitting Effect Handlers onto OCaml&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2004.11663&quot;&gt;Retrofitting Parallelism onto OCaml&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;kcsrk.info&#x2F;papers&#x2F;pldi18-memory.pdf&quot;&gt;Bounding Data Races in space and time&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.cl.cam.ac.uk&#x2F;~jdy22&#x2F;papers&#x2F;modular-implicits.pdf&quot;&gt;Modular Implicits&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;uploads&#x2F;prod&#x2F;2018&#x2F;03&#x2F;build-systems.pdf&quot;&gt;Build systems a la carte&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.hboehm.info&#x2F;gc&#x2F;&quot;&gt;Boehm GC(papers and links in the site)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;pdf&#x2F;10.1145&#x2F;3519939.3523443&quot;&gt;A flexible type system for fearless concurrency&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;2926697.2926707&quot;&gt;Rust as a Language for High Performance GC Implementation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dspace.mit.edu&#x2F;handle&#x2F;1721.1&#x2F;73900&quot;&gt;On the nature of progress&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1705.05937.pdf&quot;&gt;Engineering Record And Replay For Deployability: Extended Technical Report&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1004.3808&quot;&gt;AUTOMATED VERIFICATION OF PRACTICAL GARBAGE COLLECTORS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;mimalloc&quot;&gt;mimalloc(refer to the repo as well as the paper)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33237002&quot;&gt;Compiling Swift Generics(HN link which has pdf link with nice discussion section)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;leanprover.github.io&#x2F;talks&#x2F;IFL2019.pdf&quot;&gt;Counting immutable beans&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1OfcnkoTCxWUaTGc570oV-D8fWx30Lvtx&#x2F;view?usp=sharing&quot;&gt;Adaptive Functional Programming&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;19UcnvDS1_6opK5qZcceuDjHTLmG_9Ovf&#x2F;view?usp=sharing&quot;&gt;Self-Adjusting Computation(Umut Acar&#x27;s thesis)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;130-sCY1YPzo4j3YAJ7EL9-MflK0l8RmJ&#x2F;view?usp=sharing&quot;&gt;Efficient Parallel Self-Adjusting Computation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;pdf&#x2F;10.1145&#x2F;3519939.3523730&quot;&gt;Making Concurrent Reference Counting as Fast as Manual Safe Memory Reclamation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;507669.507641&quot;&gt;Optimizing pattern matching&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;k-lifo.com&#x2F;mphil.pdf&quot;&gt;Bartosz Modelski&#x27;s master&#x27;s thesis&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.nott.ac.uk&#x2F;~pszgmh&#x2F;monparsing.pdf&quot;&gt;Monadic Parser Combinator (Graham Hutton)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fogus&#x2F;papers-i-love&quot;&gt;Some papers list,categorized as well&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frankmcsherry&#x2F;blog&quot;&gt;Frank McSherry&#x27;s blog(this guy super cool)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dhil&#x2F;phd-dissertation&quot;&gt;Daniel Hillerström&#x27;s phd dissertation(effect handlers)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yallop&#x2F;effects-bibliography&quot;&gt;effects-bibliography(lots of papers)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;dancres.github.io&#x2F;Pages&#x2F;&quot;&gt;Distributed Systems Papers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;courses.cs.washington.edu&#x2F;courses&#x2F;cse590p&#x2F;05au&#x2F;p50-bacon.pdf&quot;&gt;A Unified Theory of Garbage Collection&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;peps.python.org&#x2F;pep-0703&#x2F;&quot;&gt;Making the Global Interpreter Lock optional in CPython(covers quite a lot of python internals)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cr.openjdk.org&#x2F;~rpressler&#x2F;loom&#x2F;Loom-Proposal.html&quot;&gt;Project Loom proposal Java&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;dsrg.pdos.csail.mit.edu&#x2F;papers&#x2F;&quot;&gt;PDOS distributed systems readings&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;c9x.me&#x2F;compile&#x2F;bib&#x2F;braun13cc.pdf&quot;&gt;Simple and Efficient Construction of SSA Form&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;pl.cs.cornell.edu&#x2F;pldg&#x2F;&quot;&gt;Cornell Programming Languages Discussion Group(nice papers list)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;pdf&#x2F;10.1145&#x2F;209937.209958&quot;&gt;Cilk: An Efficient Multithreaded Runtime System (Rayon is based on this)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;erikgrinaker&#x2F;readings?s=08&quot;&gt;Some papers categorized, list seems okay, might check sometimes once these other things are done lol&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imteekay&#x2F;programming-language-research&quot;&gt;Programming Language Research, papers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kartiknagar.github.io&#x2F;courses&#x2F;rtc-jul2023&#x2F;paper_list&#x2F;&quot;&gt;Recent Topics in Compilers - Papers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;misc-posts-from-different-forums&quot;&gt;Misc Posts from Different Forums&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;haskell&#x2F;comments&#x2F;gok70o&#x2F;comment&#x2F;frj9hty&#x2F;&quot;&gt;Reddit - Andras Kovac&#x27;s comment, regarding Rust,GC and Haskell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;forums.swift.org&#x2F;t&#x2F;swift-type-checking-is-undecidable&#x2F;39024&quot;&gt;Swift Discuss -  Swift type checking is undecidable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>C++</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/cpp/"/>
        <id>https://dipeshkaphle.github.io/Learning/cpp/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/cpp/">&lt;h1 id=&quot;c&quot;&gt;C++&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;basics&quot;&gt;Basics&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLHTh1InhhwT5o3GwbFYy3sR7HDNRA353e&quot;&gt;CppCon 2020 Back to Basics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLHTh1InhhwT4CTnVjJqnAKeMfGzOWjsRa&quot;&gt;CppCon 2019 Back to Basics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLB_QFf1fzn9O_22Q-P4xNajxIlbY3aCQk&quot;&gt;C++ with James McNeils and Kate Gregory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cmu-db&#x2F;15445-bootcamp&quot;&gt;Modern C++ CMU-DB bootcamp(The topics covered seem super nice)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;cmake&quot;&gt;CMake&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cliutils.gitlab.io&#x2F;modern-cmake&#x2F;&quot;&gt;An Introduction to Modern CMake&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;hsf-training.github.io&#x2F;hsf-training-cmake-webpage&#x2F;&quot;&gt;More Modern CMake&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cpp-best-practices&#x2F;cpp_starter_project&quot;&gt;Cpp starter project&lt;&#x2F;a&gt;
with &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=YbgH7yat-Jo&quot;&gt;video&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;c-tips&quot;&gt;C++ Tips&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;herbsutter.com&#x2F;gotw&#x2F;&quot;&gt;Sutter&#x27;s Mill&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;abseil.io&#x2F;tips&#x2F;&quot;&gt;Abseil&#x27;s C++ Tips&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;books&quot;&gt;Books&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Effective Modern C++&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
David Vandevoorde, Nicolai M. Josuttis, Douglas Gregor - C++ Templates
The Complete Guide (2017)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
A tour of C++&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.learncpp.com&#x2F;&quot;&gt;learncpp.com&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;articles&quot;&gt;Articles&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;groundswellaudio.github.io&#x2F;posts&#x2F;cpp_lambda_tuple&#x2F;&quot;&gt;Lambda Tuple&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lesleylai.info&#x2F;en&#x2F;delve_into_cpp&#x2F;&quot;&gt;Resources that help you to delve into C++&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33590308&quot;&gt;Rust and C++ Interoperability&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34898130&quot;&gt;C++ Coroutines&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;davekilian.com&#x2F;acquire-release.html&quot;&gt;Making Sense of Acquire Release Semantics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.trailofbits.com&#x2F;&quot;&gt;Some clang related blogs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.open-std.org&#x2F;JTC1&#x2F;SC22&#x2F;WG21&#x2F;docs&#x2F;papers&#x2F;2018&#x2F;p1364r0.pdf&quot;&gt;Fibers under the magnifying glass&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lewissbaker.github.io&#x2F;&quot;&gt;Way too much information about C++ coroutines&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.scs.stanford.edu&#x2F;~dm&#x2F;blog&#x2F;c++-coroutines.html&quot;&gt;C++ coroutines&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MattPD&#x2F;cpplinks&quot;&gt;Categorized C++ links&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;messed-up-templates-stuff&quot;&gt;Messed up templates stuff&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tdp2110&#x2F;TmpLisp&quot;&gt;TMP Lisp&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;podcasts-series&quot;&gt;Podcasts&#x2F;Series&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cppcast.com&#x2F;&quot;&gt;CppCast&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLs3KjaCtOwSZ2tbuV1hx8Xz-rFZTan2J1&quot;&gt;Jason Turner&#x27;s cpp weekly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rsms&#x2F;llvmbox&quot;&gt;LLVM Box,self contained fully static llvm tools(Something similar to zig)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;zig.news&#x2F;kristoff&#x2F;compile-a-c-c-project-with-zig-368j&quot;&gt;Using Zig as C&#x2F;C++ Compiler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;c-advanced-topics&quot;&gt;C++ advanced topics&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;adl&quot;&gt;ADL(Argument Dependent Lookup)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;crtphttps:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;crtp&quot;&gt;CRTP(Curiously recurring template patterns)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;pimpl&quot;&gt;PIMPL&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;raii&quot;&gt;RAII&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;rule_of_three&quot;&gt;Rule of five&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;class_template_argument_deduction&quot;&gt;CTAD(Class Template Argument Deduction)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;template_specialization&quot;&gt;Full specialization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;partial_specialization&quot;&gt;Partial specialization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;constraints&quot;&gt;Concepts&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;requires&quot;&gt;Requires&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;sfinae&quot;&gt;SFINAE&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;exceptions&quot;&gt;Exceptions(See TOC as well)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;memory_model&quot;&gt;Memory Model&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;atomic&#x2F;memory_order&quot;&gt;Memory Ordering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;storage_duration&quot;&gt;Storage Duraton and Linkage&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;inline&quot;&gt;Inline&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;modules&quot;&gt;Modules(pretty much useless till now)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;cv&quot;&gt;Const&#x2F;volatile&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;move_constructor&quot;&gt;Move constructor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;move_assignment&quot;&gt;Move assignment&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;copy_constructor&quot;&gt;Copy constructor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;copy_assignment&quot;&gt;Copy assingnment&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;cpp&#x2F;cpp&#x2F;explicitly-defaulted-and-deleted-functions?view=msvc-170&quot;&gt;Explicitly Defaulted and Deleted functions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;value_category&quot;&gt;Value Categories&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;initialization&quot;&gt;Initialization(see TOC as well)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;lambda&quot;&gt;Lambdas&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;language&#x2F;coroutines&quot;&gt;Coroutines(still sort of unusable)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;c&#x2F;language&#x2F;object&quot;&gt;Objects and Alignment&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cplusplus.com&#x2F;doc&#x2F;tutorial&#x2F;typecasting&#x2F;&quot;&gt;Casting mechanism in C++&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;numeric&#x2F;bit_cast&quot;&gt;bit_cast&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;53401654&#x2F;c20-bit-cast-vs-reinterpret-cast&quot;&gt;reintepret_cast v&#x2F;s bit_cast&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Placement_syntax&quot;&gt;Placement new&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Strict aliasing &lt;a href=&quot;https:&#x2F;&#x2F;cellperformance.beyond3d.com&#x2F;articles&#x2F;2006&#x2F;06&#x2F;understanding-strict-aliasing.html&quot;&gt;1&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;98650&#x2F;what-is-the-strict-aliasing-rule&quot;&gt;2&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;shafik&#x2F;848ae25ee209f698763cffee272a58f8&quot;&gt;3&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;utility&#x2F;launder&quot;&gt;std::launder&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;en.cppreference.com&#x2F;w&#x2F;cpp&#x2F;memory&#x2F;start_lifetime_as&quot;&gt;std::start_lifetime_as&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;blog.llvm.org&#x2F;2011&#x2F;05&#x2F;what-every-c-programmer-should-know.html&quot;&gt;What Every C Programmer should know about Undefined Behaviour(3 Part series by Chris Lattner)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Haskell</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/haskell/"/>
        <id>https://dipeshkaphle.github.io/Learning/haskell/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/haskell/">&lt;h1 id=&quot;haskell&quot;&gt;Haskell&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;wiki.haskell.org&#x2F;Research_papers&#x2F;Type_systems&quot;&gt;Type Systems re Haskell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;videos&quot;&gt;Videos&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3&quot;&gt;Functional Programming in Haskell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLF1Z-APd9zK5uFc8FKr_di9bfsYv8-lbc&quot;&gt;Advanced Functional Programming in Haskell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLe7Ei6viL6jGp1Rfu0dil1JH1SHk9bgDV&quot;&gt;Haskell For Imperative Programmers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;problems&quot;&gt;Problems&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;wiki.haskell.org&#x2F;H-99:_Ninety-Nine_Haskell_Problems&quot;&gt;99 Problems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;monads&quot;&gt;Monads&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;wiki.haskell.org&#x2F;All_About_Monads&quot;&gt;All About Monads&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;mark.pdf?from=https%3A%2F%2Fresearch.microsoft.com%2F%7Esimonpj%2Fpapers%2Fmarktoberdorf%2Fmark.pdf&quot;&gt;Tackling the Awkward Squad: monadic input&#x2F;output, concurrency, exceptions, and foreign-language calls in Haskell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;internals&quot;&gt;Internals&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;live&#x2F;0jI-AlWEwYI?feature=share&quot;&gt;Alexis King - “Effects for Less” @ ZuriHac 2020(content is just madd)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ghc-proposals&#x2F;ghc-proposals&#x2F;pull&#x2F;313&quot;&gt;GHC proposal link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;ghc&#x2F;ghc&#x2F;-&#x2F;wikis&#x2F;reading-list&quot;&gt;GHC Reading List&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;fdyh3YQ-ZWI&quot;&gt;@lexi_lambda: The GHC optimization pipeline&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;m_HX4hyOuog&quot;&gt;@lexi_lambda: GHC Simplifier basics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLyzwHTVJlRc9QcF_tdqc9RdxJED8Mvyh1&quot;&gt;@rae&#x27;s Thoughts on Haskell(playlist with some advanced topics)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.stephendiehl.com&#x2F;posts&#x2F;ghc_01.html&quot;&gt;GHC internals by Stephen Diehl(series of posts)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>HN Links</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/hnlinks/"/>
        <id>https://dipeshkaphle.github.io/Learning/hnlinks/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/hnlinks/">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rafalcieslak.wordpress.com&#x2F;2013&#x2F;04&#x2F;02&#x2F;dynamic-linker-tricks-using-ld_preload-to-cheat-inject-features-and-investigate-programs&#x2F;&quot;&gt;Using LD_PRELOAD to cheat, inject features and investigate programs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37439125&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dancrossnyc&#x2F;rxv64&quot;&gt;The rxv64 Operating System: MIT&#x27;s xv6, in Rust, for SMP x86_64 machines&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37439391&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;cm.bell-labs.co&#x2F;who&#x2F;dmr&#x2F;chist.html&quot;&gt;The Development of the C Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37442810&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;howqueryengineswork.com&#x2F;&quot;&gt;How Query Engines Work&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37415494&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bitbashing.io&#x2F;async-rust.html&quot;&gt;Maybe Rust isn’t a good tool for massively concurrent, userspace software&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37435515&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leanprover&#x2F;lean4&#x2F;releases&#x2F;tag&#x2F;v4.0.0&quot;&gt;Lean 4.0&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37429938&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;richardstartin.github.io&#x2F;posts&#x2F;wallclock-profiler&quot;&gt;Understanding Request Latency with Profiling&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37415499&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leandromoreira&#x2F;linux-network-performance-parameters&quot;&gt;Linux Network Performance Parameters Explained&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37403799&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.theregister.com&#x2F;2023&#x2F;09&#x2F;01&#x2F;web_assembly_wasm_column&#x2F;&quot;&gt;WASM: Big deal or little deal?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37385197&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raft.github.io&quot;&gt;The Raft Consensus Algorithm&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37369826&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xeiaso.net&#x2F;talks&#x2F;unix-philosophy-logical-extreme-wasm&quot;&gt;Reaching the Unix philosophy&#x27;s logical extreme with WebAssembly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37284472&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZI198eFghJk&quot;&gt;Modernizing compiler design for Carbon&#x27;s toolchain [video]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37275526&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xeiaso.net&#x2F;blog&#x2F;serde-precompiled-stupid&quot;&gt;This isn’t the way to speed up Rust compile times&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37272445&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nnethercote.github.io&#x2F;2023&#x2F;08&#x2F;25&#x2F;how-to-speed-up-the-rust-compiler-in-august-2023.html&quot;&gt;How to speed up the Rust compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37256889&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;writing&#x2F;implementing-interactive-languages&#x2F;&quot;&gt;Implementing Interactive Languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37256479&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;norvig&#x2F;pytudes&quot;&gt;Pytudes&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37241625&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;davidgomes.com&#x2F;the-broad-set-of-computer-science-problems-faced-at-cloud-database-companies&#x2F;&quot;&gt;The broad set of computer science problems faced at cloud database companies&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37211642&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;j2kun&#x2F;mlir-tutorial&quot;&gt;MLIR For Beginners: A series of articles on the MLIR framework&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37154395&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;research.swtch.com&#x2F;ub&quot;&gt;C and C++ prioritize performance over correctness&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37178009&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;glaubercosta-11125.medium.com&#x2F;career-advice-for-young-system-programmers-c7443f2d3edf&quot;&gt;Career advice for young system programmers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37172815&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;08&#x2F;17&#x2F;typescript-is-surprisingly-ok-for-compilers.html&quot;&gt;TypeScript Is Surprisingly OK for Compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37171801&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.regehr.org&#x2F;archives&#x2F;213&quot;&gt;A Guide to Undefined Behavior in C and C++ (2010)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37165042&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.efinancialcareers.com&#x2F;news&#x2F;2022&#x2F;11&#x2F;why-is-there-a-drought-in-the-talent-pool-for-c-developers&quot;&gt;The pool of talented C++ developers is running dry&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33436268&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.efinancialcareers.com&#x2F;news&#x2F;finance&#x2F;why-is-there-a-drought-in-the-talent-pool-for-c-developers&quot;&gt;The pool of talented C++ developers is running dry&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34643530&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;langdev.stackexchange.com&#x2F;questions&#x2F;2692&#x2F;how-should-i-read-type-system-notation&quot;&gt;How should I read type system notation?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37138807&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;claytonwramsey.github.io&#x2F;2023&#x2F;08&#x2F;14&#x2F;dumpster.html&quot;&gt;I built a garbage collector for a language that doesn’t need one&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37120967&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reductor.dev&#x2F;cpp&#x2F;2023&#x2F;08&#x2F;10&#x2F;the-downsides-of-coroutines.html&quot;&gt;The Downsides of C++ Coroutines&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37085618&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;seiya.me&#x2F;blog&#x2F;reading-linux-v0.01&quot;&gt;Exploring the Internals of Linux v0.01&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37101588&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hirrolot.github.io&#x2F;posts&#x2F;why-static-languages-suffer-from-complexity.html&quot;&gt;Why Static Languages Suffer from Complexity (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37063695&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hackclub&#x2F;putting-the-you-in-cpu&quot;&gt;I&#x27;m 17 and wrote this guide on how CPUs run programs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37062422&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.adriancooney.ie&#x2F;blog&#x2F;web-scraping-via-javascript-heap-snapshots&quot;&gt;Web Scraping via JavaScript Runtime Heap Snapshots (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37047746&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;08&#x2F;06&#x2F;fantastic-learning-resources.html&quot;&gt;Fantastic Learning Resources&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37034994&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;muhammadraza.me&#x2F;2023&#x2F;vim-onliners&#x2F;&quot;&gt;My favorite Vim oneliners for text manipulation&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37002420&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;emacsredux.com&#x2F;blog&#x2F;2023&#x2F;07&#x2F;30&#x2F;emacs-29-1-released&#x2F;&quot;&gt;Emacs 29.1&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36929514&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thenumb.at&#x2F;Functions-are-Vectors&#x2F;&quot;&gt;Functions are vectors&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36921446&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tigerbeetle.com&#x2F;blog&#x2F;2023-07-26-copy-hunting&#x2F;&quot;&gt;Memory Copy Hunting&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36876396&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-analyzer.github.io&#x2F;&#x2F;blog&#x2F;2023&#x2F;07&#x2F;24&#x2F;durable-incrementality.html&quot;&gt;Durable Incrementality&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36853128&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lock.cmpxchg8b.com&#x2F;zenbleed.html&quot;&gt;Zenbleed&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36848680&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;type-systems-memory-safety&quot;&gt;Type Systems for Memory Safety&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36834973&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cpu.land&#x2F;&quot;&gt;Putting the “You” in CPU&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36823605&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36802579&quot;&gt;Ask HN: Is SICP&#x2F;HtDP still worth reading in 2023? Any alternatives?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36802579&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.val-lang.dev&#x2F;&quot;&gt;Val, a high-level systems programming language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36778566&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;treeherder.mozilla.org&#x2F;perfherder&#x2F;graphs?timerange=31536000&amp;amp;series=mozilla-central,3735773,1,13&amp;amp;series=mozilla-central,3412459,1,13&quot;&gt;Firefox has surpassed Chrome on Speedometer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36770883&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;research.swtch.com&#x2F;coro&quot;&gt;Coroutines for Go&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36762682&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ahgamut.github.io&#x2F;2023&#x2F;07&#x2F;13&#x2F;patching-gcc-cosmo&#x2F;&quot;&gt;Patching GCC to build Actually Portable Executables&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36714967&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36697191&quot;&gt;Ask HN: I am interested in reading about techniques HFT firms use&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36697191&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nnethercote.github.io&#x2F;2023&#x2F;07&#x2F;11&#x2F;back-end-parallelism-in-the-rust-compiler.html&quot;&gt;Back-end parallelism in the Rust compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36678457&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;forum.ulisp.com&#x2F;t&#x2F;an-arm-assembler-written-in-lisp&#x2F;1237&quot;&gt;An ARM Assembler Written in Lisp&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36646277&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discuss.python.org&#x2F;t&#x2F;a-fast-free-threading-python&#x2F;27903&#x2F;99&quot;&gt;If PEP 703 is accepted, Meta can commit three engineer-years to nogil CPython&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36643670&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xeiaso.net&#x2F;blog&#x2F;sleeping-the-technical-interview&quot;&gt;Sleeping through the technical interview (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36635489&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;owen.cafe&#x2F;posts&#x2F;six-times-faster-than-c&#x2F;&quot;&gt;{n} times faster than C&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36618344&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;llanga&#x2F;status&#x2F;1676846870520291329&quot;&gt;Backend of Meta Threads is built with Python 3.10&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36612835&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.burntsushi.net&#x2F;regex-internals&#x2F;&quot;&gt;Regex Engine Internals as a Library&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36600263&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thunderseethe.dev&#x2F;posts&#x2F;type-inference&#x2F;&quot;&gt;Designing a Language Without a Parser&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36591079&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elixir-lang.org&#x2F;blog&#x2F;2023&#x2F;06&#x2F;22&#x2F;type-system-updates-research-dev&#x2F;&quot;&gt;Type system updates: moving from research into development&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36591313&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;cliffle.com&#x2F;blog&#x2F;async-inversion&#x2F;&quot;&gt;How to think about &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36570321&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36575081&quot;&gt;Ask HN: Could you share your personal blog here?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36575081&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;justinjaffray.com&#x2F;joins-13-ways&#x2F;?a=b&quot;&gt;Joins 13 Ways&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36575784&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ziglang&#x2F;zig&#x2F;issues&#x2F;16270&quot;&gt;File for divorce from LLVM&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36529456&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.deusinmachina.net&#x2F;p&#x2F;racket-the-scheme-you-should-try&quot;&gt;Racket: Lisp for the modern day&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36519359&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;whileydave.com&#x2F;2023&#x2F;06&#x2F;27&#x2F;programming-languages-going-above-and-beyond&#x2F;&quot;&gt;Programming languages going above and beyond&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36519497&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;uploads&#x2F;prod&#x2F;2023&#x2F;05&#x2F;fbip.pdf&quot;&gt;FP2: Fully In-Place Functional Programming [pdf]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36471591&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martinfowler.com&#x2F;articles&#x2F;patterns-of-distributed-systems&#x2F;&quot;&gt;Patterns of Distributed Systems (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36495335&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rigtorp.se&#x2F;ringbuffer&#x2F;&quot;&gt;Optimizing a ring buffer for throughput (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36489288&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;1904.06750&quot;&gt;Theory to systems: A grounded approach to programming language education (2019)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36467663&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;verdagon.dev&#x2F;blog&#x2F;vale-memory-safe-cpp&quot;&gt;Making C++ safe without borrow checking, reference counting, or tracing GC&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36448759&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;typed-python&#x2F;&quot;&gt;Compiling Typed Python&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36408248&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mtlynch.io&#x2F;notes&#x2F;nix-first-impressions&#x2F;&quot;&gt;My First Impressions of Nix&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36387874&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NationalSecurityAgency&#x2F;ghidra&#x2F;tree&#x2F;master&#x2F;GhidraDocs&#x2F;GhidraClass&#x2F;Debugger&quot;&gt;Debugger Ghidra Class&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36390357&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;enccs.github.io&#x2F;gpu-programming&#x2F;&quot;&gt;GPU Programming: When, Why and How?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36385938&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;adamwalker.github.io&#x2F;Building-FPGA-KVS&#x2F;&quot;&gt;Building a Networked Key-Value-Store on an FPGA&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36387477&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pkolaczk.github.io&#x2F;server-slower-than-a-laptop&#x2F;&quot;&gt;How a Single Line of Code Made a 24-Core Server Slower Than a Laptop (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36376669&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;verdagon.dev&#x2F;blog&#x2F;single-ownership-without-borrow-checking-rc-gc&quot;&gt;Memory Safety Without Borrow Checking, Reference Counting, or Garbage Collection&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36351415&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mirrors.edge.kernel.org&#x2F;pub&#x2F;linux&#x2F;kernel&#x2F;people&#x2F;paulmck&#x2F;perfbook&#x2F;perfbook.html&quot;&gt;Is parallel programming hard, and, if so, what can you do about it?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36318280&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ralfj.de&#x2F;blog&#x2F;2023&#x2F;06&#x2F;02&#x2F;tree-borrows.html&quot;&gt;From Stacks to Trees: A new aliasing model for Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36268671&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20210205014443&#x2F;https:&#x2F;&#x2F;meanderful.blogspot.com&#x2F;2018&#x2F;01&#x2F;the-accidental-hft-firm.html&quot;&gt;The Accidental HFT Firm&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36269041&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;norasandler.com&#x2F;2017&#x2F;11&#x2F;29&#x2F;Write-a-Compiler.html&quot;&gt;Writing a C Compiler (2017)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36248071&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;counterexamples.org&#x2F;intro.html&quot;&gt;Counterexamples in Type Systems: programs that crash, segfault or explode (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36213704&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graydon2.dreamwidth.org&#x2F;307291.html&quot;&gt;The Rust I wanted had no future&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36193326&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;why-lisp-syntax-works&quot;&gt;Why Lisp Syntax Works&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36194703&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;13CwgSL4yawxuYg3iNlM-4ZPCB8RgJya6b8H_E2F-Aek&#x2F;edit?usp=sharing&quot;&gt;V8 Maglev: compiler design doc&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36184428&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zibada.guru&#x2F;gcj&#x2F;&quot;&gt;Show HN: Google Code Jam Archive&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36174815&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ratfactor.com&#x2F;zig&#x2F;hard&quot;&gt;Zig is hard but worth it&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36149462&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;sketch-post-orm&quot;&gt;Sketch of a Post-ORM&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36164584&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gaultier.github.io&#x2F;blog&#x2F;x11_x64.html&quot;&gt;Learn x86-64 assembly by writing a GUI from scratch&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36153237&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elliottslaughter.com&#x2F;2022&#x2F;12&#x2F;lisp&quot;&gt;What are the enduring innovations of Lisp? (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36154531&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codegolf.stackexchange.com&#x2F;questions&#x2F;215216&#x2F;high-throughput-fizz-buzz&#x2F;236630#236630&quot;&gt;55 GiB&#x2F;s FizzBuzz&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=29031488&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cvw.cac.cornell.edu&#x2F;vector&#x2F;default&quot;&gt;Vectorization: Introduction&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36156444&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;haskellfoundation&#x2F;hs-opt-handbook.github.io&quot;&gt;Haskell Optimization Handbook&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36093120&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zealdocs.org&#x2F;&quot;&gt;Zeal is an offline documentation browser for software developers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36135955&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steve-yegge.medium.com&#x2F;a-good-day-with-jeff-d28e05ed2524&quot;&gt;A good day with Jeff Bezos&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36101784&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.math.cmu.edu&#x2F;~jmackey&#x2F;151_128&#x2F;bws_book.pdf&quot;&gt;Everything you always wanted to know about mathematics (2013) [pdf]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36069847&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;samwho.dev&#x2F;memory-allocation&#x2F;&quot;&gt;A highly intuitive visual guide on how memory allocation works, step by step&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36029087&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.engineersneedart.com&#x2F;blog&#x2F;samestop&#x2F;samestop.html&quot;&gt;Same Stop: Life after 26 years as a programmer for Apple&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36026662&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hal.science&#x2F;hal-04096390&#x2F;document&quot;&gt;Testing a Formally Verified Compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36018300&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pkolaczk.github.io&#x2F;memory-consumption-of-async&#x2F;&quot;&gt;How much memory do you need to run 1M concurrent tasks?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36024209&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nyxt.atlas.engineer&#x2F;&quot;&gt;Nyxt: The Hacker&#x27;s Browser&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36006423&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;loro-dev.notion.site&#x2F;crdt-richtext-Rust-implementation-of-Peritext-and-Fugue-c49ef2a411c0404196170ac8daf066c0&quot;&gt;CRDT-richtext: Rust implementation of Peritext and Fugue&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35988046&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tonsky.me&#x2F;blog&#x2F;humble-signals&#x2F;&quot;&gt;Managing State with Signals&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35973151&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;motherduck.com&#x2F;blog&#x2F;the-simple-joys-of-scaling-up&#x2F;&quot;&gt;The simple joys of scaling up&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35988984&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hpbn.co&#x2F;&quot;&gt;High Performance Browser Networking&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35937554&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.slideshare.net&#x2F;nikita_ppv&#x2F;a-whirlwind-tour-of-the-llvm-optimizerpdf&quot;&gt;A whirlwind tour of the LLVM optimizer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35893006&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.email&#x2F;hillelwayne&#x2F;archive&#x2F;problems-harder-than-np-complete&#x2F;&quot;&gt;Problems harder than NP-Complete&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35908477&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martin.kleppmann.com&#x2F;2016&#x2F;02&#x2F;08&#x2F;how-to-do-distributed-locking.html&quot;&gt;How to do distributed locking (2016)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35910201&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fly.io&#x2F;blog&#x2F;js-ecosystem-delightfully-wierd&#x2F;&quot;&gt;The JavaScript ecosystem is delightfully weird&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35900282&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dostoynikov.bearblog.dev&#x2F;fuck-being-productive&#x2F;&quot;&gt;Fuck Being Productive&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35899518&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jvns.ca&#x2F;blog&#x2F;2023&#x2F;05&#x2F;08&#x2F;new-talk-learning-dns-in-10-years&#x2F;&quot;&gt;Learning DNS in 10 Years&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35870654&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.email&#x2F;hillelwayne&#x2F;archive&#x2F;the-seven-specification-ur-languages&#x2F;&quot;&gt;The seven specification ur-languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35874575&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nyxt.atlas.engineer&#x2F;article&#x2F;why-lisp.org&quot;&gt;Why Lisp?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35852321&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RedisLabs&#x2F;redisraft&#x2F;blob&#x2F;master&#x2F;docs&#x2F;Introduction.md&quot;&gt;RedisRaft&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35847269&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;kconner&#x2F;cff08fe3e0bb857ea33b47d965b3e19f&quot;&gt;macOS Internals&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35847715&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.allthingsdistributed.com&#x2F;2023&#x2F;05&#x2F;monoliths-are-not-dinosaurs.html&quot;&gt;Monoliths are not dinosaurs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35834037&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fabiensanglard.net&#x2F;dc&#x2F;index.php&quot;&gt;Driving Compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35806237&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;observablehq.com&#x2F;@mbostock&#x2F;bank-failures&quot;&gt;Bank Failures Visualized&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35795975&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nullprogram.com&#x2F;blog&#x2F;2023&#x2F;04&#x2F;29&#x2F;&quot;&gt;My favorite C compiler flags during development&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35758898&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35729232&quot;&gt;Ask HN: Most interesting tech you built for just yourself?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35729232&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;probablydance.com&#x2F;2023&#x2F;04&#x2F;27&#x2F;beautiful-branchless-binary-search&#x2F;&quot;&gt;Beautiful branchless binary search&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35737862&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;osa1.net&#x2F;posts&#x2F;2023-04-24-ocaml-thoughts.html&quot;&gt;My Thoughts on OCaml&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35699697&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;artem.krylysov.com&#x2F;blog&#x2F;2023&#x2F;04&#x2F;19&#x2F;how-rocksdb-works&#x2F;&quot;&gt;How RocksDB Works&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35634673&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thaliaarchi.github.io&#x2F;coq-turing-typeclass&#x2F;&quot;&gt;Coq typeclass resolution is Turing-complete&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35591529&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;intuitiveexplanations.com&#x2F;tech&#x2F;kalyn&quot;&gt;Kalyn: A self-hosting compiler for x86-64&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35549692&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.routledge.com&#x2F;The-Garbage-Collection-Handbook-The-Art-of-Automatic-Memory-Management&#x2F;Jones-Hosking-Moss&#x2F;p&#x2F;book&#x2F;9781032218038&quot;&gt;The Garbage Collection Handbook, 2nd Edition&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35492307&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;maplant.com&#x2F;gc.html&quot;&gt;Writing a Simple Garbage Collector in C (2014)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35495886&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;justine.lol&#x2F;mmap&#x2F;&quot;&gt;Using mmap to make LLaMA load faster&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35455930&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;contextkeeper.io&#x2F;blog&#x2F;the-real-cost-of-an-interruption-and-context-switching&#x2F;&quot;&gt;Programmer interrupted: The cost of interruption and context switching (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35459333&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;WebKit&#x2F;WebKit&#x2F;blob&#x2F;main&#x2F;Source&#x2F;bmalloc&#x2F;libpas&#x2F;Documentation.md&quot;&gt;All About Libpas, Phil&#x27;s Super Fast Malloc&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31581727&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggerganov&#x2F;llama.cpp&#x2F;pull&#x2F;613&quot;&gt;Llama.cpp 30B runs with only 6GB of RAM now&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35393284&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35229045&quot;&gt;Ask HN: Where can I find a primer on how computers boot?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35229045&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;brianmckenna.org&#x2F;blog&#x2F;verse_types&quot;&gt;Type system of Fortnite&#x27;s Verse language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35363993&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.regehr.org&#x2F;archives&#x2F;169&quot;&gt;Why take a compiler course? (2010)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35285518&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;and-yet-it-understands&quot;&gt;And yet It Understands&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35312508&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sploitfun.wordpress.com&#x2F;2015&#x2F;02&#x2F;10&#x2F;understanding-glibc-malloc&#x2F;&quot;&gt;Understanding Glibc Malloc&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35285521&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;about.sourcegraph.com&#x2F;blog&#x2F;cheating-is-all-you-need&quot;&gt;Cheating is All You Need&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35273406&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.wingolog.org&#x2F;archives&#x2F;2023&#x2F;03&#x2F;20&#x2F;a-world-to-win-webassembly-for-the-rest-of-us&quot;&gt;A world to win: WebAssembly for the rest of us&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35236272&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35226887&quot;&gt;Ask HN: Why do many CS graduates lack foundational knowledge?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35226887&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35164819&quot;&gt;Ask HN: What has your personal website&#x2F;blog done for you?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35164819&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.rockthejvm.com&#x2F;ultimate-guide-to-java-virtual-threads&#x2F;&quot;&gt;Guide to Java Virtual Threads&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35147937&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;courses&#x2F;cs6120&#x2F;2020fa&#x2F;self-guided&#x2F;&quot;&gt;CS 6120: Advanced Compilers: The Self-Guided Online Course&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35130975&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lawrencecpaulson.github.io&#x2F;2023&#x2F;03&#x2F;08&#x2F;Fun_Semantics.html&quot;&gt;The semantics of a simple functional language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35106340&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;werat.dev&#x2F;blog&#x2F;what-a-good-debugger-can-do&#x2F;&quot;&gt;What a good debugger can do&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35092998&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.eriksvedang.com&#x2F;carp&quot;&gt;Carp lang: statically typed Lisp, no GC&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35092027&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zackoverflow.dev&#x2F;writing&#x2F;unsafe-rust-vs-zig&#x2F;&quot;&gt;When Zig is safer and faster than Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35058176&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ivmai&#x2F;bdwgc&quot;&gt;Boehm-Demers-Weiser Garbage Collector&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35023833&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LekKit&#x2F;RVVM&quot;&gt;RVVM – The RISC-V Virtual Machine&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35009545&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.talhoffman.com&#x2F;2021&#x2F;07&#x2F;18&#x2F;firecracker-internals&#x2F;&quot;&gt;Firecracker internals: Inside the technology powering AWS Lambda (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34964197&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;missing.csail.mit.edu&#x2F;&quot;&gt;The Missing Semester of Your CS Education&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34934216&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nigeltao.github.io&#x2F;blog&#x2F;2023&#x2F;cpp-coro-part-1-yield-return-prime-sieve.html&quot;&gt;C++ Coroutines&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34898130&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nullprogram.com&#x2F;blog&#x2F;2023&#x2F;02&#x2F;12&#x2F;&quot;&gt;Let&#x27;s write a setjmp&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34760828&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vlcn.io&#x2F;blog&#x2F;gentle-intro-to-crdts.html&quot;&gt;A Gentle Introduction to CRDTs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34746716&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;02&#x2F;10&#x2F;how-a-zig-ide-could-work.html&quot;&gt;How a Zig IDE Could Work&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34740937&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.theregister.com&#x2F;2023&#x2F;02&#x2F;07&#x2F;mozilla_google_apple_webkit&#x2F;&quot;&gt;Google and Mozilla are working on iOS browsers that aren&#x27;t based on WebKit&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34690788&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=OgRFOjVzvm0&quot;&gt;SICP: the end of an era (2021) [video]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34657535&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JustineTunney&#x2F;status&#x2F;1621415193296388096&quot;&gt;Blink virtual machine now supports running GUI programs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34638424&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34602318&quot;&gt;Ask HN: How do you test SQL?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34602318&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34591291&quot;&gt;Ask HN: What&#x27;s the best lecture series you&#x27;ve seen?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34591291&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;automerge.org&#x2F;blog&#x2F;automerge-2&#x2F;&quot;&gt;Automerge 2.0&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34586433&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;edita.vercel.app&#x2F;blog&#x2F;approach&#x2F;&quot;&gt;Over the past 21 months I’ve written a code editor from the ground up&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34577246&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fathy.fr&#x2F;carbonyl&quot;&gt;Forking Chrome to render in a terminal&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34547259&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gilslotd.com&#x2F;blog&#x2F;features_id_postgresql&quot;&gt;Features I&#x27;d Like in PostgreSQL&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34560332&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;01&#x2F;25&#x2F;next-rust-compiler.html&quot;&gt;Thoughts on what a next Rust compiler would do&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34537969&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;florian.noeding.com&#x2F;posts&#x2F;risc-v-toy-cpu&#x2F;cpu-from-scratch&#x2F;&quot;&gt;How a CPU works: Bare metal C on my RISC-V toy CPU&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34533752&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zero-to-nix.com&#x2F;&quot;&gt;Zero to Nix, an unofficial, opinionated, gentle introduction to Nix&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34490376&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;myme.no&#x2F;posts&#x2F;2023-01-22-git-commands-you-do-not-need.html&quot;&gt;Git commands you probably do not need&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34487201&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;seclists.org&#x2F;oss-sec&#x2F;2023&#x2F;q1&#x2F;42&quot;&gt;Sudoedit can edit arbitrary files&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34445602&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sqlite.org&#x2F;hctree&#x2F;doc&#x2F;hctree&#x2F;doc&#x2F;hctree&#x2F;index.html&quot;&gt;HC-tree is an experimental high-concurrency database back end for SQLite&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34434025&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thecomputersciencebook.com&#x2F;book&#x2F;&quot;&gt;The Computer Science Book (2020)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34336213&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.oilshell.org&#x2F;blog&#x2F;2023&#x2F;01&#x2F;garbage-collector.html&quot;&gt;Pictures of a Working Garbage Collector&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34350260&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thesephist.com&#x2F;posts&#x2F;lua&#x2F;&quot;&gt;Interesting things about the Lua interpreter (2020)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34213715&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;blogs.newardassociates.com&#x2F;blog&#x2F;2023&#x2F;you-want-modules-not-microservices.html&quot;&gt;Modules, not microservices&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34230641&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.learncpp.com&#x2F;&quot;&gt;LearnCPP: Website devoted to teaching you how to program in C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34229802&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gavinray97.github.io&#x2F;blog&#x2F;adding-invariant-to-cpp-design-by-contract&quot;&gt;Adding “invariant” clauses to C++ via GCC plugin to enable Design-by-Contract&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34211482&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34198463&quot;&gt;Ask HN: Why did stack-based CPUs lose out?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34198463&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wasmlabs.dev&#x2F;articles&#x2F;docker-without-containers&#x2F;&quot;&gt;WebAssembly: Docker Without Containers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34078532&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.uber.com&#x2F;blog&#x2F;devpod-improving-developer-productivity-at-uber&#x2F;&quot;&gt;Devpod: Remote development environment at Uber&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34044784&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;ocaml-5-0-0-is-out&#x2F;10974&quot;&gt;OCaml 5.0 Multicore is out&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34013767&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@octskyward&#x2F;modern-garbage-collection-911ef4f8bd8e#.674yqu7mr&quot;&gt;Modern garbage collection&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13218550&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;simon.peytonjones.org&#x2F;assets&#x2F;pdfs&#x2F;haskell-exchange-22.pdf&quot;&gt;Beyond Functional Programming: The Verse Programming Language [pdf]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33946933&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.yale.edu&#x2F;publications&#x2F;techreports&#x2F;tr1049.pdf&quot;&gt;Haskell, Ada, C++, Awk: An Experiment in Prototyping Productivity (1994) [pdf]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33936366&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sqlfordevs.com&#x2F;ebook&quot;&gt;Show HN: I wrote a free eBook about many lesser-known&#x2F;secret database tricks&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33833836&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thevaluable.dev&#x2F;vim-advanced&#x2F;&quot;&gt;A Vim Guide for Advanced Users&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33811705&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;beringresearch.github.io&#x2F;macpine&#x2F;lxd_macpine&#x2F;&quot;&gt;LXD containers on macOS at near-native speeds&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33762657&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.cloudflare.com&#x2F;cloudflare-servers-dont-own-ips-anymore&#x2F;&quot;&gt;Cloudflare servers don&#x27;t own IPs anymore so how do they connect to the internet?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33742563&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developers.facebook.com&#x2F;blog&#x2F;post&#x2F;2022&#x2F;11&#x2F;22&#x2F;hermit-deterministic-linux-testing&#x2F;&quot;&gt;Deterministic Linux for controlled testing and software bug-finding&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33708867&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sillycross.github.io&#x2F;2022&#x2F;11&#x2F;22&#x2F;2022-11-22&#x2F;&quot;&gt;Building the fastest Lua interpreter automatically&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33711583&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dougallj.wordpress.com&#x2F;2022&#x2F;11&#x2F;09&#x2F;why-is-rosetta-2-fast&#x2F;&quot;&gt;Why is Rosetta 2 fast?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33533132&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;slint-ui.com&#x2F;blog&#x2F;rust-and-cpp.html&quot;&gt;Rust and C++ Interoperability&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33590308&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ynvm8a&#x2F;could_someone_explain_the_gats_like_i_was_5&#x2F;&quot;&gt;Rust: “Explain GATs Like I&#x27;m 5 Years Old”&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33504650&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osandov&#x2F;drgn&quot;&gt;drgn: A programmable C debugger, scriptable from Python&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33486962&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.acolyer.org&#x2F;2016&#x2F;04&#x2F;26&#x2F;the-linux-scheduler-a-decade-of-wasted-cores&#x2F;&quot;&gt;The Linux scheduler: A decade of wasted cores (2016)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33462345&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tailscale.com&#x2F;blog&#x2F;go-linker&#x2F;&quot;&gt;Linker, can you spare a meg? (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33388978&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;macoy.me&#x2F;blog&#x2F;programming&#x2F;LinkerLoaderIntro&quot;&gt;Bringing a dynamic environment to C: My linker project&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33368991&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;darkcoding.net&#x2F;software&#x2F;linux-what-can-you-epoll&#x2F;&quot;&gt;Linux: What Can You Epoll?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33299650&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kernel.dk&#x2F;io_uring.pdf&quot;&gt;Efficient IO in Linux with io_uring [pdf] (2019)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33221063&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;phiresky.github.io&#x2F;blog&#x2F;2021&#x2F;hosting-sqlite-databases-on-github-pages&#x2F;&quot;&gt;Hosting SQLite databases on any static file hoster (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33182417&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stevens.netmeister.org&#x2F;631&#x2F;&quot;&gt;CS631 – Advanced Programming in the Unix Environment&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33140795&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.umd.edu&#x2F;class&#x2F;fall2022&#x2F;cmsc430&#x2F;index.html&quot;&gt;CMSC 430: Design and Implementation of Programming Languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33093666&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.1024cores.net&#x2F;home&#x2F;lock-free-algorithms&quot;&gt;Lockfree Algorithms (2010)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32918043&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jdk.java.net&#x2F;19&#x2F;release-notes&quot;&gt;JDK 19 Release Notes&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32910348&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;earthly.dev&#x2F;blog&#x2F;bazel-build&#x2F;&quot;&gt;When to use Bazel?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32828584&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.regehr.org&#x2F;archives&#x2F;1393&quot;&gt;Teaching C (2016)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32798826&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;zhuowei&#x2F;status&#x2F;1568659229887664129&quot;&gt;YouTube-dl has an interpreter for a subset of JavaScript in 870 lines of Python&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32793061&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;go&#x2F;discussions&#x2F;54763&quot;&gt;Go standard library: structured, leveled logging&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32800598&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;eecs.ucf.edu&#x2F;~dcm&#x2F;Teaching&#x2F;COT4810-Spring2011&#x2F;Literature&#x2F;JustInTimeCompilation.pdf&quot;&gt;A Brief History of Just-In-Time (2003) [pdf]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32718615&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vldb.org&#x2F;pvldb&#x2F;volumes&#x2F;15&#x2F;paper&#x2F;SQLite%3A%20Past%2C%20Present%2C%20and%20Future&quot;&gt;SQLite: Past, Present, and Future&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32675861&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cv6.poinsignon.org&#x2F;&quot;&gt;Engineer distributes resume via IPv6 traceroute&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32609588&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;blog&#x2F;how-discord-stores-billions-of-messages&quot;&gt;How discord stores billions of messages (2017)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32606553&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jetpack-io&#x2F;devbox&quot;&gt;Show HN: Devbox – Easy, predictable shells and containers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32600821&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.cs.yale.edu&#x2F;homes&#x2F;aspnes&#x2F;classes&#x2F;465&#x2F;notes.pdf&quot;&gt;Notes on Theory of Distributed Systems [pdf]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32584845&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.pinecone.io&#x2F;learn&#x2F;inside-the-pinecone&#x2F;#rust-a-hard-decision-pays-off&quot;&gt;Rust – A hard decision pays off&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32578743&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;norvig&#x2F;paip-lisp&quot;&gt;Paradigms of Artificial Intelligence Programming (1992)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32458048&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;erg-lang&#x2F;erg&quot;&gt;Erg: a statically typed language that is Python compatible&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32452080&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fly.io&#x2F;blog&#x2F;sqlite-internals-rollback-journal&#x2F;&quot;&gt;How SQLite Helps You Do ACID&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32412905&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;go.dev&#x2F;doc&#x2F;go1.19&quot;&gt;Go 1.19 Released&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32321499&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.interviewing.io&#x2F;whats-actually-going-on-with-google-and-facebook-hiring-freezes-we-surveyed-1000-engineers-to-find-out&#x2F;&quot;&gt;What’s going on with Google and Facebook hiring freezes?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32312303&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;specbranch.com&#x2F;posts&#x2F;one-big-server&#x2F;&quot;&gt;Use one big server&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32319147&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.thediff.co&#x2F;p&#x2F;jane-street&quot;&gt;Understanding Jane Street&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32314623&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nnethercote.github.io&#x2F;2022&#x2F;07&#x2F;27&#x2F;twenty-years-of-valgrind.html&quot;&gt;Twenty years of Valgrind&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32245136&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fly.io&#x2F;blog&#x2F;sqlite-internals-btree&#x2F;&quot;&gt;SQLite Internals: Pages and B-trees&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32250426&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.cofault.com&#x2F;2022&#x2F;07&#x2F;treadmill.html&quot;&gt;Treadmill garbage collector by H. Baker&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32233472&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.danielsieger.com&#x2F;blog&#x2F;2022&#x2F;07&#x2F;25&#x2F;your-code-doesnt-have-to-be-a-mess.html&quot;&gt;Code doesn’t have to be a mess&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32224508&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.techradar.com&#x2F;in&#x2F;features&#x2F;ive-started-using-mozilla-firefox-and-now-i-can-never-go-back-to-google-chrome&quot;&gt;I&#x27;ve started using Firefox and can never go back to Chrome&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32126637&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ryanrodemoyer.github.io&#x2F;what-i-wish-someone-would-have-told-me-about-using-rabbitmq-before-it-was-too-late&#x2F;&quot;&gt;What I wish someone would have told me about using RabbitMQ (2020)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32091550&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eli.thegreenplace.net&#x2F;2022&#x2F;how-i-went-about-learning-rust&#x2F;&quot;&gt;How I went about learning Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32104764&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozwrites.com&#x2F;masters&#x2F;&quot;&gt;The case against CS master’s degrees&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32112793&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tip.golang.org&#x2F;doc&#x2F;gc-guide&quot;&gt;A Guide to the Go Garbage Collector&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32109301&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lemire.me&#x2F;blog&#x2F;2022&#x2F;07&#x2F;08&#x2F;go-generics-are-not-bad&#x2F;&quot;&gt;Go generics are not bad&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32027855&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;pilimi.org&#x2F;blog-introducing.html&quot;&gt;Pirate Library Mirror: Preserving 7TB of books (that are not in Libgen)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31970805&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rr-project.org&#x2F;&quot;&gt;What rr does&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31617600&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;virtualization&#x2F;running_intel_binaries_in_linux_vms_with_rosetta?language=objc&quot;&gt;Running Intel Binaries in Linux VMs with Rosetta&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31644990&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cs3110.github.io&#x2F;textbook&#x2F;cover.html&quot;&gt;OCaml Programming: Correct and Efficient and Beautiful&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31848178&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.smartcompany.com.au&#x2F;opinion&#x2F;adam-schwab-is-the-ride-over-for-uber&#x2F;&quot;&gt;Is the Ride over for Uber?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31971901&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.maxgio.me&#x2F;posts&#x2F;linux-scheduler-journey&#x2F;&quot;&gt;A Journey into the Linux Scheduler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31975901&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.morling.dev&#x2F;blog&#x2F;what-if-we-could-rebuild-kafka-from-scratch&#x2F;&quot;&gt;What If We Could Rebuild Kafka from Scratch?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=43783551&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;materializedview.io&#x2F;p&#x2F;everything-to-know-incremental-view-maintenance&quot;&gt;Everything You Need to Know About Incremental View Maintenance&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=43730676&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kiranet.org&#x2F;self-hosting-like-its-2025&#x2F;&quot;&gt;Self-Hosting like it&#x27;s 2025&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=43544979&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;irreducible.io&#x2F;blog&#x2F;my-wasm-interpreter&#x2F;&quot;&gt;I Wrote a WebAssembly VM in C&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=42918524&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eli.thegreenplace.net&#x2F;2025&#x2F;decorator-jits-python-as-a-dsl&#x2F;&quot;&gt;Decorator JITs: Python as a DSL&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=42918846&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;goto.ucsd.edu&#x2F;~ucsdpl-blog&#x2F;liquidtypes&#x2F;2015&#x2F;09&#x2F;19&#x2F;liquid-types&#x2F;&quot;&gt;A Gentle Introduction to Liquid Types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37349276&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;d41586-021-01627-2&quot;&gt;Mathematicians welcome computer-assisted proof in ‘grand unification’ theory&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=27559917&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;justine.lol&#x2F;mutex&#x2F;&quot;&gt;The Fastest Mutexes&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41721668&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.fstar-lang.org&#x2F;&quot;&gt;F* – A Proof-Oriented Programming Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=40377685&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;okmij.org&#x2F;ftp&#x2F;ML&#x2F;generalization.html&quot;&gt;How the OCaml type checker works (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41281555&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cohost.org&#x2F;prophet&#x2F;post&#x2F;7083950-functional-programmi&quot;&gt;Functional languages should be so much better at mutation than they are&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41106280&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.cr.yp.to&#x2F;20240803-clang.html&quot;&gt;Clang vs. Clang&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41146860&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;muratbuffalo.blogspot.com&#x2F;2022&#x2F;08&#x2F;strict-serializability-but-at-what-cost.html&quot;&gt;Strict-serializability, but at what cost, for what purpose?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32346038&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41000844&quot;&gt;Ask HN: Fast data structures for disjoint intervals?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=41000844&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;quuxplusone.github.io&#x2F;blog&#x2F;2024&#x2F;06&#x2F;25&#x2F;most-stl-ctors-arent-explicit-but-yours-still-should-be&#x2F;&quot;&gt;How the STL Uses Explicit&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=40804635&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;web.dev&#x2F;case-studies&#x2F;google-sheets-wasmgc&quot;&gt;Google Sheets ported its calculation worker from JavaScript to WasmGC&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=40808820&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2024&#x2F;06&#x2F;02&#x2F;the-borrow-checker-within&#x2F;&quot;&gt;The borrow checker within&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=40657626&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smudge.ai&#x2F;blog&#x2F;ratelimit-algorithms&quot;&gt;Visualizing algorithms for rate limiting&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=40384421&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HigherOrderCO&#x2F;Bend&quot;&gt;Bend: a high-level language that runs on GPUs (via HVM2)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=40390287&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.utexas.edu&#x2F;~bornholt&#x2F;post&#x2F;memory-models.html&quot;&gt;Memory Consistency Models: A Tutorial&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=40350201&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wzhudev&#x2F;reverse-linear-sync-engine&quot;&gt;A reverse engineering of Linear&#x27;s sync engine&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=44134775&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jasone.github.io&#x2F;2025&#x2F;06&#x2F;12&#x2F;jemalloc-postmortem&#x2F;&quot;&gt;Jemalloc Postmortem&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=44264958&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hackage.haskell.org&#x2F;package&#x2F;lens&quot;&gt;Lens: Lenses, Folds and Traversals&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=44433062&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.mozilla.ai&#x2F;wasm-agents-ai-agents-running-in-your-browser&#x2F;&quot;&gt;WASM Agents: AI agents running in the browser&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=44461341&quot;&gt;HN Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Languages</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/languages/"/>
        <id>https://dipeshkaphle.github.io/Learning/languages/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/languages/">&lt;h1 id=&quot;languages&quot;&gt;Languages&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;c&quot;&gt;C&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;pdos.csail.mit.edu&#x2F;6.828&#x2F;2014&#x2F;readings&#x2F;pointers.pdf&quot;&gt;Pointers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;beej.us&#x2F;guide&#x2F;bgc&#x2F;&quot;&gt;Beej C&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;scheme&quot;&gt;Scheme&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLE18841CABEA24090&quot;&gt;SICP&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zig&quot;&gt;Zig&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34740937&quot;&gt;How a Zig IDE could work(HN)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35060479&quot;&gt;When Zig is safer and faster than Rust&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;javascript-highly-recommended-state-of-the-art-stuff&quot;&gt;JavaScript(Highly Recommended,State of the Art Stuff)&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;webkit.org&#x2F;blog&#x2F;7122&#x2F;introducing-riptide-webkits-retreating-wavefront-concurrent-garbage-collector&#x2F;&quot;&gt;Riptide,Webkit&#x27;s GC&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;webkit.org&#x2F;blog&#x2F;5852&#x2F;introducing-the-b3-jit-compiler&#x2F;&quot;&gt;B3 Jit Compiler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;webkit.org&#x2F;blog&#x2F;10308&#x2F;speculation-in-javascriptcore&#x2F;&quot;&gt;Speculation in JSC&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;webkit.org&#x2F;blog&#x2F;7846&#x2F;concurrent-javascript-it-can-work&#x2F;&quot;&gt;Concurrent JavaScript, It Can Work&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;webkit.org&#x2F;blog&#x2F;12967&#x2F;understanding-gc-in-jsc-from-scratch&#x2F;&quot;&gt;Understanding GC in JSC From Scratch&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v8.dev&#x2F;blog&#x2F;high-performance-cpp-gc&quot;&gt;High Performance GC for C++&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1mF-IW2UDwFslAREeapnP8bgXAlLG_DScOVhuTo34gBQ&#x2F;edit#heading=h.ft3eufkln61m&quot;&gt;Precise Stack Scanning in C++&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;react&quot;&gt;React&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;tonyalicea.dev&#x2F;blog&#x2F;understanding-react-compiler&#x2F;&quot;&gt;Understanding React Compiler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;overreacted.io&#x2F;react-as-a-ui-runtime&#x2F;&quot;&gt;React as a UI Runtime&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;golang&quot;&gt;Golang&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;-K11rY57K7k&quot;&gt;Dmitry Vyukov — Go scheduler: Implementing language with lightweight concurrency &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;go.googlesource.com&#x2F;proposal&#x2F;+&#x2F;master&#x2F;design&#x2F;24543-non-cooperative-preemption.md&quot;&gt;Proposal: Non-cooperative goroutine preemption&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;unskilled.blog&#x2F;posts&#x2F;preemption-in-go-an-introduction&#x2F;#:~:text=The%20first%20step%20towards%20preemption,course%20it%20can%20be%20preempted&quot;&gt;Preemption in Go: an introduction&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;go.dev&#x2F;src&#x2F;runtime&#x2F;preempt.go&quot;&gt;code&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;python&quot;&gt;Python&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;939981&#x2F;?s=08&quot;&gt;Gil removal and faster CPython project&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;swift&quot;&gt;Swift&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.douggregor.net&#x2F;&quot;&gt;Swift for C++ Practitioners&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Lobste.rs Links</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/lobsterslinks/"/>
        <id>https://dipeshkaphle.github.io/Learning/lobsterslinks/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/lobsterslinks/">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;0x44.xyz&#x2F;blog&#x2F;comptime-1&quot;&gt;Having your compile-time cake and eating it too&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;w1k7fr&#x2F;having_your_compile_time_cake_eating_it&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.galois.com&#x2F;articles&#x2F;what-works-and-doesnt-selling-formal-methods&quot;&gt;What Works (and Doesn&#x27;t) Selling Formal Methods&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;suuuaw&#x2F;what_works_doesn_t_selling_formal_methods&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sean.heelan.io&#x2F;2025&#x2F;05&#x2F;22&#x2F;how-i-used-o3-to-find-cve-2025-37899-a-remote-zeroday-vulnerability-in-the-linux-kernels-smb-implementation&#x2F;&quot;&gt;How I used o3 to find CVE-2025-37899, a remote zeroday vulnerability in the Linux kernel’s SMB implementation&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uvw5lp&#x2F;how_i_used_o3_find_cve_2025_37899_remote&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;liamoc.net&#x2F;forest&#x2F;dt-001Y&#x2F;index.xml&quot;&gt;Domain Theory Lecture Notes&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;6sidoz&#x2F;domain_theory_lecture_notes&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ml-site.cdn-apple.com&#x2F;papers&#x2F;the-illusion-of-thinking.pdf&quot;&gt;The Illusion of Thinking&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ujgjkb&#x2F;illusion_thinking&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lucumr.pocoo.org&#x2F;2025&#x2F;6&#x2F;12&#x2F;agentic-coding&#x2F;&quot;&gt;Agentic Coding Recommendations&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9hzjeh&#x2F;agentic_coding_recommendations&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;irs&#x2F;&quot;&gt;What I talk about when I talk about IRs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vfjnar&#x2F;what_i_talk_about_when_i_talk_about_irs&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xania.org&#x2F;202506&#x2F;compiler-explorer-cost-transparency&quot;&gt;Compiler Explorer Cost Transparency&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vq4cjo&#x2F;compiler_explorer_cost_transparency&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xania.org&#x2F;202505&#x2F;compiler-explorer-urls-forever&quot;&gt;Compiler Explorer and the Promise of URLs That Last Forever&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rqc5yc&#x2F;compiler_explorer_promise_urls_last&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pyjarrett.github.io&#x2F;2025&#x2F;06&#x2F;10&#x2F;postfix-calculator.html&quot;&gt;Writing a Verified Postfix Calculator in Ada&#x2F;SPARK&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uwhv3o&#x2F;writing_verified_postfix_calculator_ada&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;brevzin.github.io&#x2F;c++&#x2F;2025&#x2F;06&#x2F;09&#x2F;reflection-ts&#x2F;&quot;&gt;Type-based vs Value-based Reflection&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;w7fnqq&#x2F;type_based_vs_value_based_reflection&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;0mqFCqw_XvI&quot;&gt;Introducing facet: Reflection for Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;njbvot&#x2F;introducing_facet_reflection_for_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jasone.github.io&#x2F;2025&#x2F;06&#x2F;12&#x2F;jemalloc-postmortem&#x2F;&quot;&gt;jemalloc Postmortem&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;thpska&#x2F;jemalloc_postmortem&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;raiph&#x2F;849a4a9d8875542fb86df2b2eda89296&quot;&gt;Raku&#x27;s &quot;core&quot;&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;r0spkl&#x2F;raku_s_core&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;oxcaml.org&quot;&gt;OxCaml, Jane Street&#x27;s extension of OCaml is now open-source&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;unsbmk&#x2F;oxcaml_jane_street_s_extension_ocaml_is&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frankmcsherry&#x2F;blog&#x2F;blob&#x2F;master&#x2F;posts&#x2F;2025-06-03.md&quot;&gt;Datalog in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;btlkeb&#x2F;datalog_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rrampage.github.io&#x2F;2025&#x2F;06&#x2F;13&#x2F;strace-tips-for-better-debugging&#x2F;&quot;&gt;strace tips for better debugging&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;c7udeu&#x2F;strace_tips_for_better_debugging&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;btmc.substack.com&#x2F;p&#x2F;implementing-logic-programming&quot;&gt;Implementing Logic Programming&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4tmzdy&#x2F;implementing_logic_programming&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;typesanitizer.com&#x2F;blog&#x2F;complexity-definitions.html&quot;&gt;A meta-analysis of three different notions of software complexity&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;riogyw&#x2F;meta_analysis_three_different_notions&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;3689773&quot;&gt;StarMalloc: verified memory allocator&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jpfyd6&#x2F;starmalloc_verified_memory_allocator&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zed.dev&#x2F;blog&#x2F;debugger&quot;&gt;The Zed Debugger is Here&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rwbtwd&#x2F;zed_debugger_is_here&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matduggan.com&#x2F;what-would-a-kubernetes-2-0-look-like&#x2F;&quot;&gt;What Would a Kubernetes 2.0 Look Like&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kmizrf&#x2F;what_would_kubernetes_2_0_look_like&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fransskarman.com&#x2F;phd_thesis_in_typst.html&quot;&gt;I wrote my PhD Thesis in Typst&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pdrso1&#x2F;i_wrote_my_phd_thesis_typst&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lemire.me&#x2F;blog&#x2F;2025&#x2F;06&#x2F;22&#x2F;c26-will-include-compile-time-reflection-why-should-you-care&#x2F;&quot;&gt;Discover C++26’s compile-time reflection&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;thwfed&#x2F;discover_c_26_s_compile_time_reflection&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.google&#x2F;technology&#x2F;developers&#x2F;introducing-gemini-cli-open-source-ai-agent&#x2F;&quot;&gt;Gemini CLI: your open-source AI agent&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;f9xdsg&#x2F;gemini_cli_your_open_source_ai_agent&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mazzo.li&#x2F;posts&#x2F;fast-pipes.html&quot;&gt;How fast are Linux pipes anyway? (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;beakce&#x2F;how_fast_are_linux_pipes_anyway_2022&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;legacy.cs.indiana.edu&#x2F;~dyb&#x2F;pubs&#x2F;letrec-reloaded.pdf&quot;&gt;Fixing Letrec (Reloaded)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rc9ydi&#x2F;fixing_letrec_reloaded&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thephd.dev&#x2F;to-bind-and-loose-a-reference-optional&quot;&gt;To Bind and Loose a Reference (2020)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mrwcem&#x2F;bind_loose_reference_2020&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2504.17178&quot;&gt;How to Grow an LSM-tree? Towards Bridging the Gap Between Theory and Practice&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;buoxqy&#x2F;how_grow_lsm_tree_towards_bridging_gap&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.polybdenum.com&#x2F;2020&#x2F;07&#x2F;04&#x2F;subtype-inference-by-example-part-1-introducing-cubiml.html&quot;&gt;Subtype Inference by Example&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fkopdb&#x2F;subtype_inference_by_example&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.stephendiehl.com&#x2F;posts&#x2F;smt_and_mcp_solvers&#x2F;&quot;&gt;Interfacing MCP with Combinatorial, Convex, and SMT Solvers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pn7sq3&#x2F;interfacing_mcp_with_combinatorial&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.inferara.com&#x2F;en&#x2F;blog&#x2F;rust-tagless-final-gadt&#x2F;&quot;&gt;Zero-Cost &#x27;Tagless Final&#x27; in Rust with GADT-style Enums&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qsksxp&#x2F;zero_cost_tagless_final_rust_with_gadt&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.williamjbowman.com&#x2F;blog&#x2F;2025&#x2F;06&#x2F;02&#x2F;what-s-higher-order-about-so-called-higher-order-references&#x2F;&quot;&gt;What&#x27;s higher-order about so-called higher-order references?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;75hp0g&#x2F;what_s_higher_order_about_so_called_higher&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kcsrk.info&#x2F;ocaml&#x2F;modes&#x2F;2025&#x2F;05&#x2F;29&#x2F;uniqueness_and_behavioural_types&#x2F;&quot;&gt;Uniqueness for Behavioural Types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lfuoar&#x2F;uniqueness_for_behavioural_types&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;3428207&quot;&gt;Handling bidirectional control flow&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tyacrw&#x2F;handling_bidirectional_control_flow&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xania.org&#x2F;202506&#x2F;how-compiler-explorer-works&quot;&gt;How Compiler Explorer Works in 2025&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ocu642&#x2F;how_compiler_explorer_works_2025&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lucumr.pocoo.org&#x2F;2025&#x2F;6&#x2F;4&#x2F;changes&#x2F;&quot;&gt;AI Changes Everything&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;n2lvmy&#x2F;ai_changes_everything&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.glyph.im&#x2F;2025&#x2F;06&#x2F;i-think-im-done-thinking-about-genai-for-now.html&quot;&gt;I Think I’m Done Thinking About genAI For Now&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rzskjk&#x2F;i_think_i_m_done_thinking_about_genai_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.com&#x2F;hillelwayne&#x2F;archive&#x2F;ai-is-a-gamechanger-for-tla-users&#x2F;&quot;&gt;AI is a gamechanger for TLA+ users&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mp34xp&#x2F;ai_is_gamechanger_for_tla_users&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;andreyor.st&#x2F;posts&#x2F;2023-10-18-a-programming-system&#x2F;&quot;&gt;A programming system&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yjbsof&#x2F;programming_system&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.chiark.greenend.org.uk&#x2F;~sgtatham&#x2F;quasiblog&#x2F;parsing&#x2F;&quot;&gt;In which I have Opinions about parsing and grammars&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;495rx9&#x2F;which_i_have_opinions_about_parsing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kcsrk.info&#x2F;ocaml&#x2F;modes&#x2F;oxcaml&#x2F;2025&#x2F;06&#x2F;04&#x2F;linearity_and_uniqueness&#x2F;&quot;&gt;Linearity and uniqueness&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lczxco&#x2F;linearity_uniqueness&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BobMcDear&#x2F;aplearn&quot;&gt;APLearn: machine learning library&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lbmywp&#x2F;aplearn_machine_learning_library&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jepsen.io&#x2F;analyses&#x2F;tigerbeetle-0.16.11&quot;&gt;Jepsen: TigerBeetle 0.16.11&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;oei5fj&#x2F;jepsen_tigerbeetle_0_16_11&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.justfuckingcode.com&#x2F;&quot;&gt;Just fucking code&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gynzfc&#x2F;just_fucking_code&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;e8abqn&#x2F;how_can_one_write_blazing_fast_yet_useful&quot;&gt;How can one write blazing fast yet useful compilers (for lazy pure functional languages)?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;e8abqn&#x2F;how_can_one_write_blazing_fast_yet_useful&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.maxemitchell.com&#x2F;writings&#x2F;i-read-all-of-cloudflares-claude-generated-commits&#x2F;&quot;&gt;I Read All Of Cloudflare&#x27;s Claude-Generated Commits&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bxpwqt&#x2F;i_read_all_cloudflare_s_claude_generated&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crawshaw.io&#x2F;blog&#x2F;programming-with-agents&quot;&gt;How I program with Agents&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yjshul&#x2F;how_i_program_with_agents&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;machinelearning.apple.com&#x2F;research&#x2F;illusion-of-thinking&quot;&gt;The Illusion of Thinking: Understanding the Strengths and Limitations of Reasoning Models via the Lens of Problem Complexity&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ydtluy&#x2F;illusion_thinking_understanding&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dercuano.github.io&#x2F;notes&#x2F;failure-free.html&quot;&gt;Patterns for failure-free, bounded-space, and bounded-time programming&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;a0ja5n&#x2F;patterns_for_failure_free_bounded_space&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;typesanitizer.com&#x2F;blog&#x2F;zig-generics.html&quot;&gt;Zig-style generics are not well-suited for most languages (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;v0jei8&#x2F;zig_style_generics_are_not_well_suited_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kobzol.github.io&#x2F;rust&#x2F;rustc&#x2F;2025&#x2F;06&#x2F;09&#x2F;why-doesnt-rust-care-more-about-compiler-performance.html&quot;&gt;Why doesn’t Rust care more about compiler performance?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hrk5y5&#x2F;why_doesn_t_rust_care_more_about_compiler&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lucumr.pocoo.org&#x2F;2025&#x2F;6&#x2F;10&#x2F;genai-criticism&#x2F;&quot;&gt;GenAI Criticism and Moral Quandaries&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;thtgzl&#x2F;genai_criticism_moral_quandaries&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apple&#x2F;container&quot;&gt;container: tool for creating and running Linux containers using lightweight virtual machines on a Mac&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;h0pge0&#x2F;container_tool_for_creating_running&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;troubles.md&#x2F;microwasm&#x2F;&quot;&gt;WebAssembly Troubles part 4: Microwasm (2019)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;dfhenp&#x2F;webassembly_troubles_part_4_microwasm&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;media.defense.gov&#x2F;2025&#x2F;Jun&#x2F;23&#x2F;2003742198&#x2F;-1&#x2F;-1&#x2F;0&#x2F;CSI_MEMORY_SAFE_LANGUAGES_REDUCING_VULNERABILITIES_IN_MODERN_SOFTWARE_DEVELOPMENT.PDF&quot;&gt;Memory Safe Languages: Reducing Vulnerabilities in Modern Software Development&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yvkyke&#x2F;memory_safe_languages_reducing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sharnoff.io&#x2F;blog&#x2F;why-rust-compiler-slow&quot;&gt;&quot;Why is the Rust compiler so slow?&quot;&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;72hbqg&#x2F;why_is_rust_compiler_so_slow&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mmapped.blog&#x2F;posts&#x2F;41-box-combinators&quot;&gt;Box combinators&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vw3pwh&#x2F;box_combinators&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.wakunguma.com&#x2F;blog&#x2F;rust-weird-expr&quot;&gt;Weird expressions in rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tc2s00&#x2F;weird_expressions_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.snork.dev&#x2F;posts&#x2F;notes-on-type-inference-and-polymorphism.html&quot;&gt;Notes on type inference and polymorphism&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qjjehn&#x2F;notes_on_type_inference_polymorphism&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nnethercote.github.io&#x2F;2025&#x2F;06&#x2F;26&#x2F;how-much-code-does-that-proc-macro-generate.html&quot;&gt;How much code does that proc macro generate?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bgobdd&#x2F;how_much_code_does_proc_macro_generate&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;brevzin.github.io&#x2F;c++&#x2F;2025&#x2F;06&#x2F;26&#x2F;json-reflection&#x2F;&quot;&gt;Reflecting JSON into C++ Objects at compile time&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gf5aiw&#x2F;reflecting_json_into_c_objects_at_compile&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jameshaydon.github.io&#x2F;passport&#x2F;&quot;&gt;Solving &lt;code&gt;UK Passport Application&lt;&#x2F;code&gt; with Haskell&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wfz7qh&#x2F;solving_uk_passport_application_with&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.philipzucker.com&#x2F;le_find&#x2F;&quot;&gt;Inequality Union Finds: Baby Steps to Refinement E-graphs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wahapd&#x2F;inequality_union_finds_baby_steps&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pablo.rauzy.name&#x2F;dev&#x2F;naur1985programming.pdf&quot;&gt;Programming as Theory Building&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;okcpex&#x2F;programming_as_theory_building&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;replacing-tasks-with-actors&#x2F;&quot;&gt;Tree-Structured Concurrency II: Replacing Background Tasks With Actors&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lsmcfv&#x2F;tree_structured_concurrency_ii&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amelia.how&#x2F;posts&#x2F;parsing-layout.html&quot;&gt;Parsing Layout, or: Haskell&#x27;s Syntax is a Mess&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uu3keo&#x2F;parsing_layout_haskell_s_syntax_is_mess&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xenodium.com&#x2F;awesome-emacs-on-macos&quot;&gt;Awesome Emacs on macOS&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wfams6&#x2F;awesome_emacs_on_macos&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.allthingsdistributed.com&#x2F;2025&#x2F;05&#x2F;just-make-it-scale-an-aurora-dsql-story.html&quot;&gt;Just make it scale: An Aurora DSQL story&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cbd7rn&#x2F;just_make_it_scale_aurora_dsql_story&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.nilenso.com&#x2F;blog&#x2F;2025&#x2F;05&#x2F;12&#x2F;mcp-explained-without-hype-or-fluff&#x2F;&quot;&gt;MCP explained without hype or fluff&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;y5kllu&#x2F;mcp_explained_without_hype_fluff&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;async-traits-can-be-directly-backed-by-manual-future-impls&#x2F;&quot;&gt;Async Traits Can Be Directly Backed By Manual Future Impls&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ispr3u&#x2F;async_traits_can_be_directly_backed_by&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;catgirl.ai&#x2F;log&#x2F;typelevel-bounded-recursion&#x2F;&quot;&gt;Type-level Bounded Recursion in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9qt9tf&#x2F;type_level_bounded_recursion_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;simonwillison.net&#x2F;2025&#x2F;May&#x2F;27&#x2F;llm-tools&#x2F;&quot;&gt;Large Language Models can run tools in your terminal with LLM 0.26&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xuycrp&#x2F;large_language_models_can_run_tools_your&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lexi-lambda.github.io&#x2F;blog&#x2F;2025&#x2F;05&#x2F;29&#x2F;a-break-from-programming-languages&#x2F;&quot;&gt;A break from programming languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;loydfp&#x2F;break_from_programming_languages&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cacm.acm.org&#x2F;practice&#x2F;systems-correctness-practices-at-amazon-web-services&#x2F;&quot;&gt;Systems Correctness Practices at Amazon Web Services&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;giokgl&#x2F;systems_correctness_practices_at_amazon&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steveklabnik.com&#x2F;writing&#x2F;i-am-disappointed-in-the-ai-discourse&#x2F;&quot;&gt;I am disappointed in the AI discourse&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;42qb2p&#x2F;i_am_disappointed_ai_discourse&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fly.io&#x2F;blog&#x2F;parking-lot-ffffffffffffffff&#x2F;&quot;&gt;parking_lot: ffffffffffffffff&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;029ntw&#x2F;parking_lot_ffffffffffffffff&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scannedinavian.com&#x2F;tools-built-on-tree-sitters-concrete-syntax-trees.html&quot;&gt;Tools built on tree-sitter&#x27;s concrete syntax trees&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;1qmcac&#x2F;tools_built_on_tree_sitter_s_concrete&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.stephendiehl.com&#x2F;posts&#x2F;types_of_types&#x2F;&quot;&gt;Types of Types: Common to Exotic&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;t9ig3o&#x2F;types_types_common_exotic&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;academy.fpblock.com&#x2F;blog&#x2F;rust-haskell-reflections&#x2F;&quot;&gt;Reflections on Haskell and Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;obxxdr&#x2F;reflections_on_haskell_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lucumr.pocoo.org&#x2F;2025&#x2F;7&#x2F;3&#x2F;tools&#x2F;&quot;&gt;Tools: Code Is All You Need&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cdrqny&#x2F;tools_code_is_all_you_need&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;taping-memory.dev&#x2F;temporaries-rabbit-hole&#x2F;&quot;&gt;The scary and surprisingly deep rabbit hole of Rust&#x27;s temporaries&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;52gism&#x2F;scary_surprisingly_deep_rabbit_hole_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ralfj.de&#x2F;blog&#x2F;2025&#x2F;07&#x2F;07&#x2F;tree-borrows-paper.html&quot;&gt;The Tree Borrows paper is finally published&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;baio5y&#x2F;tree_borrows_paper_is_finally_published&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;queue.acm.org&#x2F;detail.cfm?id=3746171&quot;&gt;WebAssembly: Yes, but for What?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cyxkzl&#x2F;webassembly_yes_for_what&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.uoregon.edu&#x2F;research&#x2F;summerschool&#x2F;summer25&#x2F;topics.php&quot;&gt;Oregon Programming Languages Summer School (OPLSS) 2025: Types, Logic, and Formal Methods&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cga7nb&#x2F;oregon_programming_languages_summer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.matem.unam.mx&#x2F;~omar&#x2F;apropos-emacs.html#the-case-against-which-key-a-polemic&quot;&gt;The case against which-key: a polemic&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rfsseb&#x2F;case_against_which_key_polemic&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.polarsignals.com&#x2F;blog&#x2F;posts&#x2F;2025&#x2F;07&#x2F;08&#x2F;dst-rust&quot;&gt;Deterministic Simulation Testing in Rust: A Theater Of State Machines&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rvmew5&#x2F;deterministic_simulation_testing_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;unnamed.website&#x2F;posts&#x2F;bad-apple-lean-tactic&#x2F;&quot;&gt;“Bad Apple!!” But It’s 3288 Lean Tactics Spamming VSCode&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ccvkpv&#x2F;bad_apple_it_s_3288_lean_tactics_spamming&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.com&#x2F;jaffray&#x2F;archive&#x2F;unified-memory-management&#x2F;&quot;&gt;Unified Memory Management&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nree33&#x2F;unified_memory_management&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;poignardazur.github.io&#x2F;&#x2F;2025&#x2F;07&#x2F;09&#x2F;variadic-generics-dead-ends&#x2F;&quot;&gt;Variadic Generics ideas that won’t work for Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;plwg9q&#x2F;variadic_generics_ideas_won_t_work_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SJwvPEq4Mok&quot;&gt;MicroHs, a tiny Haskell Compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ak9mmk&#x2F;microhs_tiny_haskell_compiler&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yoric.github.io&#x2F;post&#x2F;quite-a-few-words-about-async&#x2F;&quot;&gt;(Quite) A Few Words About Async&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fvorwd&#x2F;quite_few_words_about_async&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;happyfellow.bearblog.dev&#x2F;programming-language-theory-has-a-public-relations-problem&#x2F;&quot;&gt;Programming Language Theory has a public relations problem&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;byp59z&#x2F;programming_language_theory_has_public&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kristoff.it&#x2F;blog&#x2F;zig-new-async-io&#x2F;&quot;&gt;Zig&#x27;s New Async I&#x2F;O&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mtcsug&#x2F;zig_s_new_async_i_o&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;graphitemaster&#x2F;detour&quot;&gt;detour: A detour through the Linux dynamic linker&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rnwozv&#x2F;detour_detour_through_linux_dynamic&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jyn.dev&#x2F;constrained-languages-are-easier-to-optimize&#x2F;&quot;&gt;constrained languages are easier to optimize&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hul45q&#x2F;constrained_languages_are_easier&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wiomoc.de&#x2F;misc&#x2F;posts&#x2F;hacking_coroutines_into_c.html&quot;&gt;Hacking coroutines into C&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;oqaxxt&#x2F;hacking_coroutines_into_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;writing&#x2F;store-tags-after-payloads&#x2F;&quot;&gt;Store tags after payloads&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;x9s2mu&#x2F;store_tags_after_payloads&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.stranger.systems&#x2F;posts&#x2F;by-slug&#x2F;row-polymorphic-programming.html&quot;&gt;Row Polymorphic Programming&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qov0vo&#x2F;row_polymorphic_programming&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;andrevidela.com&#x2F;blog&#x2F;2025&#x2F;binding-application&#x2F;&quot;&gt;Binding Application in Idris&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;q6comq&#x2F;binding_application_idris&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;automerge.github.io&#x2F;blog&#x2F;automerge-3&#x2F;&quot;&gt;Automerge 3.0&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;goyein&#x2F;automerge_3_0&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antithesis.com&#x2F;resources&#x2F;reliability_glossary&#x2F;&quot;&gt;A distributed systems reliability glossary&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;c4yg4y&#x2F;distributed_systems_reliability&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;oakchris1955.eu&#x2F;posts&#x2F;bypassing_specialization&#x2F;&quot;&gt;&quot;Bypassing&quot; specialization in Rust or How I Learned to Stop Worrying and Love Function Pointers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;iclgb7&#x2F;bypassing_specialization_rust_how_i&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mnvr.in&#x2F;rust&quot;&gt;A Rust shaped hole&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;u3ywxf&#x2F;rust_shaped_hole&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;P0mo8Tzrapo&quot;&gt;Designing Kotlin Beyond Type Inference&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tlgh1u&#x2F;designing_kotlin_beyond_type_inference&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;newsletter.vickiboykis.com&#x2F;archive&#x2F;my-favorite-use-case-for-ai-is-writing-logs&#x2F;&quot;&gt;My favorite use-case for AI is writing logs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;dm7pow&#x2F;my_favorite_use_case_for_ai_is_writing_logs&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;danluu.com&#x2F;seo-spam&#x2F;&quot;&gt;How bad are search results? Let&#x27;s compare Google, Bing, Marginalia, Kagi, Mwmbl, and ChatGPT&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;0ciz1n&#x2F;how_bad_are_search_results_let_s_compare&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jvns.ca&#x2F;blog&#x2F;2023&#x2F;02&#x2F;28&#x2F;some-notes-on-using-nix&#x2F;&quot;&gt;Some notes on using nix&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;eru89e&#x2F;some_notes_on_using_nix&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;temporal-spatial-memory-safety&#x2F;&quot;&gt;What are temporal and spatial memory safety?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gbgq6h&#x2F;what_are_temporal_spatial_memory_safety&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sunshowers.io&#x2F;posts&#x2F;monads-through-pbt&#x2F;&quot;&gt;Demystifying monads in Rust through property-based testing&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;isl4u6&#x2F;demystifying_monads_rust_through&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;typst.app&#x2F;blog&#x2F;2025&#x2F;typst-0.13&#x2F;&quot;&gt;Typst 0.13 is out now: Experimental HTML export, semantic paragraphs, and more&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ktwqmj&#x2F;typst_0_13_is_out_now_experimental_html&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.com&#x2F;hillelwayne&#x2F;archive&#x2F;five-kinds-of-nondeterminism&#x2F;&quot;&gt;Five Kinds of Nondeterminism&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jqyzio&#x2F;five_kinds_nondeterminism&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TBAf5l1RmcA&quot;&gt;Towards A Simple and Expressive Query Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;d9lnbi&#x2F;towards_simple_expressive_query&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vekatze.github.io&#x2F;neut&#x2F;overview.html&quot;&gt;Neut Programming Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mazfvy&#x2F;neut_programming_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raymii.org&#x2F;s&#x2F;software&#x2F;My_go-to_Cpp_code_for_asynchronous_work_processing_on_a_separate_thread.html&quot;&gt;My go-to C++ code for asynchronous work processing on a separate thread&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hfplla&#x2F;my_go_c_code_for_asynchronous_work&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carbon-language&#x2F;carbon-lang&#x2F;discussions&#x2F;4694&quot;&gt;Carbon Copy Newsletter No.5&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;n3be1g&#x2F;carbon_copy_newsletter_no_5&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maplant.com&#x2F;2024-12-13-Scheme-to-the-Spec-Part-I:-Concurrent-Cycle-Collection.html&quot;&gt;Garbage Collected Smart Pointers in Rust via Concurrent Cycle Collection&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;la8auv&#x2F;garbage_collected_smart_pointers_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;treeherder.mozilla.org&#x2F;perfherder&#x2F;graphs?timerange=31536000&amp;amp;series=mozilla-central,3735773,1,13&amp;amp;series=mozilla-central,3412459,1,13&quot;&gt;Firefox has surpassed Chrome on Speedometer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vyhyka&#x2F;firefox_has_surpassed_chrome_on&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;proofcraft.org&#x2F;blog&#x2F;proof-engineer-reading.html&quot;&gt;So you want to be a proof engineer?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;z6hmgx&#x2F;so_you_want_be_proof_engineer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;effect.systems&#x2F;blog&#x2F;egraph-extraction.html&quot;&gt;The E-graph extraction problem is NP-complete&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;p93jau&#x2F;e_graph_extraction_problem_is_np_complete&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakobkhansen&#x2F;CCDetect-lsp&quot;&gt;CCDetect-lsp: Language-agnostic real-time duplicate code detection LSP server&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rzmnam&#x2F;ccdetect_lsp_language_agnostic_real_time&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.hillelwayne.com&#x2F;post&#x2F;graph-types&#x2F;&quot;&gt;The Hunt for the Missing Data Type&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uhmhum&#x2F;hunt_for_missing_data_type&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bugs.openjdk.org&#x2F;browse&#x2F;JDK-8303099&quot;&gt;JVM&#x2F;Java: Null-Restricted and Nullable Types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uuoilf&#x2F;jvm_java_null_restricted_nullable_types&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;c8eahy&#x2F;what_conferences_are_you_all_looking&quot;&gt;What conferences are you all looking forward to?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;c8eahy&#x2F;what_conferences_are_you_all_looking&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;gen-auto-trait-problem&#x2F;&quot;&gt;The gen auto-trait problem&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;enx24i&#x2F;gen_auto_trait_problem&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vine.dev&#x2F;&quot;&gt;Vine: A programming language based on Interaction Nets&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ctpdvb&#x2F;vine_programming_language_based_on&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.qovery.com&#x2F;blog&#x2F;rust-investigating-a-strange-out-of-memory-error&#x2F;&quot;&gt;Investigating a Strange Out-of-Memory Error&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;y56cym&#x2F;investigating_strange_out_memory_error&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;unnamed.website&#x2F;posts&#x2F;fenwick-trees-awesome&#x2F;&quot;&gt;Fenwick Trees are Awesome&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;boa8jf&#x2F;fenwick_trees_are_awesome&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;why-checked-exceptions-failed&quot;&gt;Why Checked Exceptions Failed&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ntia7t&#x2F;why_checked_exceptions_failed&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mapping-high-level-constructs-to-llvm-ir.readthedocs.io&quot;&gt;Mapping High Level Constructs to LLVM IR&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9lppza&#x2F;mapping_high_level_constructs_llvm_ir&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;robert.ocallahan.org&#x2F;2024&#x2F;06&#x2F;browser-engine.html&quot;&gt;So You Want To Build A Browser Engine&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ndu2xo&#x2F;so_you_want_build_browser_engine&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hvob9g&#x2F;fun_friday_what_got_you_into_programming&quot;&gt;Fun Friday: what got you into programming?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hvob9g&#x2F;fun_friday_what_got_you_into_programming&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.fponzi.me&#x2F;2024-02-02-lamport-clocks.html&quot;&gt;Lamport clocks&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;s7qmxq&#x2F;lamport_clocks&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;semgrep.dev&#x2F;blog&#x2F;2021&#x2F;semgrep-a-static-analysis-journey&#x2F;&quot;&gt;Semgrep: a static analysis journey&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lxa416&#x2F;semgrep_static_analysis_journey&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lukaskalbertodt.github.io&#x2F;2019&#x2F;12&#x2F;05&#x2F;generalized-autoref-based-specialization.html&quot;&gt;Generalized Autoref-Based Specialization (2019)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xqch06&#x2F;generalized_autoref_based&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rfd.shared.oxide.computer&#x2F;rfd&#x2F;0508&quot;&gt;Whither CockroachDB?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ffszer&#x2F;whither_cockroachdb&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sunshowers.io&#x2F;posts&#x2F;beyond-ctrl-c-signals&#x2F;&quot;&gt;Beyond Ctrl-C: The dark corners of Unix signal handling&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;m9bhxk&#x2F;beyond_ctrl_c_dark_corners_unix_signal&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martinheinz.dev&#x2F;blog&#x2F;110&quot;&gt;Shell History Is Your Best Productivity Tool&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zfcis3&#x2F;shell_history_is_your_best_productivity&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.email&#x2F;hillelwayne&#x2F;archive&#x2F;more-software-projects-need-defenses-of-design&#x2F;&quot;&gt;More Software Projects need Defenses of Design&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pcmwh1&#x2F;more_software_projects_need_defenses&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;ddcg&#x2F;&quot;&gt;A quick look at destination-driven code generation&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tfuufl&#x2F;quick_look_at_destination_driven_code&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tratt.net&#x2F;laurie&#x2F;blog&#x2F;2023&#x2F;why_split_lexing_and_parsing_into_two_separate_phases.html&quot;&gt;Why Split Lexing and Parsing Into Two Separate Phases?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ndkycy&#x2F;why_split_lexing_parsing_into_two&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dziban.net&#x2F;coroutines&#x2F;&quot;&gt;Small VMs &amp;amp; Coroutines&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jrp9gv&#x2F;small_vms_coroutines&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;ownership&#x2F;&quot;&gt;Ownership&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kswxq2&#x2F;ownership&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fishshell.com&#x2F;blog&#x2F;rustport&#x2F;&quot;&gt;Fish 4.0: The Fish Of Theseus&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jmy84s&#x2F;fish_4_0_fish_theseus&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tashian.com&#x2F;articles&#x2F;how-i-learned-to-program&#x2F;&quot;&gt;How Multi-User Dungeons Taught Me To Code&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yas6et&#x2F;how_multi_user_dungeons_taught_me_code&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wingolog.org&#x2F;archives&#x2F;2023&#x2F;10&#x2F;19&#x2F;requiem-for-a-stringref&quot;&gt;requiem for a stringref&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;i1rxgb&#x2F;requiem_for_stringref&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;2023-08-15-thinking-about-functional-programming.html&quot;&gt;Thinking about functional programming&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qgoksp&#x2F;thinking_about_functional_programming&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bollu.github.io&#x2F;stuff-i-learnt-in-2022.html&quot;&gt;Stuff I learnt in 2022&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rsbjdu&#x2F;stuff_i_learnt_2022&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sunshowers.io&#x2F;posts&#x2F;rustc-segfault-illumos&#x2F;&quot;&gt;Debugging a rustc segfault on illumos&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;dnk3o6&#x2F;debugging_rustc_segfault_on_illumos&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dubroy.com&#x2F;blog&#x2F;bytecode-vms-in-surprising-places&#x2F;&quot;&gt;Bytecode VMs in surprising places&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wy4jd4&#x2F;bytecode_vms_surprising_places&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;about.sourcegraph.com&#x2F;blog&#x2F;cheating-is-all-you-need&quot;&gt;Cheating is All You Need&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pdqmcq&#x2F;cheating_is_all_you_need&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sylver-dev&#x2F;sylver-cli&quot;&gt;I made a multi-language programmable linter&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pyrmyn&#x2F;i_made_multi_language_programmable&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bitbashing.io&#x2F;async-rust.html&quot;&gt;Async Rust Is A Bad Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cryfiu&#x2F;async_rust_is_bad_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;db.cs.cmu.edu&#x2F;papers&#x2F;2024&#x2F;whatgoesaround-sigmodrec2024.pdf&quot;&gt;What Goes Around Comes Around... And Around&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;g7ejcv&#x2F;what_goes_around_comes_around_around&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ocaml&#x2F;ocaml&#x2F;blob&#x2F;trunk&#x2F;CONTRIBUTING.md#collective-maintenance&quot;&gt;Contributing to OCaml: Collective maintenance&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;7ooars&#x2F;contributing_ocaml_collective&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2024&#x2F;07&#x2F;05&#x2F;properly-testing-concurrent-data-structures.html&quot;&gt;Properly Testing Concurrent Data Structures&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4gzl4v&#x2F;properly_testing_concurrent_data&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;what-is-blocking&#x2F;&quot;&gt;Will it block?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;resic9&#x2F;will_it_block&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.shadaj.me&#x2F;writing&#x2F;distributed-programming-stalled&quot;&gt;Distributed Systems Programming Has Stalled&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xjnx95&#x2F;distributed_systems_programming_has&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pi3.informatik.uni-mannheim.de&#x2F;~moer&#x2F;querycompiler.pdf&quot;&gt;Building Query Compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;abs9fe&#x2F;building_query_compilers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kcsrk.info&#x2F;papers&#x2F;verifiedgc_feb_25.pdf&quot;&gt;A Mechanically Verified Garbage Collector for OCaml&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;olaala&#x2F;mechanically_verified_garbage&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;typesanitizer.com&#x2F;blog&#x2F;rethink-optimizers.html&quot;&gt;Our optimizers need a rethink&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;txndlk&#x2F;our_optimizers_need_rethink&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;whats-in-an-egraph&#x2F;&quot;&gt;What’s in an e-graph?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9m59pe&#x2F;what_s_e_graph&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ferd.ca&#x2F;a-distributed-systems-reading-list.html&quot;&gt;A Distributed Systems Reading List&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;57aktx&#x2F;distributed_systems_reading_list&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=g3qd4zpm1LA&quot;&gt;Making OCaml Safe for Performance Engineering&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ujvpdn&#x2F;making_ocaml_safe_for_performance&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.oceanbase.com&#x2F;blog&#x2F;2596985600&quot;&gt;Designing a Distributed SQL Engine: Challenges and Decisions&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;1l0iu7&#x2F;designing_distributed_sql_engine&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;brooker.co.za&#x2F;blog&#x2F;2024&#x2F;04&#x2F;17&#x2F;formal&quot;&gt;Formal Methods: Just Good Engineering Practice?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rttzyo&#x2F;formal_methods_just_good_engineering&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;andrewkchan.dev&#x2F;posts&#x2F;yalm.html&quot;&gt;Fast LLM Inference From Scratch&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vld1by&#x2F;fast_llm_inference_from_scratch&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.sobyte.net&#x2F;post&#x2F;2022-06&#x2F;cpp-memory-order&#x2F;&quot;&gt;Memory Order in C++ (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lvb2jn&#x2F;memory_order_c_2022&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.haskellforall.com&#x2F;2024&#x2F;06&#x2F;my-spiciest-take-on-tech-hiring.html&quot;&gt;My spiciest take on tech hiring&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;airnde&#x2F;my_spiciest_take_on_tech_hiring&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;transactional.blog&#x2F;blog&#x2F;2024-data-replication-design-spectrum&quot;&gt;Data Replication Design Spectrum&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bqvr4r&#x2F;data_replication_design_spectrum&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codewords.recurse.com&#x2F;issues&#x2F;three&#x2F;algebra-and-calculus-of-algebraic-data-types&quot;&gt;The algebra (and calculus!) of algebraic data types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mfbveg&#x2F;algebra_calculus_algebraic_data_types&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;len.falken.directory&#x2F;types-rust-zig.html&quot;&gt;Types comparison: Rust -&amp;gt; Zig&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wtk2rk&#x2F;types_comparison_rust_zig&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;preshing.com&#x2F;20130605&#x2F;the-worlds-simplest-lock-free-hash-table&#x2F;&quot;&gt;The World&#x27;s Simplest Lock-Free Hash Table (2013)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yhe6ag&#x2F;world_s_simplest_lock_free_hash_table_2013&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;intuitiveexplanations.com&#x2F;tech&#x2F;kalyn&quot;&gt;Kalyn: a self-hosting compiler for x86-64&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kst55f&#x2F;kalyn_self_hosting_compiler_for_x86_64&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;pinned-places&#x2F;&quot;&gt;Pinned places&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pedtr9&#x2F;pinned_places&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;izzys.casa&#x2F;2024&#x2F;11&#x2F;on-safe-cxx&#x2F;&quot;&gt;On &quot;Safe&quot; C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rawcyg&#x2F;on_safe_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;pin&#x2F;&quot;&gt;Pin&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vp7jca&#x2F;pin&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.gistre.epita.fr&#x2F;posts&#x2F;benjamin.peter-2022-10-28-address_sanitizer_internals&#x2F;&quot;&gt;Address Sanitizer Internals&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ltzril&#x2F;address_sanitizer_internals&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tigerbeetle.com&#x2F;blog&#x2F;2023-07-26-copy-hunting&#x2F;&quot;&gt;Copy Hunting&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xkpgwp&#x2F;copy_hunting&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;2024-08-20-deterministic-simulation-testing.html&quot;&gt;What&#x27;s the big deal about Deterministic Simulation Testing?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ohajgb&#x2F;what_s_big_deal_about_deterministic&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notgull.net&#x2F;why-not-threads&#x2F;&quot;&gt;Why choose async&#x2F;await over threads?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hl5gkk&#x2F;why_choose_async_await_over_threads&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eli.thegreenplace.net&#x2F;2017&#x2F;on-recursion-continuations-and-trampolines&#x2F;&quot;&gt;On Recursion, Continuations and Trampolines&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;iuf6hn&#x2F;on_recursion_continuations_trampolines&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;roytanck.com&#x2F;2023&#x2F;12&#x2F;23&#x2F;in-2024-please-switch-to-firefox&#x2F;&quot;&gt;In 2024, please switch to Firefox&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zycaco&#x2F;2024_please_switch_firefox&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;austinhenley.com&#x2F;blog&#x2F;challengingprojects.html&quot;&gt;Challenging projects every programmer should try (2019)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;urnmru&#x2F;challenging_projects_every_programmer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jonathan-frere.com&#x2F;posts&#x2F;why-test&#x2F;&quot;&gt;Why Test?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;prowkp&#x2F;why_test&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.recompiled.dev&#x2F;blog&#x2F;type-system&#x2F;&quot;&gt;Type system of the React compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4jatzz&#x2F;type_system_react_compiler&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.testdouble.com&#x2F;posts&#x2F;2023-07-12-the-looming-demise-of-the-10x-developer&#x2F;&quot;&gt;The looming demise of the 10x developer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ng43it&#x2F;looming_demise_10x_developer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rainingcomputers.blog&#x2F;dist&#x2F;the_path_to_implementing_a_programming_language.md&quot;&gt;The path to implementing a programming language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nv6o5y&#x2F;path_implementing_programming_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitchard.github.io&#x2F;posts&#x2F;2024-09-10-big-datatype.html&quot;&gt;Big Datatype: why code tools like to be written with fancy types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zuavvm&#x2F;big_datatype_why_code_tools_like_be&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frankmcsherry&#x2F;blog&#x2F;blob&#x2F;master&#x2F;posts&#x2F;2024-09-10.md&quot;&gt;A Fascinating Diversion into Compression&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ox82jj&#x2F;fascinating_diversion_into_compression&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.waleedkhan.name&#x2F;encoding-ml-style-modules-in-rust&#x2F;&quot;&gt;Encoding ML-style modules in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hcwjcs&#x2F;encoding_ml_style_modules_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;trouble.mataroa.blog&#x2F;blog&#x2F;asyncawait-is-real-and-can-hurt-you&#x2F;&quot;&gt;Async&#x2F;Await Is Real And Can Hurt You&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;3zbdil&#x2F;async_await_is_real_can_hurt_you&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;txcnjn&#x2F;memory_safe_c&quot;&gt;Memory Safe C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;txcnjn&#x2F;memory_safe_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;avestura.dev&#x2F;blog&#x2F;ideal-programming-language&quot;&gt;An opinion on what&#x27;s a good general-purpose programming language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tx4s9v&#x2F;opinion_on_what_s_good_general_purpose&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tontinton.com&#x2F;posts&#x2F;database-fundementals&#x2F;&quot;&gt;Database Fundamentals&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hnhlqu&#x2F;database_fundamentals&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;how-capabilities-work-austral&quot;&gt;How Capabilities Work in Austral&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qbeqio&#x2F;how_capabilities_work_austral&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;joshaustin.tech&#x2F;blog&#x2F;java-is-becoming-rust&#x2F;&quot;&gt;Java is becoming more like Rust, and I am here for it&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jracje&#x2F;java_is_becoming_more_like_rust_i_am_here&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.chriswarbo.net&#x2F;blog&#x2F;2024-05-24-nix_build_system.html&quot;&gt;Nix is a build system&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pt1p9w&#x2F;nix_is_build_system&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eli.thegreenplace.net&#x2F;2024&#x2F;implementing-raft-part-5-exactly-once-delivery&#x2F;&quot;&gt;Implementing Raft: Part 5 - Exactly-once delivery&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ab2rnz&#x2F;implementing_raft_part_5_exactly_once&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;samwho.dev&#x2F;turing-machines&#x2F;&quot;&gt;Turing Machines&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;klf87z&#x2F;turing_machines&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.circle-lang.org&#x2F;interop.html&quot;&gt;Building Bridges to C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vgjlrw&#x2F;building_bridges_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;morestina.net&#x2F;blog&#x2F;1976&#x2F;a-close-encounter-with-false-sharing&quot;&gt;A close encounter with false sharing&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yw4w6j&#x2F;close_encounter_with_false_sharing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ehatti.github.io&#x2F;blog&#x2F;nbe.html&quot;&gt;You Could Have Invented Normalization-by-Evaluation&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nkerye&#x2F;you_could_have_invented_normalization_by&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zkrising.com&#x2F;writing&#x2F;rusts-most-subtle-syntax&#x2F;&quot;&gt;Rust&#x27;s Most Subtle Syntax&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tzdlzk&#x2F;rust_s_most_subtle_syntax&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pvs-studio.com&#x2F;en&#x2F;blog&#x2F;posts&#x2F;cpp&#x2F;1178&#x2F;&quot;&gt;C++ programmer′s guide to undefined behavior: part 8 of 11&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vbknxm&#x2F;c_programmer_s_guide_undefined_behavior&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2024&#x2F;11&#x2F;05&#x2F;minpin&#x2F;&quot;&gt;MinPin: yet another pin proposal&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mtoad0&#x2F;minpin_yet_another_pin_proposal&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.danielgratzer.com&#x2F;papers&#x2F;type-theory-book.pdf&quot;&gt;Principles of Dependent Type Theory&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wbxot8&#x2F;principles_dependent_type_theory&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xnacly.me&#x2F;posts&#x2F;2024&#x2F;rust-pldev&quot;&gt;Why I love Rust for tokenising and parsing&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ahtlte&#x2F;why_i_love_rust_for_tokenising_parsing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pushtoprod.substack.com&#x2F;p&#x2F;netflix-terrifying-concurrency-bug&quot;&gt;How We Built a Self-Healing System to Survive a Terrifying Concurrency Bug At Netflix&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yulcql&#x2F;how_we_built_self_healing_system_survive&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hg.sr.ht&#x2F;~icefox&#x2F;determination&quot;&gt;determination: Rust typecheckers for System F and System F-omega&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hdbvyy&#x2F;determination_rust_typecheckers_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.jle.im&#x2F;entry&#x2F;functors-to-monads-a-story-of-shapes.html&quot;&gt;Functors to Monads: A Story of Shapes&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;q9dovm&#x2F;functors_monads_story_shapes&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;12&#x2F;10&#x2F;nsfw.html&quot;&gt;Non-Send Futures When?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9q7awe&#x2F;non_send_futures_when&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;scrapscript-tricks&#x2F;&quot;&gt;Some tricks from the Scrapscript compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xghu9w&#x2F;some_tricks_from_scrapscript_compiler&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;adam.nels.onl&#x2F;blog&#x2F;maybe-everything-is-a-coroutine&#x2F;&quot;&gt;Maybe Everything Is a Coroutine&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;njr9cn&#x2F;maybe_everything_is_coroutine&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;justinjaffray.com&#x2F;what-is-a-query-optimizer-for&#x2F;&quot;&gt;What is a Query Optimizer for?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wbpbnp&#x2F;what_is_query_optimizer_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;2024-02-08-an-intuition-for-distributed-consensus-in-oltp-systems.html&quot;&gt;An intuition for distributed consensus in OLTP systems&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jd2bpt&#x2F;intuition_for_distributed_consensus&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stevana.github.io&#x2F;towards_zero-downtime_upgrades_of_stateful_systems.html&quot;&gt;Towards zero-downtime upgrades of stateful systems&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2w7wc7&#x2F;towards_zero_downtime_upgrades_stateful&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cole-k.com&#x2F;2023&#x2F;07&#x2F;24&#x2F;e-graphs-primer&#x2F;&quot;&gt;The e-graph data structure: a gradual introduction&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;f5gjq0&#x2F;e_graph_data_structure_gradual&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;emschwartz.me&#x2F;async-rust-can-be-a-pleasure-to-work-with-without-send-sync-static&#x2F;&quot;&gt;Async Rust can be a pleasure to work with (without &lt;code&gt;Send + Sync + &#x27;static&lt;&#x2F;code&gt;)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ojm6cn&#x2F;async_rust_can_be_pleasure_work_with&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;research.swtch.com&#x2F;ub&quot;&gt;C and C++ Prioritize Performance over Correctness&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qvolpv&#x2F;c_c_prioritize_performance_over&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;d0ptcu&#x2F;what_are_your_favourite_pieces_software&quot;&gt;What are your favourite pieces of software?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;d0ptcu&#x2F;what_are_your_favourite_pieces_software&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.glyph.im&#x2F;2024&#x2F;05&#x2F;grand-unified-ai-hype.html&quot;&gt;A Grand Unified Theory of the AI Hype Cycle&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nvmrfz&#x2F;grand_unified_theory_ai_hype_cycle&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;6764953&#x2F;what-is-the-reason-for-the-a-b-prefixes-of-git-diff&quot;&gt;What is the reason for the &#x2F;a &#x2F;b prefixes of git diff?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yf0qs8&#x2F;what_is_reason_for_b_prefixes_git_diff&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coredumped.dev&#x2F;2024&#x2F;09&#x2F;09&#x2F;what-is-the-best-pointer-tagging-method&#x2F;&quot;&gt;What is the best pointer tagging method?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zbx4cu&#x2F;what_is_best_pointer_tagging_method&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;decomposition.al&#x2F;blog&#x2F;2023&#x2F;12&#x2F;31&#x2F;a-cap-tradeoff-in-the-wild&#x2F;&quot;&gt;A CAP tradeoff in the wild&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ddlviu&#x2F;cap_tradeoff_wild&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arne.me&#x2F;articles&#x2F;emacs-from-scratch-part-one-foundations&quot;&gt;Emacs From Scratch, Part 1: Foundations&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fnxqjn&#x2F;emacs_from_scratch_part_1_foundations&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tonbo.io&#x2F;blog&#x2F;threads-with-webassembly&quot;&gt;Threads with WebAssembly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4ndvxf&#x2F;threads_with_webassembly&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.influxdata.com&#x2F;blog&#x2F;datafusion-2025-influxdb&#x2F;&quot;&gt;2025: The Year of 1,000 DataFusion-Based Systems&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;my8b6i&#x2F;2025_year_1_000_datafusion_based_systems&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.sequinstream.com&#x2F;postgres-sequences-can-commit-out-of-order&quot;&gt;Postgres sequences can commit out-of-order&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mkhvi7&#x2F;postgres_sequences_can_commit_out_order&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;brevzin.github.io&#x2F;c++&#x2F;2024&#x2F;07&#x2F;24&#x2F;constexpr-alloc&#x2F;&quot;&gt;What’s so hard about constexpr allocation?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ouhxs6&#x2F;what_s_so_hard_about_constexpr_allocation&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elixir-lang.org&#x2F;blog&#x2F;2023&#x2F;06&#x2F;22&#x2F;type-system-updates-research-dev&#x2F;&quot;&gt;Elixir type system updates moving from research into development&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;stacig&#x2F;elixir_type_system_updates_moving_from&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2024&#x2F;06&#x2F;26&#x2F;claim-followup-1&#x2F;&quot;&gt;More thoughts on claiming&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vuvhca&#x2F;more_thoughts_on_claiming&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;utcc.utoronto.ca&#x2F;~cks&#x2F;space&#x2F;blog&#x2F;programming&#x2F;RustIsInevitable&quot;&gt;More use of Rust is inevitable in open source software&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cd8mty&#x2F;more_use_rust_is_inevitable_open_source&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;engineering.fb.com&#x2F;2023&#x2F;04&#x2F;06&#x2F;open-source&#x2F;buck2-open-source-large-scale-build-system&#x2F;&quot;&gt;Build faster with Buck2: Our open source build system&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;b0fkuh&#x2F;build_faster_with_buck2_our_open_source&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jackywoo.cn&#x2F;ck-internal-how-clickhouse-do-aggregating-en&#x2F;&quot;&gt;The Inside Story of ClickHouse (9): How to Perform Aggregation&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zmt8ul&#x2F;inside_story_clickhouse_9_how_perform&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graydon2.dreamwidth.org&#x2F;312681.html&quot;&gt;Some notes on Rust, mutable aliasing and formal verification&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rushnh&#x2F;some_notes_on_rust_mutable_aliasing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ryelang.org&#x2F;blog&#x2F;posts&#x2F;rye-concurrency-go&#x2F;&quot;&gt;Go&#x27;s concurrency in a dynamic language Rye&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mnuhwc&#x2F;go_s_concurrency_dynamic_language_rye&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kyju.org&#x2F;blog&#x2F;rust-safe-garbage-collection&#x2F;&quot;&gt;Techniques for Safe Garbage Collection in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qbockn&#x2F;techniques_for_safe_garbage_collection&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pikuma.com&#x2F;blog&#x2F;understanding-computer-cache&quot;&gt;How Cache Memory Works&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;s2zxwx&#x2F;how_cache_memory_works&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;obi1kenobi&#x2F;trustfall&quot;&gt;Trustfall&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wapcwu&#x2F;trustfall&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cedardb.com&#x2F;blog&#x2F;reducing_branches&#x2F;&quot;&gt;Why Trees Without Branches Grow Faster: The Case for Reducing Branches in Code&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;s89gxq&#x2F;why_trees_without_branches_grow_faster&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.sigplan.org&#x2F;2025&#x2F;01&#x2F;29&#x2F;parametric-subtyping-for-structural-parametric-polymorphism&#x2F;&quot;&gt;Parametric Subtyping for Structural Parametric Polymorphism&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nqy7uq&#x2F;parametric_subtyping_for_structural&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ralfj.de&#x2F;blog&#x2F;2020&#x2F;12&#x2F;14&#x2F;provenance.html&quot;&gt;Pointers Are Complicated II, or: We need better language specs (2020)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yubalv&#x2F;pointers_are_complicated_ii_we_need&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.janestreet.com&#x2F;how-we-accidentally-built-a-better-build-system-for-ocaml-index&#x2F;&quot;&gt;How Jane Street accidentally built a better build system for OCaml&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2an1ay&#x2F;how_jane_street_accidentally_built&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2025&#x2F;01&#x2F;29&#x2F;preview-crates&#x2F;&quot;&gt;Preview crates&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bark5a&#x2F;preview_crates&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;octavelarose.github.io&#x2F;2025&#x2F;01&#x2F;30&#x2F;mmtk.html&quot;&gt;Adding garbage collection to our Rust-based interpreters with MMTk&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uggzag&#x2F;adding_garbage_collection_our_rust_based&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;simonask.github.io&#x2F;introducing-werk&#x2F;&quot;&gt;Introducing Werk&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9xtd4v&#x2F;introducing_werk&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;motherduck.com&#x2F;blog&#x2F;perf-is-not-enough&#x2F;&quot;&gt;Perf is not enough&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kv9znz&#x2F;perf_is_not_enough&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;toy-abstract-interpretation&#x2F;&quot;&gt;Abstract interpretation in the Toy Optimizer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xkcrvn&#x2F;abstract_interpretation_toy_optimizer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hirrolot.github.io&#x2F;posts&#x2F;compiler-development-rust-or-ocaml.html#appendix-getting-started-with-ocaml&quot;&gt;Compiler Development: Rust or OCaml?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yfyub2&#x2F;compiler_development_rust_ocaml&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;d5qwzs&#x2F;what_is_your_mac_os_setup&quot;&gt;What is your Mac OS Setup?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;d5qwzs&#x2F;what_is_your_mac_os_setup&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eventhelix.com&#x2F;rust&#x2F;rust-to-assembly-static-vs-dynamic-dispatch&#x2F;&quot;&gt;Compare the Assembly Generated for Static vs Dynamic Dispatch in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;p6ncen&#x2F;compare_assembly_generated_for_static_vs&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;type-inference&#x2F;&quot;&gt;Damas-Hindley-Milner inference two ways&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;t0mywf&#x2F;damas_hindley_milner_inference_two_ways&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lewiscampbell.tech&#x2F;blog&#x2F;250202.html&quot;&gt;Safety in Programming Languages is a Means to an End&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;su4otl&#x2F;safety_programming_languages_is_means&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;btjtkr&#x2F;what_software_do_you_dream_about_do_not&quot;&gt;What software do you dream about, but do not have time to code yourself?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;btjtkr&#x2F;what_software_do_you_dream_about_do_not&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;faultlore.com&#x2F;blah&#x2F;rust-layouts-and-abis&#x2F;&quot;&gt;Notes on Type Layouts and ABIs in Rust (2018)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ezimxi&#x2F;notes_on_type_layouts_abis_rust_2018&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;emschwartz.me&#x2F;pinning-down-future-is-not-send-errors&#x2F;&quot;&gt;Pinning Down &quot;Future Is Not Send&quot; Errors&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4vgdml&#x2F;pinning_down_future_is_not_send_errors&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ityonemo&#x2F;clr&quot;&gt;clr: Checker for Lifetimes and other Refinement types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9sitsj&#x2F;clr_checker_for_lifetimes_other&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;scrapscript-ir&#x2F;&quot;&gt;A compiler IR for Scrapscript&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cqyu02&#x2F;compiler_ir_for_scrapscript&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eli.thegreenplace.net&#x2F;2025&#x2F;decorator-jits-python-as-a-dsl&#x2F;&quot;&gt;Decorator JITs - Python as a DSL&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rgydie&#x2F;decorator_jits_python_as_dsl&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elric.pl&#x2F;blog&#x2F;cooperative-multitasking&quot;&gt;Cooperative multitasking in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;i6c3zr&#x2F;cooperative_multitasking_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scottredig.com&#x2F;blog&#x2F;bonkers_comptime&#x2F;&quot;&gt;Zig&#x27;s Comptime is Bonkers Good&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;s0zjay&#x2F;zig_s_comptime_is_bonkers_good&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;blog.sigfpe.com&#x2F;2009&#x2F;05&#x2F;three-projections-of-doctor-futamura.html&quot;&gt;The Three Projections of Doctor Futamura (2009)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;b9ezyc&#x2F;three_projections_doctor_futamura_2009&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yorickpeterse.com&#x2F;articles&#x2F;the-inevitability-of-the-borrow-checker&#x2F;&quot;&gt;The inevitability of the borrow checker&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ytdpaw&#x2F;inevitability_borrow_checker&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wingolog.org&#x2F;archives&#x2F;2025&#x2F;02&#x2F;09&#x2F;baffled-by-generational-garbage-collection&quot;&gt;baffled by generational garbage collection&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;01i5mu&#x2F;baffled_by_generational_garbage&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;herecomesthemoon.net&#x2F;2025&#x2F;02&#x2F;carbon-is-not-a-language&#x2F;&quot;&gt;Carbon is not a programming language (sort of)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tn7hqo&#x2F;carbon_is_not_programming_language_sort&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;def.lakaban.net&#x2F;research&#x2F;#lrgrep-selecting-error-messages-for-lr-parsers&quot;&gt;LRGrep: Selecting Error Messages for LR parsers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;p11wif&#x2F;lrgrep_selecting_error_messages_for_lr&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rxdb.info&#x2F;articles&#x2F;localstorage-indexeddb-cookies-opfs-sqlite-wasm.html&quot;&gt;LocalStorage vs. IndexedDB vs. Cookies vs. OPFS vs. WASM-SQLite&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wrh2rs&#x2F;localstorage_vs_indexeddb_vs_cookies_vs&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;comments&#x2F;1huv4cf&#x2F;so_youre_writing_a_programming_language&#x2F;&quot;&gt;So you&#x27;re writing a programming language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sckewp&#x2F;so_you_re_writing_programming_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;registerspill.thorstenball.com&#x2F;p&#x2F;they-all-use-it&quot;&gt;They all use it&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;v3zarc&#x2F;they_all_use_it&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.wesleyac.com&#x2F;posts&#x2F;how-i-run-my-servers&quot;&gt;How I run my servers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mzlyyf&#x2F;how_i_run_my_servers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tavianator.com&#x2F;2023&#x2F;bfs_3.0.html&quot;&gt;bfs 3.0: the fastest find yet&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qohs5y&#x2F;bfs_3_0_fastest_find_yet&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ryleealanza.org&#x2F;2023&#x2F;06&#x2F;21&#x2F;The-Seamstress-Event-Loop-in-Zig.html&quot;&gt;The Seamstress Event Loop In Zig&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2yzqmv&#x2F;seamstress_event_loop_zig&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;verdagon.dev&#x2F;blog&#x2F;exploring-seamless-rust-interop-part-2&quot;&gt;Crossing the Impossible FFI Boundary, and My Gradual Descent Into Madness&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;raujqa&#x2F;crossing_impossible_ffi_boundary_my&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wingolog.org&#x2F;archives&#x2F;2023&#x2F;02&#x2F;07&#x2F;whippet-towards-a-new-local-maximum&quot;&gt;whippet: towards a new local maximum&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zivvw7&#x2F;whippet_towards_new_local_maximum&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ralfj.de&#x2F;blog&#x2F;2024&#x2F;08&#x2F;14&#x2F;places.html&quot;&gt;Place expressions and value expressions in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ci470u&#x2F;place_expressions_value_expressions&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hackmd.io&#x2F;@rust-lang-team&#x2F;rJvv36hq1e&quot;&gt;Enabling seamless interop between Rust and other languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rsfp1p&#x2F;enabling_seamless_interop_between_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustfoundation&#x2F;interop-initiative&quot;&gt;C++&#x2F;Rust Interoperability Problem Statement&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;h0yytn&#x2F;c_rust_interoperability_problem&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fanael.github.io&#x2F;is-x86-risc-internally.html&quot;&gt;The legend of &quot;x86 CPUs decode instructions into RISC form internally&quot;&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;iozq2j&#x2F;legend_x86_cpus_decode_instructions_into&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;self-referential-types&#x2F;&quot;&gt;Ergonomic Self-Referential Types for Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;n2cpfi&#x2F;ergonomic_self_referential_types_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antithesis.com&#x2F;blog&#x2F;deterministic_hypervisor&#x2F;&quot;&gt;So you think you want to write a deterministic hypervisor?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wsx2qe&#x2F;so_you_think_you_want_write_deterministic&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;v8.dev&#x2F;blog&#x2F;leaving-the-sea-of-nodes&quot;&gt;Land ahoy: leaving the Sea of Nodes&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yt4eqa&#x2F;land_ahoy_leaving_sea_nodes&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sidkshatriya&#x2F;me&#x2F;blob&#x2F;master&#x2F;008-rr-everywhere.md&quot;&gt;Bringing Record and Replay everywhere&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ujc13n&#x2F;bringing_record_replay_everywhere&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;justinpombrio.net&#x2F;2024&#x2F;11&#x2F;30&#x2F;typst.html&quot;&gt;Typst as a Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;d2er0v&#x2F;typst_as_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;treecalcul.us&quot;&gt;Tree Calculus&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ezjev6&#x2F;tree_calculus&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xyvwux&#x2F;what_are_your_favorite_non_standard_cli&quot;&gt;What are your favorite non-standard CLI utilities&#x2F;applications&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xyvwux&#x2F;what_are_your_favorite_non_standard_cli&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;weakrefs&#x2F;&quot;&gt;Weak references and garbage collectors&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rtlddh&#x2F;weak_references_garbage_collectors&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.1a-insec.net&#x2F;blog&#x2F;25-zig-reference-semantics&#x2F;&quot;&gt;Zig May Pass Anything By Reference&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;et3ivs&#x2F;zig_may_pass_anything_by_reference&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2023&#x2F;11&#x2F;09&#x2F;parallel-rustc.html&quot;&gt;Faster compilation with the parallel front-end in nightly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gp9scd&#x2F;faster_compilation_with_parallel_front&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;avestura.dev&#x2F;blog&#x2F;what-is-the-type-of-type&quot;&gt;What is the type of Type?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ibtnxo&#x2F;what_is_type_type&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steveklabnik.com&#x2F;writing&#x2F;thinking-like-a-compiler-places-and-values-in-rust&#x2F;&quot;&gt;Thinking like a compiler: places and values in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;3dv6ix&#x2F;thinking_like_compiler_places_values&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;composable-sql&quot;&gt;Composable SQL&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vmyk7d&#x2F;composable_sql&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;registerspill.thorstenball.com&#x2F;p&#x2F;how-fast-is-your-shell&quot;&gt;How fast is your shell?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qgcu7j&#x2F;how_fast_is_your_shell&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.phoronix.com&#x2F;news&#x2F;CPP-Linux-Kernel-2024-Discuss&quot;&gt;A 2024 Discussion Whether To Convert The Linux Kernel From C To Modern C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;dqw5zq&#x2F;2024_discussion_whether_convert_linux&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;typst.app&#x2F;blog&#x2F;2024&#x2F;typst-0.12&#x2F;&quot;&gt;Typst 0.12 is just ... better&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xbknvr&#x2F;typst_0_12_is_just_better&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tycon.github.io&#x2F;modular-implicits.html&quot;&gt;First-Class Modules and Modular Implicits in OCaml (2017)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;p6or46&#x2F;first_class_modules_modular_implicits&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;marijnhaverbeke.nl&#x2F;blog&#x2F;lezer.html&quot;&gt;Lezer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rsubd9&#x2F;lezer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tweedegolf.nl&#x2F;en&#x2F;blog&#x2F;140&#x2F;rust-needs-an-official-specification&quot;&gt;Rust needs an official specification&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zmz8zv&#x2F;rust_needs_official_specification&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;adriacabeza.github.io&#x2F;2024&#x2F;07&#x2F;12&#x2F;caffeine-cache.html&quot;&gt;Analyzing the codebase of Caffeine: a high performance caching library&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;baobft&#x2F;analyzing_codebase_caffeine_high&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kchousos.github.io&#x2F;posts&#x2F;sicp-in-emacs&#x2F;&quot;&gt;SICP in Emacs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;0r1whx&#x2F;sicp_emacs&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;neat-lang.github.io&#x2F;breakelse.html&quot;&gt;breakelse: When Compiler Developers Get Bored&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ozaiyz&#x2F;breakelse_when_compiler_developers_get&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;morepablo.com&#x2F;2023&#x2F;05&#x2F;where-have-all-the-hackers-gone.html&quot;&gt;&quot;Where have all the hackers gone?&quot; + a way to discuss programming languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jhuosw&#x2F;where_have_all_hackers_gone_way_discuss&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.trailofbits.com&#x2F;2024&#x2F;05&#x2F;02&#x2F;the-life-and-times-of-an-abstract-syntax-tree&#x2F;&quot;&gt;The life and times of an Abstract Syntax Tree&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ljlmid&#x2F;life_times_abstract_syntax_tree&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xuanwo.io&#x2F;2023&#x2F;04-rust-std-fs-slower-than-python&#x2F;&quot;&gt;Rust std fs slower than Python!? No, it&#x27;s hardware&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hjxd80&#x2F;rust_std_fs_slower_than_python_no_it_s&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;werat.dev&#x2F;blog&#x2F;how-conditional-breakpoints-work&#x2F;&quot;&gt;How conditional breakpoints work&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;woj8tt&#x2F;how_conditional_breakpoints_work&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kipp.ly&#x2F;jits-impls&#x2F;&quot;&gt;How JIT Compilers are Implemented and Fast: Pypy, LuaJIT, Graal and More&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8yr4r3&#x2F;how_jit_compilers_are_implemented_fast&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ncameron.org&#x2F;blog&#x2F;a-response-to-a-decade-of-developing-a-programming-language&#x2F;&quot;&gt;A response to &#x27;A decade of developing a programming language&#x27;&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;trbciw&#x2F;response_decade_developing_programming&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rtfeldman.com&#x2F;imperative-clothing&quot;&gt;Functional Semantics in Imperative Clothing&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;i8gyah&#x2F;functional_semantics_imperative&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cfallin.org&#x2F;blog&#x2F;2024&#x2F;08&#x2F;28&#x2F;weval&#x2F;&quot;&gt;Compilation of JavaScript to Wasm, part 3: Partial evaluation&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tie1ao&#x2F;compilation_javascript_wasm_part_3&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.jetbrains.com&#x2F;rust&#x2F;2024&#x2F;05&#x2F;21&#x2F;rustrover-is-released-and-includes-a-free-non-commercial-option&#x2F;&quot;&gt;RustRover Is Released and Includes a Free Non-Commercial Option&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;avzof2&#x2F;rustrover_is_released_includes_free_non&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cliffle.com&#x2F;blog&#x2F;who-killed-the-network-switch&#x2F;&quot;&gt;Who Killed the Network Switch? A Hubris Bug Story&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;txapce&#x2F;who_killed_network_switch_hubris_bug&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yqL-MEQ9HQ8&quot;&gt;Usb-C and its overengineered history&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;5zk21i&#x2F;usb_c_its_overengineered_history&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ohadravid.github.io&#x2F;posts&#x2F;2025-04-08-btrees-and-mental-models&#x2F;&quot;&gt;BTrees, Inverted Indices, and a Model for Full Text Search&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cmrgzh&#x2F;btrees_inverted_indices_model_for_full&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;natkr.com&#x2F;2025-04-10-async-from-scratch-1&#x2F;&quot;&gt;Async from scratch 1: What&#x27;s in a Future, anyway?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zqqvms&#x2F;async_from_scratch_1_what_s_future_anyway&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facet-rs&#x2F;facet&quot;&gt;facet: Rust reflection, serialization, deserialization — know the shape of your types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hnnrdn&#x2F;facet_rust_reflection_serialization&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;concurrencyfreaks.blogspot.com&#x2F;2023&#x2F;12&#x2F;why-is-snapshot-isolation-not-enough.html&quot;&gt;Why is Snapshot Isolation not enough?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9s6mep&#x2F;why_is_snapshot_isolation_not_enough&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;neighbourhood.ie&#x2F;blog&#x2F;2025&#x2F;04&#x2F;06&#x2F;how-to-sync-anything&quot;&gt;How to Sync Anything&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bcdwwa&#x2F;how_sync_anything&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;overreacted.io&#x2F;react-for-two-computers&#x2F;&quot;&gt;React for Two Computers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2ixxem&#x2F;react_for_two_computers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.philipzucker.com&#x2F;knuckle_C_pcode&#x2F;&quot;&gt;&quot;Verified&quot; &quot;Compilation&quot; of &quot;Python&quot; with Knuckledragger, GCC, and Ghidra&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;b9kbg3&#x2F;verified_compilation_python_with&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stevana.github.io&#x2F;erlangs_not_about_lightweight_processes_and_message_passing.html&quot;&gt;Erlang’s not about lightweight processes and message passing…&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4fee7y&#x2F;erlang_s_not_about_lightweight_processes&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;futures-unordered&#x2F;&quot;&gt;FuturesUnordered and the order of futures&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;u4h9ff&#x2F;futuresunordered_order_futures&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ocamlpro.com&#x2F;blog&#x2F;2024_05_07_the_flambda2_snippets_2&#x2F;&quot;&gt;Flambda2 Ep. 2: Loopifying Tail-Recursive Functions&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;0u5b9u&#x2F;flambda2_ep_2_loopifying_tail_recursive&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yorickpeterse.com&#x2F;articles&#x2F;a-decade-of-developing-a-programming-language&#x2F;&quot;&gt;A decade of developing a programming language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wyeffq&#x2F;decade_developing_programming_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discuss.bbchallenge.org&#x2F;t&#x2F;july-2nd-2024-we-have-proved-bb-5-47-176-870&#x2F;237&quot;&gt;We have proved &quot;BB(5) = 47,176,870&quot;&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jnrxuv&#x2F;we_have_proved_bb_5_47_176_870&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;stratus3d.com&#x2F;blog&#x2F;2023&#x2F;07&#x2F;18&#x2F;what-i-learned-building-a-cli-app-in-rust&#x2F;&quot;&gt;What I Learned Building a CLI App in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ql9vt1&#x2F;what_i_learned_building_cli_app_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.hillelwayne.com&#x2F;post&#x2F;np-hard&#x2F;&quot;&gt;NP-Complete isn&#x27;t (always) Hard&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4gkrmb&#x2F;np_complete_isn_t_always_hard&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dureuill.net&#x2F;articles&#x2F;recurring-lifetime&#x2F;&quot;&gt;A curiously recurring lifetime issue&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zzuirh&#x2F;curiously_recurring_lifetime_issue&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wbwtgm&#x2F;good_theory_books_you_would_recommend&quot;&gt;Good theory books you would recommend?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wbwtgm&#x2F;good_theory_books_you_would_recommend&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ocamlpro.com&#x2F;blog&#x2F;2024_08_09_the_flambda2_snippets_3&#x2F;&quot;&gt;Flambda2 Ep. 3: Speculative Inlining&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;z4jjjp&#x2F;flambda2_ep_3_speculative_inlining&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;writing&#x2F;the-missing-tier-for-query-compilers&#x2F;&quot;&gt;The missing tier for query compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;j3j2kt&#x2F;missing_tier_for_query_compilers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;3360553&quot;&gt;Derivative grammars: a symbolic approach to parsing with derivatives&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;3dlozj&#x2F;derivative_grammars_symbolic_approach&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zed.dev&#x2F;blog&#x2F;zed-decoded-async-rust&quot;&gt;Async Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;myqnqs&#x2F;async_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.craigstuntz.com&#x2F;posts&#x2F;2023-10-13-learning-compilers-and-programming-languages.html&quot;&gt;On Learning Compilers and Creating Programming Languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tpe028&#x2F;on_learning_compilers_creating&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;entropicthoughts.com&#x2F;haskell-procedural-programming&quot;&gt;Haskell: A Great Procedural Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lvjc6k&#x2F;haskell_great_procedural_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;danielchasehooper.com&#x2F;posts&#x2F;why-swift-is-slow&#x2F;&quot;&gt;Why Swift&#x27;s type checker is slow&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;p30juy&#x2F;why_swift_s_type_checker_is_slow&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maknee.github.io&#x2F;blog&#x2F;2025&#x2F;3FS-Performance-Journal-1&#x2F;&quot;&gt;An Intro to DeepSeek&#x27;s Distributed File System&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;1cfddf&#x2F;intro_deepseek_s_distributed_file_system&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;two-years-of-rust&quot;&gt;Two Years of Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;v7lsrv&#x2F;two_years_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mcyoung.xyz&#x2F;2023&#x2F;03&#x2F;29&#x2F;rseq-checkout&#x2F;&quot;&gt;Atomicless Concurrency (2023)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hscqec&#x2F;atomicless_concurrency_2023&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ocamlpro.com&#x2F;blog&#x2F;2025_02_19_the_flambda2_snippets_4&#x2F;&quot;&gt;Flambda2 Ep. 4: How to write a purely functional compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ta5a6w&#x2F;flambda2_ep_4_how_write_purely_functional&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;natkr.com&#x2F;2025-04-15-async-from-scratch-2&#x2F;&quot;&gt;Async from scratch 2: Wake me maybe&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vn6j5k&#x2F;async_from_scratch_2_wake_me_maybe&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;transactional.blog&#x2F;blog&#x2F;2025-decomposing-transactional-systems&quot;&gt;Decomposing Transactional Systems&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wgiqko&#x2F;decomposing_transactional_systems&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jonathan.protzenko.fr&#x2F;2025&#x2F;04&#x2F;18&#x2F;python.html&quot;&gt;15,000 lines of verified cryptography now in Python&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8an4my&#x2F;15_000_lines_verified_cryptography_now&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.well-typed.com&#x2F;blog&#x2F;2023&#x2F;04&#x2F;falsify&#x2F;&quot;&gt;falsify: Hypothesis-inspired shrinking for Haskell&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ywiqey&#x2F;falsify_hypothesis_inspired_shrinking&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wiki.alopex.li&#x2F;SurveyOfSystemLanguages2024&quot;&gt;A Survey Of System Languages (2024)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;c3dbkh&#x2F;survey_system_languages_2024&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thume.ca&#x2F;2023&#x2F;12&#x2F;02&#x2F;tracing-methods&#x2F;&quot;&gt;All my favorite tracing tools: eBPF, QEMU, Perfetto, new ones I built and more&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8992zd&#x2F;all_my_favorite_tracing_tools_ebpf_qemu&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kobzol.github.io&#x2F;rust&#x2F;2025&#x2F;01&#x2F;15&#x2F;async-rust-is-about-concurrency.html&quot;&gt;Async Rust is about concurrency, not (just) performance&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lr7jor&#x2F;async_rust_is_about_concurrency_not_just&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dustycloud.org&#x2F;blog&#x2F;how-decentralized-is-bluesky&#x2F;&quot;&gt;How decentralized is Bluesky really?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zmnr01&#x2F;how_decentralized_is_bluesky_really&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;8SGMy9ENGz8&quot;&gt;How Designing Carbon C++ Interop Taught me About C++ Variadics &amp;amp; Bound Members&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fbyu2n&#x2F;how_designing_carbon_c_interop_taught_me&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sander.saares.eu&#x2F;2024&#x2F;11&#x2F;06&#x2F;why-is-stdpinpin-so-weird&#x2F;&quot;&gt;Why is std::pin::Pin so weird?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8lubts&#x2F;why_is_std_pin_pin_so_weird&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hborla&#x2F;swift-evolution&#x2F;blob&#x2F;approachable-concurrency-vision&#x2F;visions&#x2F;approachable-concurrency.md&quot;&gt;Improving the approachability of data-race safety&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fsbkzg&#x2F;improving_approachability_data_race&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=lifFgyB77zc&quot;&gt;The most elegant search data structure | (a,b)-trees&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xm8yyj&#x2F;most_elegant_search_data_structure_b&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xav.io&#x2F;blog&#x2F;rust-formal-verification&#x2F;&quot;&gt;Visions of the future: formal verification in Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fekcju&#x2F;visions_future_formal_verification_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dureuill.net&#x2F;articles&#x2F;too-dangerous-cpp&#x2F;&quot;&gt;Too dangerous for C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lunvg8&#x2F;too_dangerous_for_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wingolog.org&#x2F;archives&#x2F;2023&#x2F;12&#x2F;07&#x2F;the-last-5-years-of-v8s-garbage-collector&quot;&gt;The last 5 years of V8&#x27;s garbage collector&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wrd9ff&#x2F;last_5_years_v8_s_garbage_collector&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;injuly.in&#x2F;blog&#x2F;defunct&#x2F;&quot;&gt;Compiling higher order functions with GADTs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bjvznb&#x2F;compiling_higher_order_functions_with&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ianthehenry.com&#x2F;posts&#x2F;my-kind-of-repl&#x2F;&quot;&gt;My Kind of REPL&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xsquae&#x2F;my_kind_repl&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;2023-09-21-how-do-databases-execute-expressions.html&quot;&gt;How do databases execute expressions?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tkzyme&#x2F;how_do_databases_execute_expressions&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dave.tf&#x2F;post&#x2F;linux-pid0&#x2F;&quot;&gt;What is PID 0?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sa0meo&#x2F;what_is_pid_0&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;pdf&#x2F;10.1145&#x2F;3527320&quot;&gt;Effects, capabilities, and boxes: from scope-based reasoning to type-based reasoning and back (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qxezif&#x2F;effects_capabilities_boxes_from_scope&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;determinate.systems&#x2F;posts&#x2F;zero-to-nix&quot;&gt;Introducing: Zero to Nix&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kf3xym&#x2F;introducing_zero_nix&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;osa1.net&#x2F;posts&#x2F;2023-04-24-ocaml-thoughts.html&quot;&gt;My thoughts on OCaml&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jvxb8s&#x2F;my_thoughts_on_ocaml&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lucumr.pocoo.org&#x2F;2024&#x2F;3&#x2F;26&#x2F;rust-cdo&#x2F;&quot;&gt;On Tech Debt: My Rust Library is now a CDO&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zag1bo&#x2F;on_tech_debt_my_rust_library_is_now_cdo&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.michaelpj.com&#x2F;blog&#x2F;2024&#x2F;09&#x2F;03&#x2F;lsp-good-bad-ugly.html&quot;&gt;LSP: the good, the bad, and the ugly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;dzk5tp&#x2F;lsp_good_bad_ugly&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2025&#x2F;04&#x2F;19&#x2F;things-zig-comptime-wont-do.html&quot;&gt;Things Zig comptime Won&#x27;t Do&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yhtpk0&#x2F;things_zig_comptime_won_t_do&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;web.ist.utl.pt&#x2F;nuno.lopes&#x2F;pubs&#x2F;ub-pldi25.pdf&quot;&gt;Exploiting Undefined Behavior in C&#x2F;C++ Programs for Optimization: A Study on the Performance Impact&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fywpfw&#x2F;exploiting_undefined_behavior_c_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zed.dev&#x2F;blog&#x2F;zed-decoded-linux-when&quot;&gt;Zed Decoded: Linux when?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lj5st0&#x2F;zed_decoded_linux_when&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xeiaso.net&#x2F;blog&#x2F;xesite-v4&#x2F;&quot;&gt;Okay, fine, I&#x27;m using a static site generator now&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fauwpt&#x2F;okay_fine_i_m_using_static_site_generator&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jsoverson.medium.com&#x2F;was-rust-worth-it-f43d171fb1b3&quot;&gt;Was Rust Worth It For Us?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hpxj9o&#x2F;was_rust_worth_it_for_us&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tigerbeetle&#x2F;tigerbeetle&#x2F;blob&#x2F;main&#x2F;docs&#x2F;internals&#x2F;ARCHITECTURE.md&quot;&gt;TigerBeetle Architecture&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;b5buoi&#x2F;tigerbeetle_architecture&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.philipzucker.com&#x2F;knuckle_typeclass&#x2F;&quot;&gt;Generics and Typeclasses in Knuckledragger&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;dhfbu9&#x2F;generics_typeclasses_knuckledragger&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2024&#x2F;06&#x2F;21&#x2F;claim-auto-and-otherwise&#x2F;&quot;&gt;Claiming, auto and otherwise&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;3yblc2&#x2F;claiming_auto_otherwise&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;2024.splashcon.org&#x2F;details&#x2F;iwaco-2024-papers&#x2F;5&#x2F;Modular-Borrowing-Without-Ownership-or-Linear-Types&quot;&gt;Modular Borrowing Without Ownership or Linear Types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;evjohn&#x2F;modular_borrowing_without_ownership&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;row-poly&#x2F;&quot;&gt;Adding row polymorphism to Damas-Hindley-Milner&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;23nc0b&#x2F;adding_row_polymorphism_damas_hindley&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;chadaustin.me&#x2F;2024&#x2F;10&#x2F;intrusive-linked-list-in-rust&#x2F;&quot;&gt;Unsafe Rust Is Harder Than C&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;g9ob2p&#x2F;unsafe_rust_is_harder_than_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;generators-with-unpin-cell&#x2F;&quot;&gt;Generators with UnpinCell&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zh4h99&#x2F;generators_with_unpincell&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;types.pl&#x2F;@safinaskar&#x2F;111325536022277867&quot;&gt;The most ugly trick in Rust language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uersyg&#x2F;most_ugly_trick_rust_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;writing&#x2F;hytradboi-2025-postmortem&#x2F;&quot;&gt;HYTRADBOI 2025 postmortem&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;icz96h&#x2F;hytradboi_2025_postmortem&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;team.charmiq.ai&#x2F;@surfacetension&#x2F;building-blocks&#x2F;asp-01-just-the-facts&quot;&gt;Answer Set Programming 01 | Just the Facts&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gz90fx&#x2F;answer_set_programming_01_just_facts&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crowdhailer.me&#x2F;2025-02-14&#x2F;algebraic-effects-are-a-functional-approach-to-manage-side-effects&#x2F;&quot;&gt;Algebraic effects are a functional approach to manage side effects&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;b7gvbq&#x2F;algebraic_effects_are_functional&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;david-delassus.medium.com&#x2F;distributed-systems-without-raft-part-1-a6b0b43db7ee&quot;&gt;Distributed Systems without Raft (part 1)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wccows&#x2F;distributed_systems_without_raft_part_1&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;3712057&quot;&gt;Systems Correctness Practices at AWS: Leveraging Formal and Semi-formal Methods&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pjbdph&#x2F;systems_correctness_practices_at_aws&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;inria.hal.science&#x2F;hal-04165615&quot;&gt;Bit-Stealing Made Legal: Compilation for Custom Memory Representations Of Algebraic Data Types&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;suafzq&#x2F;bit_stealing_made_legal_compilation_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;glaubercosta-11125.medium.com&#x2F;career-advice-for-young-system-programmers-c7443f2d3edf&quot;&gt;Career advice for young system programmers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mx9hxr&#x2F;career_advice_for_young_system&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jerf.org&#x2F;iri&#x2F;post&#x2F;2025&#x2F;programming_language_ideas&#x2F;&quot;&gt;Some Programming Language Ideas&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zmm8eg&#x2F;some_programming_language_ideas&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=sC1B3d9C_sI&quot;&gt;TigerBeetle on The Primeagen&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2rwzq4&#x2F;tigerbeetle_on_primeagen&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dada-lang.org&#x2F;&quot;&gt;Dada, an experiement by the creators of Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pmhf1a&#x2F;dada_experiement_by_creators_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;axisofeval.blogspot.com&#x2F;2024&#x2F;11&#x2F;an-alternative-idea-for-typed-language.html&quot;&gt;An alternative idea for a typed language living alongside&#x2F;inside JavaScript&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;d3qqgv&#x2F;alternative_idea_for_typed_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;typesanitizer.com&#x2F;blog&#x2F;errors.html&quot;&gt;An epic treatise on error models for systems programming languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;az2qlz&#x2F;epic_treatise_on_error_models_for_systems&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.email&#x2F;jaffray&#x2F;archive&#x2F;databases-are-not-compilers&#x2F;&quot;&gt;Databases are not Compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;retfuv&#x2F;databases_are_not_compilers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.polybdenum.com&#x2F;2023&#x2F;03&#x2F;05&#x2F;fixing-the-next-10-000-aliasing-bugs.html&quot;&gt;Fixing the Next 10,000 Aliasing Bugs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kt1ayf&#x2F;fixing_next_10_000_aliasing_bugs&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bitbashing.io&#x2F;gc-for-systems-programmers.html&quot;&gt;Garbage Collection for Systems Programmers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gpb0qh&#x2F;garbage_collection_for_systems&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2106.12678.pdf&quot;&gt;Native Implementation of Mutable Value Semantics&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qxlh6m&#x2F;native_implementation_mutable_value&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;registerspill.thorstenball.com&#x2F;p&#x2F;a-few-words-on-testing&quot;&gt;Losing the Faith on Testing&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;5xeuew&#x2F;losing_faith_on_testing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2025&#x2F;03&#x2F;10&#x2F;rust-2025-intro&#x2F;&quot;&gt;Rust in 2025: Targeting foundational software&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;a46njy&#x2F;rust_2025_targeting_foundational&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kirancodes.me&#x2F;posts&#x2F;log-data-oriented-programming.html&quot;&gt;Functional vs Data-Driven development: a Case-Study in Clojure &amp;amp; OCaml&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fbndgj&#x2F;functional_vs_data_driven_development&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.jasony.me&#x2F;system&#x2F;cache&#x2F;2023&#x2F;08&#x2F;01&#x2F;s3fifo&quot;&gt;FIFO queues are all you need for cache eviction&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xszyoz&#x2F;fifo_queues_are_all_you_need_for_cache&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;neilmadden.blog&#x2F;2023&#x2F;01&#x2F;18&#x2F;a-few-programming-language-features-id-like-to-see&#x2F;&quot;&gt;A few programming language features I’d like to see&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;z96yzi&#x2F;few_programming_language_features_i_d&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.usenix.org&#x2F;legacy&#x2F;events&#x2F;fast03&#x2F;tech&#x2F;full_papers&#x2F;megiddo&#x2F;megiddo.pdf&quot;&gt;ARC: A Self-Tuning, Low Overhead Replacement Cache&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ozojfe&#x2F;arc_self_tuning_low_overhead_replacement&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mirawelner.com&#x2F;posts&#x2F;TUM_thoughts.html&quot;&gt;Perspectives from the Technical University of Munich&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;1cqlzd&#x2F;perspectives_from_technical_university&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mcyoung.xyz&#x2F;2025&#x2F;03&#x2F;11&#x2F;formatters&#x2F;&quot;&gt;The Art of Formatting Code&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;z66ftn&#x2F;art_formatting_code&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;lattice-bitset&#x2F;&quot;&gt;Representing type lattices compactly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;y1dvmd&#x2F;representing_type_lattices_compactly&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kobzol.github.io&#x2F;rust&#x2F;cargo&#x2F;2023&#x2F;08&#x2F;12&#x2F;rust-llvm-optimization-remarks.html&quot;&gt;Inspecting rustc LLVM optimization remarks using cargo-remark&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;phiyu4&#x2F;inspecting_rustc_llvm_optimization&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.innoq.com&#x2F;en&#x2F;articles&#x2F;2023&#x2F;04&#x2F;an-introduction-to-tla&#x2F;&quot;&gt;An Introduction to TLA+ and Its Use in Parties&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ry1gda&#x2F;introduction_tla_its_use_parties&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;curriculum&#x2F;&quot;&gt;MDN Curriculum&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;j5xrsf&#x2F;mdn_curriculum&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;madhadron.com&#x2F;programming&#x2F;seven_ur_languages.html&quot;&gt;The seven programming ur-languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2ep6mu&#x2F;seven_programming_ur_languages&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mort.coffee&#x2F;home&#x2F;fast-interpreters&#x2F;&quot;&gt;Faster virtual machines: Speeding up programming language execution&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cczkdj&#x2F;faster_virtual_machines_speeding_up&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dafny.org&#x2F;blog&#x2F;2023&#x2F;10&#x2F;11&#x2F;insertion-sort&#x2F;&quot;&gt;Verifying Selection Sort: an Introduction to Program Verification in Dafny&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rvl9yh&#x2F;verifying_selection_sort_introduction&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eli.thegreenplace.net&#x2F;2021&#x2F;go-internals-invariance-and-memory-layout-of-slices&#x2F;&quot;&gt;Go internals: invariance and memory layout of slices (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qsrsff&#x2F;go_internals_invariance_memory_layout&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martin.janiczek.cz&#x2F;2023&#x2F;07&#x2F;03&#x2F;demystifying-pratt-parsers.html&quot;&gt;Demystifying Pratt Parsers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8qdaps&#x2F;demystifying_pratt_parsers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.danslimmon.com&#x2F;2025&#x2F;03&#x2F;14&#x2F;did-u-ever-read-so-hard-u-accidentally-wrote&#x2F;&quot;&gt;did u ever read so hard u accidentally wrote?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hxbjug&#x2F;did_u_ever_read_so_hard_u_accidentally&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;snmalloc&quot;&gt;snmalloc: Message passing based allocator&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;peyn5x&#x2F;snmalloc_message_passing_based&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rhaas.blogspot.com&#x2F;2024&#x2F;05&#x2F;hacking-on-postgresql-is-really-hard.html&quot;&gt;Hacking on PostgreSQL is really hard&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;6tz1oq&#x2F;hacking_on_postgresql_is_really_hard&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2025&#x2F;03&#x2F;18&#x2F;lang-interop-extensibility&#x2F;&quot;&gt;Language interop and the extensible compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xttfur&#x2F;language_interop_extensible_compiler&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steveklabnik.com&#x2F;writing&#x2F;does-unsafe-undermine-rusts-guarantees&#x2F;&quot;&gt;Does unsafe undermine Rust&#x27;s guarantees?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mg1khc&#x2F;does_unsafe_undermine_rust_s_guarantees&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;planetscale.com&#x2F;blog&#x2F;faster-interpreters-in-go-catching-up-with-cpp&quot;&gt;Faster interpreters in Go: Catching up with C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;48hqpz&#x2F;faster_interpreters_go_catching_up_with_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mrmr.io&#x2F;til&#x2F;prettier&quot;&gt;Why is Prettier rock solid?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;aevptj&#x2F;why_is_prettier_rock_solid&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;textiles-lab.github.io&#x2F;publications&#x2F;2023-knitout-semantics&#x2F;&quot;&gt;Semantics and Scheduling for Machine Knitting Compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lxysd2&#x2F;semantics_scheduling_for_machine&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antonz.org&#x2F;stupid&#x2F;&quot;&gt;I&#x27;m a programmer and I&#x27;m stupid&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tlmvrr&#x2F;i_m_programmer_i_m_stupid&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;personal.cis.strath.ac.uk&#x2F;conor.mcbride&#x2F;pub&#x2F;hasochism.pdf&quot;&gt;Hasochism: The Pleasure and Pain of Dependently Typed Haskell Programming&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;aljhv8&#x2F;hasochism_pleasure_pain_dependently&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;herecomesthemoon.net&#x2F;2025&#x2F;01&#x2F;type-inference-in-rust-and-cpp&#x2F;&quot;&gt;Type Inference in Rust and C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hbzctm&#x2F;type_inference_rust_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dspace.mit.edu&#x2F;handle&#x2F;1721.1&#x2F;6952&quot;&gt;ACTORS: A Model of Concurrent Computation in Distributed Systems (1985)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zi7kdx&#x2F;actors_model_concurrent_computation&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cakeml.org&#x2F;&quot;&gt;CakeML&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4c51gw&#x2F;cakeml&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stefan-marr.de&#x2F;2023&#x2F;06&#x2F;squeezing-a-little-more-performance-out-of-bytecode-interpreters&#x2F;&quot;&gt;Squeezing a Little More Performance Out of Bytecode Interpreters&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;w8vovg&#x2F;squeezing_little_more_performance_out&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;brooker.co.za&#x2F;blog&#x2F;2024&#x2F;07&#x2F;25&#x2F;cap-again.html&quot;&gt;The CAP Theorem is Irrelevant for Cloud Systems&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bo0yqm&#x2F;cap_theorem_is_irrelevant_for_cloud&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.epicgames.com&#x2F;documentation&#x2F;en-us&#x2F;uefn&#x2F;verse-language-reference&quot;&gt;Verse Language Reference&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;x5avwc&#x2F;verse_language_reference&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;convolv.es&#x2F;guides&#x2F;lto&#x2F;&quot;&gt;Link-time optimisation (LTO)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mxwit7&#x2F;link_time_optimisation_lto&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;asynchronous-clean-up&#x2F;&quot;&gt;Asynchronous clean-up [in Rust]&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rurlxp&#x2F;asynchronous_clean_up_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ayazhafiz.com&#x2F;articles&#x2F;23&#x2F;a-lambda-calculus-with-coroutines-and-heapless-closures&quot;&gt;A Lambda Calculus With Coroutines and Heapless, Directly-Called Closures&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;krqlml&#x2F;lambda_calculus_with_coroutines&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dreamsongs.com&#x2F;Files&#x2F;Incommensurability.pdf&quot;&gt;The Structure of a Programming Language Revolution (2012)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;m1mv4o&#x2F;structure_programming_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.cs.utah.edu&#x2F;~blg&#x2F;publications&#x2F;tt&#x2F;wcfg-ecoop-2024.pdf&quot;&gt;Type Tailoring&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;djphwz&#x2F;type_tailoring&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2302.05417&quot;&gt;A Mathematical Model of Package Management Systems&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lfguc0&#x2F;mathematical_model_package_management&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;evanhahn.com&#x2F;when-static-types-make-your-code-shorter&#x2F;&quot;&gt;When static types make your code shorter&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;oxywix&#x2F;when_static_types_make_your_code_shorter&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kristoff.it&#x2F;blog&#x2F;improving-your-zls-experience&#x2F;&quot;&gt;Improving Your Zig Language Server Experience&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8mzfmj&#x2F;improving_your_zig_language_server&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mazzo.li&#x2F;posts&#x2F;stopping-linux-threads.html&quot;&gt;How to stop Linux threads cleanly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ypck1n&#x2F;how_stop_linux_threads_cleanly&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;shane.ai&#x2F;posts&#x2F;threads-and-goroutines&#x2F;&quot;&gt;Threads and Goroutines&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jr48n1&#x2F;threads_goroutines&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;coroutines-and-effects&#x2F;&quot;&gt;Coroutines and effects&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8gbxet&#x2F;coroutines_effects&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.hillelwayne.com&#x2F;post&#x2F;ahk-v2&#x2F;&quot;&gt;Somehow AutoHotKey is kinda good now&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hhcros&#x2F;somehow_autohotkey_is_kinda_good_now&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;v5.chriskrycho.com&#x2F;journal&#x2F;wizardry-frontier&#x2F;&quot;&gt;The Wizardry Frontier &lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;6eizz1&#x2F;wizardry_frontier&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jdrouet.github.io&#x2F;posts&#x2F;202503170800-search-engine-part-1&#x2F;&quot;&gt;Building a search engine from scratch, in Rust: part 1&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ypuwrw&#x2F;building_search_engine_from_scratch_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;book.mixu.net&#x2F;css&#x2F;&quot;&gt;Learn CSS Layout The Pedantic Way&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2qafif&#x2F;learn_css_layout_pedantic_way&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;taylor.town&#x2F;flat-scraps-002&quot;&gt;Data demand some damn respect&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;dfjcom&#x2F;data_demand_some_damn_respect&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;2025-03-27-things-that-go-wrong-with-disk-io.html&quot;&gt;Things that go wrong with disk IO&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;g8pxhy&#x2F;things_go_wrong_with_disk_io&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;charap.co&#x2F;pile-of-eternal-rejections-the-cost-of-garbage-collection-for-state-machine-replication&#x2F;&quot;&gt;Pile of Eternal Rejections: The Cost of Garbage Collection for State Machine Replication – Aleksey Charapko&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;6ngygp&#x2F;pile_eternal_rejections_cost_garbage&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frankmcsherry&#x2F;blog&#x2F;blob&#x2F;master&#x2F;posts&#x2F;2018-05-19.md&quot;&gt;Simple Datalog engine in Rust (2018)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;dqhofu&#x2F;simple_datalog_engine_rust_2018&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lucumr.pocoo.org&#x2F;2025&#x2F;3&#x2F;27&#x2F;any-upcast&#x2F;&quot;&gt;Rust Any part 3: Finally we have upcasts&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mvcoat&#x2F;rust_any_part_3_finally_we_have_upcasts&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;verdagon.dev&#x2F;blog&#x2F;single-ownership-without-borrow-checking-rc-gc&quot;&gt;Single Ownership and Memory Safety without Borrow Checking, Reference Counting, or Garbage Collection&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2rgojg&#x2F;single_ownership_memory_safety_without&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ocamlpro.com&#x2F;blog&#x2F;2024_01_31_the_flambda2_snippets_1&#x2F;&quot;&gt;CPS Representation and Foundational Design Decisions in Flambda2&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;y43nr9&#x2F;cps_representation_foundational_design&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eventhelix.com&#x2F;rust&#x2F;&quot;&gt;Rust to Assembly: Understanding the Inner Workings of Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bykhdz&#x2F;rust_assembly_understanding_inner&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;live.rbg.tum.de&#x2F;?year=2022&amp;amp;term=W&amp;amp;view=3&amp;amp;slug=Sem&quot;&gt;Semantics of Programming (video lectures that go with the &quot;Concrete Semantics&quot; book)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;s8iyop&#x2F;semantics_programming_video_lectures_go&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;osa1.net&#x2F;posts&#x2F;2024-12-07-inlining.html&quot;&gt;When is inlining useful?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rtmz0y&#x2F;when_is_inlining_useful&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eieio.games&#x2F;blog&#x2F;writing-down-every-uuid&#x2F;&quot;&gt;Writing down (and searching through) every UUID&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;7mbcn0&#x2F;writing_down_searching_through_every&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;precedence-printing&#x2F;&quot;&gt;Precedence-aware pretty printing&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wigald&#x2F;precedence_aware_pretty_printing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arne.me&#x2F;blog&#x2F;thoughts-on-zig&quot;&gt;Thoughts on Zig&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fy551x&#x2F;thoughts_on_zig&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wiki.xxiivv.com&#x2F;site&#x2F;interaction_nets.html&quot;&gt;Interaction nets&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gpvjlw&#x2F;interaction_nets&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20110403055600&#x2F;http:&#x2F;&#x2F;wambook.sourceforge.net&#x2F;&quot;&gt;Warren&#x27;s Abstract Machine: A Tutorial Reconstruction (1999)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;espq0p&#x2F;warren_s_abstract_machine_tutorial&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;octet-stream.net&#x2F;b&#x2F;scb&#x2F;2025-03-31-giving-up-the-dylib-dream.html&quot;&gt;Giving up the dylib dream&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ybbhxp&#x2F;giving_up_dylib_dream&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kprotty.me&#x2F;2025&#x2F;04&#x2F;01&#x2F;intuiting-tls.html&quot;&gt;Intuiting TLS&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xtrx71&#x2F;intuiting_tls&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;courses&#x2F;cs3110&#x2F;2018sp&#x2F;a5&#x2F;coq-tactics-cheatsheet.html&quot;&gt;3110 Coq Tactics Cheatsheet&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sjnbsz&#x2F;3110_coq_tactics_cheatsheet&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.pathsensitive.com&#x2F;2019&#x2F;07&#x2F;the-best-refactoring-youve-never-heard.html&quot;&gt;The Best Refactoring You&#x27;ve Never Heard Of&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;w9l7q5&#x2F;best_refactoring_you_ve_never_heard&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;openjdk.org&#x2F;projects&#x2F;valhalla&#x2F;design-notes&#x2F;in-defense-of-erasure&quot;&gt;How We Got the Generics We Have: (Or, how I learned to stop worrying and love erasure)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sirtt6&#x2F;how_we_got_generics_we_have_how_i_learned&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bertptrs.nl&#x2F;2022&#x2F;06&#x2F;23&#x2F;deadlock-free-mutexes-and-directed-acyclic-graphs.html&quot;&gt;Deadlock-free Mutexes and Directed Acyclic Graphs (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9p2yca&#x2F;deadlock_free_mutexes_directed_acyclic&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.m-ou.se&#x2F;super-let&#x2F;&quot;&gt;Rust Temporary Lifetimes and &quot;Super Let&quot;&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qyhip1&#x2F;rust_temporary_lifetimes_super_let&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;writing&#x2F;babys-second-wasm-compiler&quot;&gt;Baby&#x27;s second wasm compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;e5kbev&#x2F;baby_s_second_wasm_compiler&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leanprover.github.io&#x2F;logic_and_proof&#x2F;&quot;&gt;Logic and Proof&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wry3pp&#x2F;logic_proof&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mcyoung.xyz&#x2F;2023&#x2F;08&#x2F;01&#x2F;llvm-ir&#x2F;&quot;&gt;A Gentle Introduction to LLVM IR&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;avpooi&#x2F;gentle_introduction_llvm_ir&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;langdev.stackexchange.com&#x2F;a&#x2F;2021&#x2F;1445&quot;&gt;You could have invented denotational semantics&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;6i27yi&#x2F;you_could_have_invented_denotational&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.codingconfessions.com&#x2F;p&#x2F;cpython-vm-internals&quot;&gt;The Design &amp;amp; Implementation of the CPython Virtual Machine&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;heatnr&#x2F;design_implementation_cpython_virtual&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;werat.dev&#x2F;blog&#x2F;learning-about-debuggers&#x2F;&quot;&gt;Learning about debuggers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cvdwwr&#x2F;learning_about_debuggers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;okmij.org&#x2F;ftp&#x2F;tagless-final&#x2F;Compiler&#x2F;index.html&quot;&gt;Compilers: Incrementally and Extensibly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sbuuzu&#x2F;compilers_incrementally_extensibly&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;writing&#x2F;a-rough-survey-of-compilation-recompilation-and-compile-time-evaluation&#x2F;&quot;&gt;A rough survey of compilation, recompilation, and compile-time evaluation&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wn2ley&#x2F;rough_survey_compilation_recompilation&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nibblestew.blogspot.com&#x2F;2023&#x2F;10&#x2F;the-road-to-hell-is-paved-with-good.html&quot;&gt;The road to hell is paved with good intentions and C++ modules&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;srthgr&#x2F;road_hell_is_paved_with_good_intentions_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;whats-the-big-deal-about-key-value-databases.html&quot;&gt;What&#x27;s the big deal about embedded key-value databases like RocksDB?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;avljlh&#x2F;what_s_big_deal_about_embedded_key_value&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.breakds.org&#x2F;post&#x2F;nix-based-c++-workflow&#x2F;&quot;&gt;Nix Based C++ Workflow From Scratch (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;crgjnh&#x2F;nix_based_c_workflow_from_scratch_2021&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;boomla.com&#x2F;docs&#x2F;simple-fast-value-semantics&quot;&gt;Simple fast value semantics&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xo7a4v&#x2F;simple_fast_value_semantics&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rdivyanshu.github.io&#x2F;posts&#x2F;2024&#x2F;08&#x2F;streams-calculation-proof-and-dafny.html&quot;&gt;Streams, Calculational Proofs and Dafny&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cf6vqa&#x2F;streams_calculational_proofs_dafny&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stevana.github.io&#x2F;parallel_property-based_testing_with_a_deterministic_thread_scheduler.html&quot;&gt;Parallel property-based testing with a deterministic thread scheduler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cmgn5v&#x2F;parallel_property_based_testing_with&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;thoughtpolice&#x2F;9c45287550a56b2047c6311fbadebed2&quot;&gt;Why some of us like &quot;interdiff&quot; code review systems (not GitHub)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tntsjc&#x2F;why_some_us_like_interdiff_code_review&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;okmij.org&#x2F;ftp&#x2F;&quot;&gt;Oleg&#x27;s Programming Site&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vzzxtm&#x2F;oleg_s_programming_site&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.com&#x2F;hillelwayne&#x2F;archive&#x2F;the-jugglers-curse&#x2F;&quot;&gt;The Juggler&#x27;s Curse&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2sbgxk&#x2F;juggler_s_curse&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reasonablypolymorphic.com&#x2F;blog&#x2F;use-monoids&#x2F;index.html&quot;&gt;Use Monoids for Construction&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zol11z&#x2F;use_monoids_for_construction&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;marianoguerra.org&#x2F;posts&#x2F;macros-and-optimizations-its-just-a-phase&#x2F;&quot;&gt;Macros and optimizations: it&#x27;s just a phase&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;h5nira&#x2F;macros_optimizations_it_s_just_phase&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-analyzer.github.io&#x2F;blog&#x2F;2023&#x2F;07&#x2F;24&#x2F;durable-incrementality.html&quot;&gt;Durable Incrementality&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;te7x8n&#x2F;durable_incrementality&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pgdogdev&#x2F;pgdog&quot;&gt;pgdog: Horizontal scaling for PostgreSQL with automatic sharding&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qnvvne&#x2F;pgdog_horizontal_scaling_for_postgresql&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nullderef.com&#x2F;blog&#x2F;rust-variance&#x2F;&quot;&gt;Blindsided by Rust&#x27;s Subtyping and Variance&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tnhgze&#x2F;blindsided_by_rust_s_subtyping_variance&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tigerbeetle.com&#x2F;blog&#x2F;2023-12-27-it-takes-two-to-contract&#x2F;&quot;&gt;It Takes Two to Contract&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;blszfs&#x2F;it_takes_two_contract&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zicklag.github.io&#x2F;blog&#x2F;interaction-nets-combinators-calculus&#x2F;&quot;&gt;Interaction Nets, Combinators, and Calculus&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;t6oqhk&#x2F;interaction_nets_combinators_calculus&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;buttondown.email&#x2F;jaffray&#x2F;archive&#x2F;simplifying-expressions-bottom-up&#x2F;&quot;&gt;Simplifying Expressions Bottom-Up&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zyngxb&#x2F;simplifying_expressions_bottom_up&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;08&#x2F;06&#x2F;fantastic-learning-resources.html&quot;&gt;Fantastic Learning Resources&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sra8zc&#x2F;fantastic_learning_resources&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;animaomnium.github.io&#x2F;what-austral-proves&#x2F;&quot;&gt;What Austral Proves&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;t4ifza&#x2F;what_austral_proves&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sqlite.org&#x2F;draft&#x2F;whybytecode.html&quot;&gt;Why SQLite Uses Bytecode&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;g2tl3w&#x2F;why_sqlite_uses_bytecode&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eighty-twenty.org&#x2F;2024&#x2F;07&#x2F;21&#x2F;ui-for-sums-remembers-products&quot;&gt;UI for sums must remember products&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gseiin&#x2F;ui_for_sums_must_remember_products&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;c3.handmade.network&#x2F;blog&#x2F;p&#x2F;8852-how_bad_is_llvm_really&quot;&gt;How bad is LLVM really?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uoprsr&#x2F;how_bad_is_llvm_really&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jepsen.io&#x2F;analyses&#x2F;ravendb-6.0.2&quot;&gt;Jepsen: RavenDB 6.0.2&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vwgmz0&#x2F;jepsen_ravendb_6_0_2&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;consteval.ca&#x2F;2024&#x2F;07&#x2F;03&#x2F;initialization&#x2F;&quot;&gt;I Have No Constructor, and I Must Initialize&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;0xkanu&#x2F;i_have_no_constructor_i_must_initialize&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;encore.dev&#x2F;blog&#x2F;queueing&quot;&gt;Queueing - an interactive study of queueing strategies&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;shrc35&#x2F;queueing_interactive_study_queueing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cekrem.github.io&#x2F;posts&#x2F;coding-as-craft-going-back-to-the-old-gym&#x2F;&quot;&gt;Coding as Craft: Going Back to the Old Gym&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ffq9te&#x2F;coding_as_craft_going_back_old_gym&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.morling.dev&#x2F;blog&#x2F;what-if-we-could-rebuild-kafka-from-scratch&#x2F;&quot;&gt;What If We Could Rebuild Kafka From Scratch?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8s6cxz&#x2F;what_if_we_could_rebuild_kafka_from&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;blog&#x2F;how-discord-indexes-trillions-of-messages&quot;&gt;How Discord Indexes Trillions of Messages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;edtvb3&#x2F;how_discord_indexes_trillions_messages&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;research.swtch.com&#x2F;diffcover&quot;&gt;Differential Coverage for Debugging&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;aukxak&#x2F;differential_coverage_for_debugging&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=8QNNCr8WfDM&quot;&gt;DataFusion - The Database Building Toolkit&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;8avzyk&#x2F;datafusion_database_building_toolkit&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;langdev.stackexchange.com&#x2F;questions&#x2F;2692&#x2F;how-should-i-read-type-system-notation&quot;&gt;How should I read type system notation?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;11k4ri&#x2F;how_should_i_read_type_system_notation&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arne.me&#x2F;articles&#x2F;write-your-own-ssg&quot;&gt;Why You Should Write Your Own Static Site Generator&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;5hf7qf&#x2F;why_you_should_write_your_own_static_site&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zqa4cc&#x2F;learning_modern_compilers&quot;&gt;Learning modern compilers?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zqa4cc&#x2F;learning_modern_compilers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.nelhage.com&#x2F;2010&#x2F;02&#x2F;a-very-subtle-bug&#x2F;&quot;&gt;A Very Subtle Bug (2010)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;blmitg&#x2F;very_subtle_bug_2010&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;v5.chriskrycho.com&#x2F;journal&#x2F;async-rust-complexity&#x2F;&quot;&gt;Async Rust Complexity &lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2zqaap&#x2F;async_rust_complexity&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;swiftology.io&#x2F;articles&#x2F;typestate&#x2F;&quot;&gt;Typestate - the new Design Pattern in Swift 5.9&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sxmrfg&#x2F;typestate_new_design_pattern_swift_5_9&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;semantic-domain.blogspot.com&#x2F;2023&#x2F;07&#x2F;linear-time-parser-combinators.html&quot;&gt;Linear-time parser combinators&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sts3wo&#x2F;linear_time_parser_combinators&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wolfgirl.dev&#x2F;blog&#x2F;2024-11-13-swift-almost-does-a-really-cool-thing-i-want&#x2F;&quot;&gt;Swift &lt;em&gt;almost&lt;&#x2F;em&gt; does a really cool thing I want&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vdhlun&#x2F;swift_almost_does_really_cool_thing_i_want&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;references-are-like-jumps&#x2F;&quot;&gt;References are like jumps&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;eslpei&#x2F;references_are_like_jumps&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;05&#x2F;21&#x2F;resilient-ll-parsing-tutorial.html&quot;&gt;Resilient LL Parsing Tutorial&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lbzdtu&#x2F;resilient_ll_parsing_tutorial&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;werat.dev&#x2F;blog&#x2F;what-a-good-debugger-can-do&#x2F;&quot;&gt;What a good debugger can do&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uo3sck&#x2F;what_good_debugger_can_do&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;changelog.com&#x2F;posts&#x2F;strange-loops-greatest-hits&quot;&gt;Strange Loop&#x27;s greatest hits&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lca4xn&#x2F;strange_loop_s_greatest_hits&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;&#x2F;blog&#x2F;compiling-ml-models&#x2F;&quot;&gt;Compiling ML models to C for fun&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;7g4l4h&#x2F;compiling_ml_models_c_for_fun&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nullprogram.com&#x2F;blog&#x2F;2023&#x2F;02&#x2F;12&#x2F;&quot;&gt;Let&#x27;s write a setjmp&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cbbv9z&#x2F;let_s_write_setjmp&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;justine.lol&#x2F;cosmo3&#x2F;&quot;&gt;Cosmopolitan Third Edition&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ralgvw&#x2F;cosmopolitan_third_edition&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;anishathalye.com&#x2F;testing-distributed-systems-for-linearizability&#x2F;&quot;&gt;Testing Distributed Systems for Linearizability (2017)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;5benrr&#x2F;testing_distributed_systems_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apple&#x2F;swift-evolution&#x2F;blob&#x2F;main&#x2F;proposals&#x2F;0382-expression-macros.md&quot;&gt;swift-evolution&#x2F;0382: Expression Macros&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;feueff&#x2F;swift_evolution_0382_expression_macros&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antithesis.com&#x2F;blog&#x2F;is_something_bugging_you&#x2F;&quot;&gt;Is something bugging you?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;heyzwe&#x2F;is_something_bugging_you&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thunderseethe.dev&#x2F;posts&#x2F;traits-are-a-local-maxima&#x2F;&quot;&gt;Traits are a Local Maximum&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;numxvi&#x2F;traits_are_local_maximum&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;chandlerc.blog&#x2F;posts&#x2F;2024&#x2F;11&#x2F;story-time-bounds-checking&#x2F;&quot;&gt;Story-time: C++, bounds checking, performance, and compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yihdph&#x2F;story_time_c_bounds_checking_performance&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iohk.io&#x2F;en&#x2F;research&#x2F;library&#x2F;papers&#x2F;ghosts-of-departed-proofs-functional-pearls&#x2F;&quot;&gt;Ghosts of Departed Proofs (2018)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;o2xl17&#x2F;ghosts_departed_proofs_2018&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thunderseethe.dev&#x2F;posts&#x2F;bet-on-cbpv&#x2F;&quot;&gt;I&#x27;m betting on Call-by-Push-Value&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mpcoj1&#x2F;i_m_betting_on_call_by_push_value&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cmu.edu&#x2F;~rwh&#x2F;papers&#x2F;dtal&#x2F;OGI-CSE-99-008.pdf&quot;&gt;A Dependently Typed Assembly Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;erys14&#x2F;dependently_typed_assembly_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;syntactic-musings-on-match-expressions&#x2F;&quot;&gt;Syntactic musings on match expressions&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;d3neqf&#x2F;syntactic_musings_on_match_expressions&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yorickpeterse.com&#x2F;articles&#x2F;asynchronous-io-the-next-billion-dollar-mistake&#x2F;&quot;&gt;Asynchronous IO: the next billion-dollar mistake?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ja3oaw&#x2F;asynchronous_io_next_billion_dollar&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wingolog.org&#x2F;archives&#x2F;2024&#x2F;09&#x2F;07&#x2F;conservative-gc-can-be-faster-than-precise-gc&quot;&gt;conservative gc can be faster than precise gc&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;iz0rwp&#x2F;conservative_gc_can_be_faster_than&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;vSSpbAI_-t0&quot;&gt;The State of Full-Stack OCaml&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zxiui9&#x2F;state_full_stack_ocaml&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;extending-rusts-effect-system&#x2F;&quot;&gt;Extending Rust&#x27;s Effect System&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;khgkpn&#x2F;extending_rust_s_effect_system&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bsky.app&#x2F;profile&#x2F;michael.express&#x2F;post&#x2F;3lo7irdr6ic24&quot;&gt;New Go garbage collector&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;oyyrx0&#x2F;new_go_garbage_collector&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;overreacted.io&#x2F;functional-html&#x2F;&quot;&gt;Functional HTML&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;euv4fr&#x2F;functional_html&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrkline&#x2F;modern-latex&quot;&gt;modern-latex: A short guide to LaTeX that avoids legacy cruft&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;akhul3&#x2F;modern_latex_short_guide_latex_avoids&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cel.cs.brown.edu&#x2F;blog&#x2F;an-interactive-debugger-for-rust-trait-errors&#x2F;&quot;&gt;An Interactive Debugger for Rust Trait Errors&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;eeoz0s&#x2F;interactive_debugger_for_rust_trait&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notashelf.dev&#x2F;posts&#x2F;curse-of-knowing&quot;&gt;The Curse of Knowing How, or; Fixing Everything&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;1t0gpl&#x2F;curse_knowing_how_fixing_everything&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;futhark-lang.org&#x2F;blog&#x2F;2025-05-07-implement-your-language-twice.html&quot;&gt;Implement your language twice&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tyeodn&#x2F;implement_your_language_twice&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eikopf.bearblog.dev&#x2F;newtyped-indices-are-proofs&#x2F;&quot;&gt;Newtyped Indices are Proofs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;twu7sz&#x2F;newtyped_indices_are_proofs&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gencmurat.com&#x2F;en&#x2F;posts&#x2F;memory-safety-features-in-zig&#x2F;&quot;&gt;Memory Safety Features in Zig&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xnyrve&#x2F;memory_safety_features_zig&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kjosib.github.io&#x2F;Counterpoint&#x2F;effects.html&quot;&gt;Algebraic Effects: Another mistake carried through to perfection?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;12m2f0&#x2F;algebraic_effects_another_mistake&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vincents.dev&#x2F;blog&#x2F;rust-dependencies-scare-me&#x2F;?&quot;&gt;Rust Dependencies scare Me&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;j3nhhc&#x2F;rust_dependencies_scare_me&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cohost.org&#x2F;prophet&#x2F;post&#x2F;7083950-functional-programming&quot;&gt;Functional programming languages should be so much better at mutation than they are&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;aotvqu&#x2F;functional_programming_languages&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;browncs1951x.github.io&#x2F;static&#x2F;files&#x2F;hitchhikersguide.pdf&quot;&gt;The Hitchhiker&#x27;s Guide to Logical Verification&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;y25pgg&#x2F;hitchhiker_s_guide_logical_verification&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rocksdb.org&#x2F;blog&#x2F;2024&#x2F;02&#x2F;20&#x2F;foreign-function-interface.html&quot;&gt;Java FFI vs JNI for Meta&#x27;s RocksDB Java API&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jslbix&#x2F;java_ffi_vs_jni_for_meta_s_rocksdb_java_api&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yoric.github.io&#x2F;post&#x2F;so-you-want-to-optimize-your-code&#x2F;&quot;&gt;So You Want to Optimize Your Code? (also, a disordered, confusing and absolutely incomplete oral history of Firefox performance)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hv9q5z&#x2F;so_you_want_optimize_your_code_also&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lewiscampbell.tech&#x2F;blog&#x2F;250117.html&quot;&gt;How I think about Zig and Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;z3ilei&#x2F;how_i_think_about_zig_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tontinton.com&#x2F;posts&#x2F;scheduling-internals&#x2F;&quot;&gt;Scheduling Internals&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gvtkgq&#x2F;scheduling_internals&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;justinpombrio.net&#x2F;2024&#x2F;02&#x2F;23&#x2F;a-twist-on-Wadlers-printer.html&quot;&gt;A Twist on Wadler&#x27;s Printer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;1r0aak&#x2F;twist_on_wadler_s_printer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jepsen.io&#x2F;analyses&#x2F;jetcd-0.8.2&quot;&gt;Jepsen: jetcd 0.8.2&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;gsk2l7&#x2F;jepsen_jetcd_0_8_2&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xeiaso.net&#x2F;blog&#x2F;nosleep&quot;&gt;Time is not a synchronization primitive&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;b0e2nt&#x2F;time_is_not_synchronization_primitive&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;artem.krylysov.com&#x2F;blog&#x2F;2023&#x2F;04&#x2F;19&#x2F;how-rocksdb-works&#x2F;&quot;&gt;How RocksDB works&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;qkzikl&#x2F;how_rocksdb_works&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;whileydave.com&#x2F;2023&#x2F;06&#x2F;27&#x2F;programming-languages-going-above-and-beyond&#x2F;&quot;&gt;Programming Languages Going Above and Beyond&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jgk0id&#x2F;programming_languages_going_above&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;second-class-references&quot;&gt;Second-Class References&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sizjds&#x2F;second_class_references&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jaked.org&#x2F;blog&#x2F;2021-09-07-Reconstructing-TypeScript-part-0&quot;&gt;Reconstructing TypeScript, part 0: intro and background&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hq1xda&#x2F;reconstructing_typescript_part_0_intro&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stevana.github.io&#x2F;the_sad_state_of_property-based_testing_libraries.html&quot;&gt;The sad state of property-based testing libraries&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;uutqvn&#x2F;sad_state_property_based_testing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;pl-writing&#x2F;&quot;&gt;Writing that changed how I think about PL&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;v2zmv3&#x2F;writing_changed_how_i_think_about_pl&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yeet.cx&#x2F;blog&#x2F;lock-free-rust&#x2F;&quot;&gt;Lock-Free Rust: How to Build a Rollercoaster While It’s on Fire&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zcpnge&#x2F;lock_free_rust_how_build_rollercoaster&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pscanf.com&#x2F;s&#x2F;341&#x2F;&quot;&gt;Hyper-Typing&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tjbgo2&#x2F;hyper_typing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dotat.at&#x2F;@&#x2F;2025-05-13-if-is.html&quot;&gt;The penultimate conditional syntax&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;9a0x7c&#x2F;penultimate_conditional_syntax&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ziglang&#x2F;zig&#x2F;issues&#x2F;16270&quot;&gt;Divorce from LLVM&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;svhzj9&#x2F;divorce_from_llvm&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iroh.computer&#x2F;blog&#x2F;async-rust-challenges-in-iroh&quot;&gt;Async Rust Challenges in Iroh&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;7rtvnp&#x2F;async_rust_challenges_iroh&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;snej&#x2F;smol_world&quot;&gt;smol_world: Compact garbage-collected heap and JSON-like object model&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jexsmk&#x2F;smol_world_compact_garbage_collected&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www2.lib.uchicago.edu&#x2F;keith&#x2F;emacs&#x2F;&quot;&gt;Use GNU Emacs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tmhk3n&#x2F;use_gnu_emacs&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;2024-05-16-mvcc.html&quot;&gt;Implementing MVCC and major SQL transaction isolation levels&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pmvh6y&#x2F;implementing_mvcc_major_sql_transaction&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-analyzer.github.io&#x2F;blog&#x2F;2023&#x2F;12&#x2F;26&#x2F;the-heart-of-a-language-server.html&quot;&gt;The Heart of a Language Server&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nrypq7&#x2F;heart_language_server&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hirrolot.github.io&#x2F;posts&#x2F;why-static-languages-suffer-from-complexity.html&quot;&gt;Why Static Languages Suffer From Complexity (and type-safe printf implementation without macros)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ucvs7v&#x2F;why_static_languages_suffer_from&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;graydon2.dreamwidth.org&#x2F;307291.html&quot;&gt;The Rust I Wanted Had No Future&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;47amaq&#x2F;rust_i_wanted_had_no_future&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.amazon.science&#x2F;blog&#x2F;formal-verification-makes-rsa-faster-and-faster-to-deploy&quot;&gt;Formal verification makes RSA faster — and faster to deploy&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rfat3m&#x2F;formal_verification_makes_rsa_faster&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.ydb.tech&#x2F;do-we-fear-the-serializable-isolation-level-more-than-we-fear-subtle-bugs-5a025401b609&quot;&gt;Do we fear the serializable isolation level more than we fear subtle bugs?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;u6b8gq&#x2F;do_we_fear_serializable_isolation_level&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;erikmcclure.com&#x2F;blog&#x2F;stop-making-me-memorize-borrow-checker&#x2F;&quot;&gt;Stop Making Me Memorize The Borrow Checker&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lefvgm&#x2F;stop_making_me_memorize_borrow_checker&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;specy.app&#x2F;blog&#x2F;posts&#x2F;a-rustc-soundness-bug-in-the-wild&quot;&gt;A rustc soundness bug in the wild&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;swm85w&#x2F;rustc_soundness_bug_wild&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lambdaland.org&#x2F;posts&#x2F;2023-08-14_types_with_macros&#x2F;&quot;&gt;Implementing Type Systems as Macros&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kh3hrz&#x2F;implementing_type_systems_as_macros&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jakstys.lt&#x2F;2024&#x2F;zig-reproduced-without-binaries&#x2F;&quot;&gt;Zig Reproduced Without Binaries&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xlmejv&#x2F;zig_reproduced_without_binaries&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tratt.net&#x2F;laurie&#x2F;blog&#x2F;2024&#x2F;structured_editing_and_incremental_parsing.html&quot;&gt;Structured Editing and Incremental Parsing&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ws0mt8&#x2F;structured_editing_incremental_parsing&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.unwoundstack.com&#x2F;blog&#x2F;dependent-types-and-http-headers.html&quot;&gt;Dependent Types and the Art of HTTP Headers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sognxb&#x2F;dependent_types_art_http_headers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kmaasrud.com&#x2F;blog&#x2F;make&quot;&gt;A love letter to make&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mavub8&#x2F;love_letter_make&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maskray.me&#x2F;blog&#x2F;2023-02-12-all-about-leak-sanitizer&quot;&gt;All about LeakSanitizer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;quouu0&#x2F;all_about_leaksanitizer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vorpus.org&#x2F;blog&#x2F;timeouts-and-cancellation-for-humans&#x2F;&quot;&gt;Timeouts and cancellation for humans (2018)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;2sixlc&#x2F;timeouts_cancellation_for_humans_2018&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.com&#x2F;blog&#x2F;how-discord-stores-trillions-of-messages&quot;&gt;How Discord Stores Trillions of Messages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;sdttgb&#x2F;how_discord_stores_trillions_messages&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steveklabnik.com&#x2F;writing&#x2F;memory-safety-is-a-red-herring&quot;&gt;Memory Safety is a Red Herring&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;e6tz0r&#x2F;memory_safety_is_red_herring&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;wingolog.org&#x2F;archives&#x2F;2024&#x2F;01&#x2F;08&#x2F;missing-the-point-of-webassembly&quot;&gt;missing the point of webassembly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;djxada&#x2F;missing_point_webassembly&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jepsen.io&#x2F;analyses&#x2F;datomic-pro-1.0.7075&quot;&gt;Jepsen: Datomic Pro 1.0.7075&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rjonl7&#x2F;jepsen_datomic_pro_1_0_7075&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arne.me&#x2F;articles&#x2F;emacs-from-scratch-part-two&quot;&gt;Emacs From Scratch Part Two: Projects and Keybindings&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xotzim&#x2F;emacs_from_scratch_part_two_projects&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.redbook.io&#x2F;index.html&quot;&gt;Readings in Database Systems, 5th Edition&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;erfhyu&#x2F;readings_database_systems_5th_edition&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;surfingcomplexity.blog&#x2F;2024&#x2F;02&#x2F;17&#x2F;what-if-everybody-did-everything-right&#x2F;&quot;&gt;What if everybody did everything right?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zfnak4&#x2F;what_if_everybody_did_everything_right&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;v5.chriskrycho.com&#x2F;journal&#x2F;unsafe&#x2F;&quot;&gt;Unsafe : on Rust still being helpful even with a lot of &lt;code&gt;unsafe&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kuq1ha&#x2F;unsafe_on_rust_still_being_helpful_even&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2024&#x2F;07&#x2F;25&#x2F;git-worktrees.html&quot;&gt;How I Use Git Worktrees&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rvqez7&#x2F;how_i_use_git_worktrees&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;FeepingCreature&#x2F;a8099d2bcf850a9c388ed045fa3b5c0e&quot;&gt;Investigating an Event Queue Hang: The Code Works Correctly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4g7xju&#x2F;investigating_event_queue_hang_code&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;corrode.dev&#x2F;blog&#x2F;async&#x2F;&quot;&gt;The State of Async Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;iovz9o&#x2F;state_async_rust&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cs.uwaterloo.ca&#x2F;~plragde&#x2F;flaneries&#x2F;LACI&#x2F;index.html&quot;&gt;Logic and Computation Intertwined&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;j2aprn&#x2F;logic_computation_intertwined&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.hytradboi.com&#x2F;2022&#x2F;debugging-by-querying-a-database-of-all-program-state&#x2F;&quot;&gt;Debugging by querying a database of all program state&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mg1dfm&#x2F;debugging_by_querying_database_all&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;weval&#x2F;&quot;&gt;Compilers for free with weval&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;naxyao&#x2F;compilers_for_free_with_weval&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;rsc-regexp&quot;&gt;rsc-regexp: Translations of a simple C program to Rust&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;0hbzos&#x2F;rsc_regexp_translations_simple_c_program&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;how-australs-linear-type-checker-works&quot;&gt;How Austral’s Linear Type Checker Works&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rz5wcp&#x2F;how_austral_s_linear_type_checker_works&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.blog&#x2F;2022&#x2F;12&#x2F;30&#x2F;you-should-be-reading-academic-computer-science-papers&#x2F;&quot;&gt;You should be reading academic computer science papers (2022)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ymgdcq&#x2F;you_should_be_reading_academic_computer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;pdf&#x2F;10.1145&#x2F;3656404&quot;&gt;Refined Input, Degraded Output: The Counterintuitive World of Compiler Behavior&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nj86kb&#x2F;refined_input_degraded_output&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;concerningquality.com&#x2F;txn-isolation-testing&#x2F;&quot;&gt;Does Your Test Suite Account For Weak Transaction Isolation?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;aqs1ma&#x2F;does_your_test_suite_account_for_weak&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;artagnon.com&#x2F;computing&#x2F;compilers&#x2F;backend&quot;&gt;A tour of the LLVM backend&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mt4aze&#x2F;tour_llvm_backend&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thephd.dev&#x2F;implementing-embed-c-and-c++&quot;&gt;Implementing #embed for C and C++&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hxpb4z&#x2F;implementing_embed_for_c_c&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.shtsoft.eu&#x2F;2022&#x2F;12&#x2F;22&#x2F;effect-trait-dp.html&quot;&gt;Faking Algebraic Effects and Handlers With Traits: A Rust Design Pattern&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;m6kn08&#x2F;faking_algebraic_effects_handlers_with&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;v8.dev&#x2F;blog&#x2F;maglev&quot;&gt;Maglev - V8’s Fastest Optimizing JIT&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jmcsmu&#x2F;maglev_v8_s_fastest_optimizing_jit&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wiki.alopex.li&#x2F;TheStateOfGarnet2025&quot;&gt;The State Of Garnet in 2025&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;99rf3c&#x2F;state_garnet_2025&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tonyalicea.dev&#x2F;blog&#x2F;understanding-react-compiler&#x2F;&quot;&gt;Understanding React Compiler&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bbntql&#x2F;understanding_react_compiler&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ewxw1i&#x2F;less_technical_introductions_type&quot;&gt;Less-technical introductions to type checking?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ewxw1i&#x2F;less_technical_introductions_type&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;j2kun&#x2F;mlir-tutorial&quot;&gt;MLIR For Beginners&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vugxuj&#x2F;mlir_for_beginners&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;functional-algorithms-verified.org&#x2F;&quot;&gt;Functional Data Structures and Algorithms. A Proof Assistant Approach&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ilbq2q&#x2F;functional_data_structures_algorithms&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;verdagon.dev&#x2F;grimoire&#x2F;grimoire&quot;&gt;Borrow checking, RC, GC, and the Eleven (!) Other Memory Safety Approaches&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;mutdyp&#x2F;borrow_checking_rc_gc_eleven_other_memory&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;08&#x2F;01&#x2F;on-modularity-of-lexical-analysis.html&quot;&gt;On Modularity of Lexical Analysis&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;z2qhlm&#x2F;on_modularity_lexical_analysis&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.bbayles.com&#x2F;index&#x2F;decorator_factory&quot;&gt;Yo, I heard you like decorators&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;toubeb&#x2F;yo_i_heard_you_like_decorators&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jvns.ca&#x2F;blog&#x2F;2024&#x2F;09&#x2F;12&#x2F;reasons-i--still--love-fish&#x2F;&quot;&gt;Reasons I still love the fish shell&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;o1zdwv&#x2F;reasons_i_still_love_fish_shell&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;faultlore.com&#x2F;blah&#x2F;swift-abi&#x2F;&quot;&gt;How Swift Achieved Dynamic Linking Where Rust Couldn&#x27;t (2019)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;88rsuc&#x2F;how_swift_achieved_dynamic_linking_where&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danprince&#x2F;webassembly-wizardry&quot;&gt;Tiny challenges for learning WebAssembly&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;m88upk&#x2F;tiny_challenges_for_learning&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;u5ddne&#x2F;programming_computing_bloggers_how_do&quot;&gt;Programming and computing bloggers: How do you decide what to write about?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;u5ddne&#x2F;programming_computing_bloggers_how_do&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;ssa&#x2F;&quot;&gt;A catalog of ways to generate SSA&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ohcl00&#x2F;catalog_ways_generate_ssa&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ntietz.com&#x2F;blog&#x2F;write-more-useless-software&#x2F;&quot;&gt;Write more &quot;useless&quot; software&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;c90ird&#x2F;write_more_useless_software&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;muxup.com&#x2F;2023q4&#x2F;storing-data-in-pointers&quot;&gt;Storing data in pointers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;5417dx&#x2F;storing_data_pointers&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;08&#x2F;17&#x2F;typescript-is-surprisingly-ok-for-compilers.html&quot;&gt;TypeScript is Surprisingly OK for Compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hkkcan&#x2F;typescript_is_surprisingly_ok_for&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vhyrro.github.io&#x2F;posts&#x2F;effect-systems&#x2F;&quot;&gt;Moving Beyond Type Systems&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ltbw08&#x2F;moving_beyond_type_systems&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;determinate.systems&#x2F;posts&#x2F;determinate-nix-installer&quot;&gt;Introducing the Determinate Nix Installer&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tu7kjz&#x2F;introducing_determinate_nix_installer&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.pathsensitive.com&#x2F;2023&#x2F;03&#x2F;modules-matter-most-for-masses.html&quot;&gt;&#x27;Modules Matter&#x27; Most for the Masses&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;u7y4lk&#x2F;modules_matter_most_for_masses&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;axisofeval.blogspot.com&#x2F;2024&#x2F;05&#x2F;delimited-generators.html&quot;&gt;Delimited Generators - A more natural API for JS generators&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tr9lkd&#x2F;delimited_generators_more_natural_api&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;2024-03-15-zig-rust-and-other-languages.html&quot;&gt;Zig, Rust, and other languages&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lfg3lj&#x2F;zig_rust_other_languages&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;~asampson&#x2F;blog&#x2F;bril.html&quot;&gt;Bril: An Intermediate Language for Teaching Compilers&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;bd1y8i&#x2F;bril_intermediate_language_for_teaching&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nipafx.dev&#x2F;java-visitor-pattern-pointless&#x2F;&quot;&gt;Visitor Pattern Considered Pointless - Use Pattern Switches Instead (2021)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jdgjjt&#x2F;visitor_pattern_considered_pointless&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;cps&#x2F;&quot;&gt;Into CPS, never to return&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tgihfq&#x2F;into_cps_never_return&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;muratbuffalo.blogspot.com&#x2F;2024&#x2F;12&#x2F;use-of-time-in-distributed-databases_26.html&quot;&gt;Use of Time in Distributed Databases (part 2): Use of logical clocks in databases&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jr38vj&#x2F;use_time_distributed_databases_part_2_use&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pixel-druid.com&#x2F;articles&#x2F;stuff-i-learnt-in-2024&quot;&gt;Stuff I learnt in 2024&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pjoydd&#x2F;stuff_i_learnt_2024&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.playingwithpointers.com&#x2F;blog&#x2F;refcounting-harder-than-it-sounds.html&quot;&gt;Reference Counting: Harder than it Sounds (2015)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rxof59&#x2F;reference_counting_harder_than_it_sounds&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pjg1.site&#x2F;linux-internet-from-scratch&quot;&gt;How does a Linux machine connect to the internet, really?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;563zjp&#x2F;how_does_linux_machine_connect_internet&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.sandordargo.com&#x2F;blog&#x2F;2025&#x2F;02&#x2F;12&#x2F;do-you-use-a-debugger&quot;&gt;Do you use a debugger?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;quhtak&#x2F;do_you_use_debugger&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;a-survey-of-every-iterator-variant&quot;&gt;A survey of every iterator variant&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cuakjw&#x2F;survey_every_iterator_variant&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eev.ee&#x2F;blog&#x2F;2016&#x2F;11&#x2F;18&#x2F;iteration-in-one-language-then-all-the-others&#x2F;&quot;&gt;Iteration in one language, then all the others (2016)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nz0imd&#x2F;iteration_one_language_then_all_others&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antithesis.com&#x2F;blog&#x2F;multiverse_debugging&#x2F;&quot;&gt;Debugging in the Multiverse&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zikzbv&#x2F;debugging_multiverse&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;minimalmodeling.substack.com&#x2F;p&#x2F;many-explanations-of-join-are-wrong&quot;&gt;Many explanations of JOIN are wrong, and people get confused&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;frbh3v&#x2F;many_explanations_join_are_wrong_people&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;injuly.in&#x2F;blog&#x2F;announcing-jam&#x2F;index.html&quot;&gt;Why am I writing a JavaScript toolchain in Zig?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rdjqw0&#x2F;why_am_i_writing_javascript_toolchain_zig&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;langdev.stackexchange.com&#x2F;questions&#x2F;4325&#x2F;how-do-modern-compilers-choose-which-variables-to-put-in-registers&quot;&gt;How do modern compilers choose which variables to put in registers?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;krgcvz&#x2F;how_do_modern_compilers_choose_which&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;crowdhailer.me&#x2F;2025-02-06&#x2F;programs-dont-kill-people-computers-do&#x2F;&quot;&gt;Algebraic effects are a functional approach to manage side effects&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fw48of&#x2F;algebraic_effects_are_functional&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;laurmaedje.github.io&#x2F;posts&#x2F;layout-models&#x2F;&quot;&gt;TeX and Typst: Layout Models&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;rsuopk&#x2F;tex_typst_layout_models&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=7MNyAHp0h7A&quot;&gt;Type Erasure: The Implementation Details&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fqarj7&#x2F;type_erasure_implementation_details&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aya-prover&#x2F;aya-dev&quot;&gt;aya-dev: A proof assistant and a dependently-typed language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pywrnr&#x2F;aya_dev_proof_assistant_dependently&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;chrispenner.ca&#x2F;posts&#x2F;unison-type-search&quot;&gt;Building Type Search for Unison&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hua6hp&#x2F;building_type_search_for_unison&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cfallin.org&#x2F;blog&#x2F;2021&#x2F;03&#x2F;15&#x2F;cranelift-isel-3&#x2F;&quot;&gt;Cranelift: Correctness in Register Allocation&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;tc8l4r&#x2F;cranelift_correctness_register&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jakob.space&#x2F;blog&#x2F;what-ive-learned-about-formal-methods.html&quot;&gt;What I&#x27;ve Learned About Formal Methods In Half a Year&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;wl1qe1&#x2F;what_i_ve_learned_about_formal_methods&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.stranger.systems&#x2F;posts&#x2F;by-slug&#x2F;type-safe-variadic-printf.html&quot;&gt;Type safe variadic printf, without macros&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hl00vs&#x2F;type_safe_variadic_printf_without_macros&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maplant.com&#x2F;2025-02-17-Why-I&amp;#x27;m-Writing-a-Scheme-Implementation-in-2025-(The-Answer-is-Async-Rust).html&quot;&gt;Why I&#x27;m Writing a Scheme Implementation in 2025 (The Answer is Async Rust)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zm1g8r&#x2F;why_i_m_writing_scheme_implementation&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2502.09386&quot;&gt;Code Style Sheets: CSS for Code&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vpiex3&#x2F;code_style_sheets_css_for_code&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;pizlonator&#x2F;cf1e72b8600b1437dda8153ea3fdb963&quot;&gt;How I implement SSA form&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;w7qf9o&#x2F;how_i_implement_ssa_form&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antithesis.com&#x2F;blog&#x2F;worst_bug&#x2F;&quot;&gt;The worst bug we faced at Antithesis&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pt14vn&#x2F;worst_bug_we_faced_at_antithesis&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2024&#x2F;05&#x2F;02&#x2F;unwind-considered-harmful&#x2F;&quot;&gt;Unwind considered harmful?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;e6pzfr&#x2F;unwind_considered_harmful&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;&#x2F;blog&#x2F;typed-python&#x2F;&quot;&gt;Compiling typed Python&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;lnyfm6&#x2F;compiling_typed_python&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.yoshuawuyts.com&#x2F;tasks-are-the-wrong-abstraction&#x2F;&quot;&gt;Tasks are the wrong abstraction&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;unfyqm&#x2F;tasks_are_wrong_abstraction&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tonsky.me&#x2F;blog&#x2F;centering&#x2F;&quot;&gt;Hardest Problem in Computer Science: Centering Things&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xcwla4&#x2F;hardest_problem_computer_science&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;08&#x2F;09&#x2F;types-and-zig.html&quot;&gt;Types and the Zig Programming Language&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;seenwo&#x2F;types_zig_programming_language&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;without.boats&#x2F;blog&#x2F;let-futures-be-futures&#x2F;&quot;&gt;Let futures be futures&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;awcoy3&#x2F;let_futures_be_futures&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;1909.08789&quot;&gt;Proof Pearl: Magic Wand as Frame&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;vjsada&#x2F;proof_pearl_magic_wand_as_frame&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.thenile.dev&#x2F;blog&#x2F;transaction-isolation-postgres&quot;&gt;Transaction Isolation in Postgres, explained&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pepihj&#x2F;transaction_isolation_postgres&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tweedegolf.nl&#x2F;en&#x2F;blog&#x2F;88&#x2F;data-oriented-design&quot;&gt;Optimizing a parser&#x2F;compiler with data-oriented design: a case study&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;yo1bez&#x2F;optimizing_parser_compiler_with_data&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.philipzucker.com&#x2F;frozenset_dtt&#x2F;&quot;&gt;A Python frozenset interpretation of Dependent Type Theory&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;aohy4i&#x2F;python_frozenset_interpretation&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ekzhang.substack.com&#x2F;p&#x2F;how-the-jaxjit-jit-compiler-works&quot;&gt;How the jax.jit() JIT compiler works in jax-js&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;4ukqbf&#x2F;how_jax_jit_jit_compiler_works_jax_js&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lock.cmpxchg8b.com&#x2F;zenbleed.html&quot;&gt;Zenbleed&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hvufhx&#x2F;zenbleed&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gieseanw.wordpress.com&#x2F;2024&#x2F;06&#x2F;25&#x2F;you-probably-wrote-half-a-monad-by-accident&#x2F;&quot;&gt;You probably wrote half a monad by accident&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;xmpj1p&#x2F;you_probably_wrote_half_monad_by_accident&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sillycross.github.io&#x2F;2023&#x2F;05&#x2F;12&#x2F;2023-05-12&#x2F;&quot;&gt;Building a baseline JIT for Lua automatically&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ftsowh&#x2F;building_baseline_jit_for_lua&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;oxide.computer&#x2F;blog&#x2F;the-cloud-computer&quot;&gt;The Cloud Computer &#x2F; Oxide&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;hbr6zl&#x2F;cloud_computer_oxide&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;valyala.medium.com&#x2F;go-evolves-in-the-wrong-direction-7dfda8a1a620&quot;&gt;Go evolves in the wrong direction&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ax4j9b&#x2F;go_evolves_wrong_direction&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.philipzucker.com&#x2F;unify&#x2F;&quot;&gt;Don’t Implement Unification by Recursion&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ybedui&#x2F;don_t_implement_unification_by_recursion&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;danilafe.com&#x2F;blog&#x2F;bergamot&#x2F;&quot;&gt;Bergamot: Exploring Programming Language Inference Rules&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;0lpqdr&#x2F;bergamot_exploring_programming&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;4fFDFbi3toc&quot;&gt;Testing Distributed Systems w&#x2F; Deterministic Simulation (2014)&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;y3o3vf&#x2F;testing_distributed_systems_w&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blogs.windows.com&#x2F;windowsdeveloper&#x2F;2025&#x2F;05&#x2F;19&#x2F;the-windows-subsystem-for-linux-is-now-open-source&#x2F;&quot;&gt;The Windows Subsystem for Linux is now open source&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;v4xwjv&#x2F;windows_subsystem_for_linux_is_now_open&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zenodo.org&#x2F;records&#x2F;15424968&#x2F;files&#x2F;deputy-els.pdf&quot;&gt;The Lisp in the Cellar: Dependent Types that Live Upstairs&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;erab7d&#x2F;lisp_cellar_dependent_types_live&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;antelang.org&#x2F;blog&#x2F;why_effects&#x2F;&quot;&gt;Why Algebraic Effects?&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;fgvbsc&#x2F;why_algebraic_effects&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;natkr.com&#x2F;2025-05-22-async-from-scratch-3&#x2F;&quot;&gt;Async from scratch 3: Pinned against the wall&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;zty9jf&#x2F;async_from_scratch_3_pinned_against_wall&quot;&gt;Lobste.rs Discussion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Miscellaneous CS</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/misc-cs/"/>
        <id>https://dipeshkaphle.github.io/Learning/misc-cs/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/misc-cs/">&lt;h1 id=&quot;misc&quot;&gt;Misc&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;people.eecs.berkeley.edu&#x2F;~kubitron&#x2F;cs262&#x2F;index_lectures.html&quot;&gt;Advanced Topics in Computer Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLhwVAYxlh5dvB1MkZrcRZy6x_a2yORNAu&quot;&gt;Computer Organization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;beej.us&#x2F;guide&#x2F;bgnet&#x2F;&quot;&gt;Beej Networking&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;people.freebsd.org&#x2F;~lstewart&#x2F;articles&#x2F;cpumemory.pdf&quot;&gt;What Every Programmer Should Know About Memory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.nand2tetris.org&#x2F;&quot;&gt;Nand2Tetris&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLm556dMNleHc1MWN5BX9B2XkwkNE2Djiu&quot;&gt;David Wetherall Computer Networking&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLeWkeA7esB-PcOTrTCvAsaCArnCMQkcNv&quot;&gt;ILP, DLP, TLP&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32458048&quot;&gt;Paradigms of Artificial Intelligence Programming (Peter Norvig)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32250426&quot;&gt;SQLite Internals HN post,(fly.io has more articles about sqlite)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;15445.courses.cs.cmu.edu&#x2F;fall2023&#x2F;&quot;&gt;Intro to Databases&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;15721.courses.cs.cmu.edu&#x2F;spring2024&#x2F;&quot;&gt;Advanced Databases(Focus on OLAP systems only)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;15721.courses.cs.cmu.edu&#x2F;spring2020&#x2F;&quot;&gt;Advanced Databases(Focus on OLTP(and transactions) and OLAP)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;nil.csail.mit.edu&#x2F;6.824&#x2F;2020&#x2F;&quot;&gt;Distributed Systems MIT(Robert Morris)&lt;&#x2F;a&gt;
, More recent version is &lt;a href=&quot;https:&#x2F;&#x2F;pdos.csail.mit.edu&#x2F;6.824&#x2F;&quot;&gt;here&lt;&#x2F;a&gt; ,
Some interesting papers mentioned
&lt;a href=&quot;https:&#x2F;&#x2F;lieuzhenghong.com&#x2F;mit_6.824_self_study&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ocw.mit.edu&#x2F;courses&#x2F;6-172-performance-engineering-of-software-systems-fall-2018&#x2F;&quot;&gt;Performance Engineering of Software Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ocw.mit.edu&#x2F;courses&#x2F;6-828-operating-system-engineering-fall-2012&#x2F;pages&#x2F;lecture-notes-and-readings&#x2F;&quot;&gt;Operating Systems Engineering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ocw.mit.edu&#x2F;courses&#x2F;6-033-computer-system-engineering-spring-2018&#x2F;&quot;&gt;Computer System Engineering(Looks like a very good course, covers a lot of concepts)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;web.mit.edu&#x2F;6.005&#x2F;www&#x2F;archive&#x2F;&quot;&gt;Software Construction(Covers a lot of cool concepts)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22226380&quot;&gt;Missing Semester&lt;&#x2F;a&gt;A&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;fly.io&#x2F;dist-sys&#x2F;&quot;&gt;Fly io Distsys&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cmu-fantastic-bugs.github.io&#x2F;&quot;&gt;Fantastic Bugs and where to find them&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ru.algorithmica.org&#x2F;&quot;&gt;Algorithmica(must translate from Russian to English)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cp-algorithms.com&#x2F;&quot;&gt;Cp Algorithms&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;en.algorithmica.org&#x2F;hpc&#x2F;&quot;&gt;Algorithms for Modern Hardware(looks super useful to learn about intricate details about performance)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.agner.org&#x2F;optimize&quot;&gt;Agner Fog(see optimization manual, apparently very good)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.1024cores.net&#x2F;&quot;&gt;Dmitry Vyukov, lockfree algorithms is a goldmine&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cmu.edu&#x2F;~guyb&#x2F;paralg&#x2F;&quot;&gt;Parallel and Concurrent Algorithms, Carnegie Mellon University&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dendibakh&#x2F;perf-book&quot;&gt;perf-book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dendibakh&#x2F;perf-ninja&quot;&gt;perf-ninja&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLRWO2AL1QAV6bJAU2kgB4xfodGID43Y5d&quot;&gt;YT-playlist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;azure&#x2F;architecture&#x2F;patterns&#x2F;&quot;&gt;Has a lot of cool design patterns(found this page while looking for Event Sourcing Pattern)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.interdb.jp&#x2F;pg&#x2F;index.html?s=08&quot;&gt;Series of articles on The internals of PostgreSQL&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aphyr&#x2F;distsys-class#an-introduction-to-distributed-systems&quot;&gt;Distsys-class by aphyr(good overview of many things and a good way to learn terminologies)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;databasedevelopment&#x2F;comments&#x2F;unj8d1&#x2F;getting_started_with_database_development&#x2F;&quot;&gt;Getting started with Database development(reddit post)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;0xax.gitbooks.io&#x2F;linux-insides&#x2F;content&#x2F;&quot;&gt;Linux Internals gitbook&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;notes.eatonphil.com&#x2F;2024-02-08-an-intuition-for-distributed-consensus-in-oltp-systems.html&quot;&gt;Phil Eaton&#x27;s An intuition for distributed consensus in OLTP systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heathermiller&#x2F;dist-prog-book&quot;&gt;Distributed Programming Book(good content)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;brianshih1.github.io&#x2F;mini-key-value-db&#x2F;chapter_1&#x2F;motivation.html&quot;&gt;Building a Transactional Key-Value Database&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;pingcap.github.io&#x2F;tidb-dev-guide&#x2F;index.html?s=08&quot;&gt;TiDB Dev guide(Has some DB internals stuff)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;tikv.github.io&#x2F;deep-dive-tikv&#x2F;overview&#x2F;introduction.html&quot;&gt;TiKV Deep Dive, has very interesting TOC&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
[What every systems programmer should know about concurrency by Matt Kline
](What every systems programmer should know about concurrency by Matt Kline
) , &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sysprog21&#x2F;concurrency-primer&quot;&gt;GitHub&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Miscellaneous Tools</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/misc-tools/"/>
        <id>https://dipeshkaphle.github.io/Learning/misc-tools/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/misc-tools/">&lt;h1 id=&quot;misc-tools&quot;&gt;Misc Tools&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;determinate.systems&#x2F;posts&#x2F;zero-to-nix&quot;&gt; Zero to Nix &lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;kf3xym&#x2F;introducing_zero_nix&quot;&gt;HN&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;726894&#x2F;what-are-the-dark-corners-of-vim-your-mom-never-told-you-about&quot;&gt;Vim Cool Tricks &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33811705&quot;&gt;Vim guide for advanced users&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33708867&quot;&gt;Hermit, Deterministic Linux, by Facebook(in rust, has another cool thing they&#x27;re using to intercept syscalls called reverie)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32245136&quot;&gt;Twenty years of valgrind&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31617600&quot;&gt;What rr does&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;yCK0-vWmAsk&quot;&gt;The state of debugging in 2022(rr)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;antonz.org&#x2F;sqlite-is-not-a-toy-database&#x2F;&quot;&gt;Sqlite is not a toy database&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35092998&quot;&gt;What a good debugger can do&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.brendangregg.com&#x2F;perf.html&quot;&gt;Perf Examples(perf is super powerful and supports so many things)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.brendangregg.com&#x2F;linuxperf.html&quot;&gt;Linux Performance(many links, by the same author of above article)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;web.stanford.edu&#x2F;class&#x2F;archive&#x2F;cs&#x2F;cs107&#x2F;cs107.1196&#x2F;resources&#x2F;valgrind&quot;&gt;Valgrind Intro&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;web.stanford.edu&#x2F;class&#x2F;archive&#x2F;cs&#x2F;cs107&#x2F;cs107.1196&#x2F;resources&#x2F;callgrind&quot;&gt;Callgrind Intro&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hellogcc&#x2F;100-gdb-tips&#x2F;blob&#x2F;master&#x2F;refcard.pdf&quot;&gt;GDB reference card&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Miscellaneous Saved Links</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/miscellaneoussavedlinks/"/>
        <id>https://dipeshkaphle.github.io/Learning/miscellaneoussavedlinks/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/miscellaneoussavedlinks/">&lt;h1 id=&quot;miscellaneous-saved-links&quot;&gt;Miscellaneous Saved Links&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;articles-and-blog-posts&quot;&gt;Articles and Blog Posts&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;delta-force&#x2F;profiling-code-with-llvm-f32c5292750a&quot;&gt;Profiling code with LLVM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;pragyan-blog&#x2F;code-character-8385855123b3&quot;&gt;Code Character&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@mshockwave&quot;&gt;LLVM Passes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.gymni.ch&#x2F;posts&#x2F;out-of-tree-pass&#x2F;&quot;&gt;More on LLVM Passes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;~asampson&#x2F;blog&#x2F;llvm.html&quot;&gt;LLVM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;osterlund.xyz&#x2F;posts&#x2F;2017-11-28-LLVM-pass.html&quot;&gt;More on LLVM Passes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;interrupt.memfault.com&#x2F;blog&#x2F;pre-commit&quot;&gt;Pre-commit tips&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ricardomartins.cc&#x2F;&quot;&gt;Interior Mutability Series&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.foonathan.net&#x2F;2022&#x2F;01&#x2F;compile-time-codegen&#x2F;&quot;&gt;Compile-time Codegen&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.foonathan.net&#x2F;2021&#x2F;10&#x2F;crtp-interface&#x2F;#content&quot;&gt;CRTP Interface&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.linaro.org&#x2F;blog&#x2F;the-evolution-of-the-qemu-translator&#x2F;&quot;&gt;The Evolution of the QEMU Translator&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.px.dev&#x2F;go-garbage-collector&#x2F;&quot;&gt;Go Garbage Collector&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;scoutapm.com&#x2F;blog&#x2F;ruby-garbage-collection&quot;&gt;Ruby Garbage Collection&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leonardschuetz.ch&#x2F;blog&#x2F;nan-boxing&#x2F;&quot;&gt;NAN Boxing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;archive&#x2F;msdn-magazine&#x2F;2015&#x2F;may&#x2F;compilers-what-every-programmer-should-know-about-compiler-optimizations-part-2&quot;&gt;What Every Programmer Should Know About Compiler Optimizations, Part 2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31390742&quot;&gt;Modern JavaScript Tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.openweb.com&#x2F;blog&#x2F;simplify-with-dependency-injection-with-uber-fx&quot;&gt;Simplify with Dependency Injection with Uber FX&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eng.uber.com&#x2F;data-race-patterns-in-go&#x2F;&quot;&gt;Data Race Patterns in Go&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.cloudflare.com&#x2F;using-apache-kafka-to-process-1-trillion-messages&#x2F;&quot;&gt;Using Apache Kafka to Process 1 Trillion Messages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ardanlabs.com&#x2F;blog&#x2F;2018&#x2F;08&#x2F;scheduling-in-go-part1.html&quot;&gt;Scheduling in Go, Part 1&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.blog&#x2F;2022&#x2F;07&#x2F;21&#x2F;event-driven-topic-design-using-kafka&#x2F;&quot;&gt;Event-Driven Topic Design Using Kafka&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;go.dev&#x2F;blog&#x2F;laws-of-reflection&quot;&gt;The Laws of Reflection in Go&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uber-go&#x2F;guide&#x2F;blob&#x2F;master&#x2F;style.md#receivers-and-interfaces&quot;&gt;Uber Go Style Guide&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eng.uber.com&#x2F;how-we-halved-go-monorepo-ci-build-time&#x2F;&quot;&gt;How We Halved Go Monorepo CI Build Time&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;recursion.wtf&#x2F;posts&#x2F;rust_schemes_2&#x2F;&quot;&gt;Recursion Schemes in Rust&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;develop&#x2F;develop-images&#x2F;dockerfile_best-practices&#x2F;&quot;&gt;Dockerfile Best Practices&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;architecturenotes.co&#x2F;redis&#x2F;&quot;&gt;Redis Architecture Notes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.twaino.com&#x2F;en&#x2F;blog&#x2F;website-creation&#x2F;apache-server-2&#x2F;#55_Use_mod_evasive_to_refute_DoS_attack&quot;&gt;Apache Server: Use mod_evasive to Refute DoS Attack&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;locka99.gitbooks.io&#x2F;a-guide-to-porting-c-to-rust&#x2F;content&#x2F;features_of_rust&#x2F;memory_allocation.html&quot;&gt;A Guide to Porting C to Rust: Memory Allocation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.webperformance.com&#x2F;load-testing-tools&#x2F;blog&#x2F;2012&#x2F;12&#x2F;setting-apache2-ulimit-for-maximum-prefork-performance&#x2F;&quot;&gt;Setting Apache2 ulimit for Maximum Prefork Performance&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;inc0x0.com&#x2F;tcp-ip-packets-introduction&#x2F;tcp-ip-packets-3-manually-create-and-send-raw-tcp-ip-packets&#x2F;&quot;&gt;TCP&#x2F;IP Packets Introduction: Manually Create and Send Raw TCP&#x2F;IP Packets&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.appsignal.com&#x2F;2022&#x2F;03&#x2F;09&#x2F;a-complete-guide-to-nodejs-process-management-with-pm2.html&quot;&gt;A Complete Guide to NodeJS Process Management with PM2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thenewstack.io&#x2F;how-io_uring-and-ebpf-will-revolutionize-programming-in-linux&#x2F;&quot;&gt;How io_uring and eBPF Will Revolutionize Programming in Linux&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scylladb.com&#x2F;2020&#x2F;05&#x2F;05&#x2F;how-io_uring-and-ebpf-will-revolutionize-programming-in-linux&#x2F;&quot;&gt;How io_uring and eBPF Will Revolutionize Programming in Linux (ScyllaDB)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;serverfault.com&#x2F;questions&#x2F;551697&#x2F;apache-stability-on-a-very-high-traffic-server&quot;&gt;Apache Stability on a Very High-Traffic Server&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bobcares.com&#x2F;blog&#x2F;speed-up-apache&#x2F;&quot;&gt;Speed Up Apache&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.datadoghq.com&#x2F;blog&#x2F;monitoring-apache-web-server-performance&#x2F;&quot;&gt;Monitoring Apache Web Server Performance&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iximiuz.com&#x2F;en&#x2F;posts&#x2F;containers-learning-docker-with-docker&#x2F;&quot;&gt;Containers: Learning Docker with Docker&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;engineering.fb.com&#x2F;2022&#x2F;11&#x2F;15&#x2F;open-source&#x2F;sapling-source-control-scalable&#x2F;&quot;&gt;Sapling: A Scalable, User-Friendly Source Control System&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.chrome.com&#x2F;docs&#x2F;workbox&#x2F;&quot;&gt;Workbox&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typefox.io&#x2F;blog&#x2F;teaching-the-language-server-protocol-to-microsofts-monaco-editor&quot;&gt;Language Server Protocol in Monaco Editor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.pepsipu.com&#x2F;posts&#x2F;mujs-uiuctf&quot;&gt;mujs-uiuctf&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.pepsipu.com&#x2F;posts&#x2F;albatross-redpwnctf&quot;&gt;albatross-redpwnctf&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;turingcompl33t.github.io&#x2F;Awaitable-Timers&#x2F;&quot;&gt;Awaitable Timers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@jeeyoungk&#x2F;why-i-love-databases-1d4cc433685f&quot;&gt;Why I Love Databases&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.merigoux.ovh&#x2F;en&#x2F;2022&#x2F;12&#x2F;21&#x2F;phd-dissertation-background.html&quot;&gt;PhD Dissertation Background&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;siddhesh.in&#x2F;posts&#x2F;gcc-under-the-hood.html&quot;&gt;GCC Under the Hood&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steve-yegge.blogspot.com&#x2F;2007&#x2F;06&#x2F;rich-programmer-food.html&quot;&gt;Rich Programmer Food&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;travisdowns.github.io&#x2F;blog&#x2F;2020&#x2F;05&#x2F;13&#x2F;intel-zero-opt.html&quot;&gt;Intel Zero-Opt&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sidkshatriya&#x2F;me&#x2F;blob&#x2F;master&#x2F;007-My-Thoughts-on-OCaml-vs-Haskell-Rust-2023.md&quot;&gt;My Thoughts on OCaml vs Haskell&#x2F;Rust (2023)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ohadravid.github.io&#x2F;posts&#x2F;2023-05-coherence-and-errors&#x2F;&quot;&gt;Coherence and Errors&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;pl-resources&#x2F;&quot;&gt;PL Resources&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.algorithmica.org&#x2F;&quot;&gt;Algorithms for Modern Hardware&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.eventhelix.com&#x2F;design&#x2F;&quot;&gt;EventHelix System Design&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;k-lifo.com&#x2F;mphil.pdf&quot;&gt;Bartosz Milewski&#x27;s Master Thesis&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matt.might.net&#x2F;articles&#x2F;cps-conversion&#x2F;&quot;&gt;Compiling with Continuations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;faultlore.com&#x2F;blah&#x2F;&quot;&gt;Faultlore&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ralfj.de&#x2F;blog&#x2F;?s=08&quot;&gt;Ralf Jung&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reasonablypolymorphic.com&#x2F;blog&#x2F;love-types&#x2F;index.html&quot;&gt;Love Types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thunderseethe.dev&#x2F;series&#x2F;making-a-language&#x2F;&quot;&gt;Making a Language&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;ghc&#x2F;ghc&#x2F;-&#x2F;wikis&#x2F;reading-list&quot;&gt;GHC Reading List&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;pvk.ca&#x2F;Blog&#x2F;2014&#x2F;10&#x2F;19&#x2F;performance-optimisation-~-writing-an-essay&#x2F;&quot;&gt;Performance Optimisation ~ Writing an Essay&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;pvk.ca&#x2F;Blog&#x2F;2013&#x2F;09&#x2F;19&#x2F;all-you-need-is-call-slash-cc&#x2F;&quot;&gt;All You Need Is Call&#x2F;CC&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dipeshkaphle.github.io&#x2F;Learning&#x2F;miscellaneoussavedlinks&#x2F;dancres.github.io&#x2F;Pages&#x2F;&quot;&gt;dancres.github.io&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nnethercote.github.io&#x2F;&quot;&gt;nnethercote.github.io&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.hillelwayne.com&#x2F;post&#x2F;&quot;&gt;Hillel Wayne&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20220107060536&#x2F;http:&#x2F;&#x2F;wiki.luajit.org&#x2F;New-Garbage-Collector&quot;&gt;New Garbage Collector for LuaJIT&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.trailofbits.com&#x2F;&quot;&gt;Trail of Bits Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;melodiessim.netlify.app&#x2F;notes&#x2F;&quot;&gt;Melody&#x27;s Notes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gpfault.net&#x2F;posts&#x2F;asm-tut-3.txt.html?s=08&quot;&gt;Assembly Tutorial 3&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bloomberg.github.io&#x2F;blazingmq&#x2F;?s=08&quot;&gt;BlazingMQ&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ibraheem.ca&#x2F;posts&#x2F;too-many-web-servers&#x2F;?s=08&quot;&gt;Too Many Web Servers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.bartoszsypytkowski.com&#x2F;wasm-replayable-functions&#x2F;?s=08&quot;&gt;WASM Replayable Functions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kipp.ly&#x2F;past-webdev&#x2F;?s=08&quot;&gt;Past Webdev&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kipp.ly&#x2F;system-design-interviews&#x2F;&quot;&gt;System Design Interviews&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mazzo.li&#x2F;posts&#x2F;fast-pipes.html?s=08&quot;&gt;Fast Pipes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.cloudflare.com&#x2F;pin-and-unpin-in-rust&#x2F;?s=08&quot;&gt;Pin and Unpin in Rust&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;briancallahan.net&#x2F;blog&#x2F;archive.html&quot;&gt;Brian Callahan&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;c9x.me&#x2F;compile&#x2F;&quot;&gt;c9x.me&#x2F;compile&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;u7bsm9&#x2F;tree_structured_concurrency&quot;&gt;Tree-structured Concurrency&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dineshgowda.com&#x2F;posts&#x2F;demystifying-database-transcations&#x2F;&quot;&gt;Demystifying Database Transactions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lists.eatonphil.com&#x2F;software-resources.html?s=08&quot;&gt;Software Resources&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.alibabacloud.com&#x2F;blog&#x2F;java-development-practices-using-thread-pools-and-thread-variables-properly_600180&quot;&gt;Java Development Practices: Using Thread Pools and Thread Variables Properly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www3.ntu.edu.sg&#x2F;home&#x2F;ehchua&#x2F;programming&#x2F;java&#x2F;j5e_multithreading.html&quot;&gt;Java Multithreading&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;quuxplusone.github.io&#x2F;blog&#x2F;2022&#x2F;01&#x2F;06&#x2F;memcached-interview&#x2F;?s=08&quot;&gt;Memcached Interview&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tmandry.gitlab.io&#x2F;blog&#x2F;posts&#x2F;optimizing-await-1&#x2F;&quot;&gt;Optimizing &lt;code&gt;await&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;a-hack-to-implement-efficient-tls-thread-local-storage&#x2F;13264&quot;&gt;A Hack to Implement Efficient TLS (Thread Local Storage)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;0xax.gitbooks.io&#x2F;linux-insides&#x2F;content&#x2F;Theory&#x2F;linux-theory-1.html&quot;&gt;Linux Insides&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.figma.com&#x2F;blog&#x2F;server-side-sandboxing-containers-and-seccomp&#x2F;#j1WRe&quot;&gt;Server-Side Sandboxing: Containers and Seccomp&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ankitsultana.com&#x2F;2023&#x2F;09&#x2F;19&#x2F;reading-list.html&quot;&gt;Ankit Sultana&#x27;s Reading List&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dancres.github.io&#x2F;Pages&#x2F;?s=08&quot;&gt;dancres.github.io&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;brooker.co.za&#x2F;blog&#x2F;2014&#x2F;05&#x2F;19&#x2F;vr.html?s=08&quot;&gt;Marc Brooker&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2023&#x2F;08&#x2F;09&#x2F;types-and-zig.html&quot;&gt;Types and Zig&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;?s=08&quot;&gt;Scattered Thoughts&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zackoverflow.dev&#x2F;?s=08&quot;&gt;Zack&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ottertune.com&#x2F;blog&#x2F;the-part-of-postgresql-we-hate-the-most?s=08&quot;&gt;The Part of PostgreSQL We Hate the Most&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.uber.com&#x2F;en-IE&#x2F;blog&#x2F;our-journey-adopting-spiffe-spire&#x2F;?uclick_id=e894547d-4b09-4b35-bc21-bb2fc82a8ede&amp;amp;s=08&quot;&gt;Our Journey Adopting SPIFFE&#x2F;SPIRE at Uber&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;postgrespro.com&#x2F;community&#x2F;books&#x2F;internals?s=08&quot;&gt;Postgres Internals&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.uber.com&#x2F;blog&#x2F;nilaway-practical-nil-panic-detection-for-go&#x2F;&quot;&gt;NilAway: Practical Nil Panic Detection for Go&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.sigplan.org&#x2F;2021&#x2F;11&#x2F;18&#x2F;undefined-behavior-deserves-a-better-reputation&#x2F;&quot;&gt;Undefined Behavior Deserves a Better Reputation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.cloudflare.com&#x2F;how-to-execute-an-object-file-part-4&#x2F;&quot;&gt;How to Execute an Object File: Part 4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gowind.github.io&#x2F;?s=08&quot;&gt;GoWind&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cambium.inria.fr&#x2F;~fpottier&#x2F;pprint&#x2F;doc&#x2F;pprint&#x2F;?s=08&quot;&gt;PPrint Documentation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brandonspark&#x2F;mulligan&quot;&gt;Mulligan: A Statically-Typed Lisp-like Language&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;muxup.com&#x2F;2023q4&#x2F;storing-data-in-pointers?s=08&quot;&gt;Storing Data in Pointers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sillycross.github.io&#x2F;archives&#x2F;?s=08&quot;&gt;Sillycross&#x27;s Archives&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;danieljharvey.github.io&#x2F;?s=08&quot;&gt;Daniel J. Harvey&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.elastic.co&#x2F;security-labs&#x2F;signaling-from-within-how-ebpf-interacts-with-signals&quot;&gt;Signaling from Within: How eBPF Interacts with Signals&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wingolog.org&#x2F;&quot;&gt;Wingolog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.blog&#x2F;2023-12-07-upgrading-github-com-to-mysql-8-0&#x2F;&quot;&gt;Upgrading GitHub.com to MySQL 8.0&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.twitter.com&#x2F;engineering&#x2F;en_us&#x2F;topics&#x2F;insights&#x2F;2016&#x2F;manhattan-software-deployments-how-we-deploy-twitter-s-large-scale-distributed-database&quot;&gt;Twitter&#x27;s Manhattan Database&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ziglang.org&#x2F;news&#x2F;goodbye-cpp&#x2F;?s=08&quot;&gt;Goodbye, C++&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;leaningtech&#x2F;solving-the-structured-control-flow-problem-once-and-for-all-5123117b1ee2&quot;&gt;Solving the Structured Control Flow Problem Once and for All&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.talhoffman.com&#x2F;2021&#x2F;03&#x2F;22&#x2F;software-transactional-memory&#x2F;&quot;&gt;Software Transactional Memory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.type-driven.org.uk&#x2F;edwinb&#x2F;why-is-idris-2-so-much-faster-than-idris-1.html?s=08&quot;&gt;Why is Idris 2 so much faster than Idris 1?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pingcap.github.io&#x2F;tidb-dev-guide&#x2F;index.html?s=08&quot;&gt;TiDB Dev Guide&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cohost.org&#x2F;prophet&#x2F;post&#x2F;4032868-some-of-the-things-i?s=08&quot;&gt;Some of the things I&#x27;ve learned about building compilers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;surfingcomplexity.blog&#x2F;2023&#x2F;12&#x2F;31&#x2F;consistency&#x2F;&quot;&gt;Consistency&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tiarkrompf.github.io&#x2F;notes&#x2F;?&#x2F;just-write-the-parser&#x2F;&quot;&gt;Just Write the Parser&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;deadlockempire.github.io&#x2F;?s=08&quot;&gt;The Deadlock Empire&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.crunchydata.com&#x2F;blog&#x2F;an-overview-of-distributed-postgresql-architectures?s=08&quot;&gt;An Overview of Distributed PostgreSQL Architectures&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;danluu.com&#x2F;culture&#x2F;&quot;&gt;Dan Luu&#x27;s Blog on Culture&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.the-paper-trail.org&#x2F;post&#x2F;2014-08-09-distributed-systems-theory-for-the-distributed-systems-engineer&#x2F;&quot;&gt;Distributed Systems Theory for the Distributed Systems Engineer&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.kernel.org&#x2F;pub&#x2F;scm&#x2F;linux&#x2F;kernel&#x2F;git&#x2F;torvalds&#x2F;linux.git&#x2F;tree&#x2F;Documentation&#x2F;memory-barriers.txt?id=HEAD&amp;amp;s=08&quot;&gt;Linux Kernel Memory Barriers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pixel-druid.com&#x2F;articles&#x2F;stuff-i-learnt-in-2021.html&quot;&gt;Stuff I Learnt in 2021&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pixel-druid.com&#x2F;articles&#x2F;stuff-i-learnt-in-2022.html&quot;&gt;Stuff I Learnt in 2022&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;transactional.blog&#x2F;&quot;&gt;Transactional Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tikv.github.io&#x2F;deep-dive-tikv&#x2F;overview&#x2F;introduction.html&quot;&gt;Deep Dive TiKV&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.benstopford.com&#x2F;2015&#x2F;02&#x2F;14&#x2F;log-structured-merge-trees&#x2F;&quot;&gt;Log-Structured Merge-Trees&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.benstopford.com&#x2F;2009&#x2F;12&#x2F;06&#x2F;are-databases-a-thing-of-the-past&#x2F;&quot;&gt;Are Databases a Thing of the Past?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;eklitzke.org&#x2F;&quot;&gt;Eklitzke&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.pingcap.com&#x2F;blog&#x2F;distributed-transactions-tidb&#x2F;&quot;&gt;Distributed Transactions in TiDB&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rufflewind.com&#x2F;&quot;&gt;Rufflewind&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;artem.krylysov.com&#x2F;blog&#x2F;2023&#x2F;04&#x2F;19&#x2F;how-rocksdb-works&#x2F;?s=08&quot;&gt;How RocksDB Works&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.dataorienteddesign.com&#x2F;dodbook&#x2F;?s=08&quot;&gt;Data-Oriented Design&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jobhdez.github.io&#x2F;&quot;&gt;Job Hernandez&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lowlevelbits.substack.com&#x2F;p&#x2F;how-to-learn-compilers-llvm-edition&quot;&gt;How to Learn Compilers: LLVM Edition&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thecopenhagenbook.com&#x2F;?s=08&quot;&gt;The Copenhagen Book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;smallcultfollowing.com&#x2F;babysteps&#x2F;blog&#x2F;2024&#x2F;03&#x2F;04&#x2F;borrow-checking-without-lifetimes&#x2F;?s=08&quot;&gt;Borrow Checking Without Lifetimes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lihautan.com&#x2F;pause-and-resume-a-javascript-function&#x2F;&quot;&gt;Pause and Resume a JavaScript Function&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polytypic&#x2F;blog&#x2F;tree&#x2F;main&#x2F;posts&quot;&gt;Polytypic Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;liamoc.net&#x2F;posts&#x2F;2015-08-23-verified-compiler&#x2F;index.html?s=08&quot;&gt;Verified Compiler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.tweag.io&#x2F;blog&#x2F;2020-11-11-linear-dps&#x2F;?s=08&quot;&gt;Linear DP&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doisinkidney.com&#x2F;&quot;&gt;Doisinkidney&#x27;s Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jeremymikkola.com&#x2F;archive.html&quot;&gt;Type Theory Stuff in Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.scattered-thoughts.net&#x2F;writing&#x2F;notes-on-compiler-irs&#x2F;?s=08&quot;&gt;Notes on Compiler IRs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.ihcblog.com&#x2F;rust-runtime-design-1&#x2F;&quot;&gt;Rust Runtime Design&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.douggregor.net&#x2F;&quot;&gt;Swift for C++ Peeps&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tonyalicea.dev&#x2F;blog&#x2F;understanding-react-compiler&#x2F;&quot;&gt;Understanding the React Compiler&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.alibabacloud.com&#x2F;blog&#x2F;java-annotation-processing-tool---abstractprocessor_600185&quot;&gt;Java Annotation Processing Tool - AbstractProcessor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thume.ca&#x2F;archive.html&quot;&gt;Thume&#x27;s Archive&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ryanbrewer.dev&#x2F;posts&#x2F;getting-started-category-theory.html&quot;&gt;Getting Started with Category Theory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fasterthanli.me&#x2F;articles&#x2F;pin-and-suffering?s=08&quot;&gt;Pin and Suffering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nsrhor&#x2F;database_ruins_all_good_ideas&quot;&gt;Database Ruins All Good Ideas&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.sigplan.org&#x2F;blog&#x2F;&quot;&gt;SIGPLAN Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ryanbrewer.dev&#x2F;posts&#x2F;beginners-guide-pl-academia.html&quot;&gt;A Beginner&#x27;s Guide to PL Academia&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;prl.khoury.northeastern.edu&#x2F;blog&#x2F;index.html&quot;&gt;PRL @ Northeastern Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitar.co&#x2F;blog&#x2F;taming-null-dereferences-with-pluggable-type-systems-part-i&quot;&gt;Taming Null Dereferences with Pluggable Type Systems (Part I)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;s&#x2F;uufTftvdLu&quot;&gt;Recent PL Research&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;share.google&#x2F;f02xcK5Nzd2MZApvD&quot;&gt;How to Build an Agent - Amp&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;adamchalmers.com&#x2F;kubernetes-problems&#x2F;&quot;&gt;Kubernetes Problems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kirancodes.me&#x2F;posts&#x2F;log-proof-localisation.html&quot;&gt;Log Proof Localisation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;patternsinfp.wordpress.com&#x2F;&quot;&gt;Patterns in FP&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;courses-and-educational-resources&quot;&gt;Courses and Educational Resources&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leetcode.com&#x2F;list&#x2F;5hctxn45&quot;&gt;LeetCode Problem List&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wiki.aalto.fi&#x2F;display&#x2F;t1065450&#x2F;Advanced+compilers+2015&quot;&gt;Advanced Compilers 2015&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;llvm-clang-study-notes.readthedocs.io&#x2F;en&#x2F;latest&#x2F;index.html&quot;&gt;LLVM &amp;amp; Clang Study Notes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;shahjalalshohag.github.io&#x2F;blog&#x2F;topic-list&#x2F;&quot;&gt;Topic List&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iucompilercourse.github.io&#x2F;IU-P423-P523-E313-E513-Fall-2020&#x2F;&quot;&gt;IU Compiler Course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ucsd-progsys.github.io&#x2F;131-web&#x2F;&quot;&gt;Compilers in Haskell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ucsd-cse131-f19.github.io&#x2F;&quot;&gt;UCSD Compilers OCaml Course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.seas.upenn.edu&#x2F;~cis341&#x2F;current&#x2F;&quot;&gt;UPenn Compilers Course (OCaml)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;web.mit.edu&#x2F;6.005&#x2F;www&#x2F;fa15&#x2F;&quot;&gt;MIT 6.005&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;courses.ccs.neu.edu&#x2F;cs4410&#x2F;&quot;&gt;NEU CS4410&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;web.mit.edu&#x2F;6.005&#x2F;www&#x2F;archive&#x2F;&quot;&gt;MIT 6.005 Archive&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matt.might.net&#x2F;articles&#x2F;&quot;&gt;Matt Might&#x27;s Articles&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cis.upenn.edu&#x2F;~cis341&#x2F;20sp&#x2F;&quot;&gt;UPenn CIS341 2020&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;dinosaur.compilertools.net&#x2F;yacc&#x2F;index.html&quot;&gt;Dinosaur Book (YACC)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.lua.org&#x2F;manual&#x2F;5.3&#x2F;manual.html&quot;&gt;Lua 5.3 Manual&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;basarat.gitbook.io&#x2F;typescript&#x2F;&quot;&gt;TypeScript Gitbook&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stanford-cs242.github.io&#x2F;f19&#x2F;&quot;&gt;Stanford CS242&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;labuladong.gitbook.io&#x2F;algo-en&#x2F;&quot;&gt;Labuladong&#x27;s Algo Book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iucompilercourse.github.io&#x2F;IU-P423-P523-E313-E513-Fall-2020&#x2F;&quot;&gt;IU Compiler Course (Again)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cs.opensource.google&#x2F;&quot;&gt;Google Code Source&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;api&#x2F;language-extensions&#x2F;language-server-extension-guide&quot;&gt;VSCode Language Server Extension Guide&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jongy.github.io&#x2F;&quot;&gt;Jongy&#x27;s Website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sites.google.com&#x2F;site&#x2F;steveyegge2&#x2F;&quot;&gt;Steve Yegge&#x27;s Blog Rants&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hjaem.info&#x2F;itpl&quot;&gt;ITPL&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cs.au.dk&#x2F;~amoeller&#x2F;spa&#x2F;&quot;&gt;Static Program Analysis Course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLC-dUCVQghfdu7AG5f_p4oRyKgjDuoAWU&quot;&gt;Static Program Analysis Videos&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sre.google&#x2F;sre-book&#x2F;table-of-contents&#x2F;&quot;&gt;SRE Book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.latex-tutorial.com&#x2F;tutorials&#x2F;first-document&#x2F;&quot;&gt;LaTeX Tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheNumbat&#x2F;Lists&quot;&gt;TheNumbat&#x27;s Lists&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thenumb.at&#x2F;&quot;&gt;TheNumb.at&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GoWind&#x2F;GoWind.github.io&quot;&gt;GoWind&#x27;s GitHub&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;research.ralfj.de&#x2F;&quot;&gt;Ralf Jung&#x27;s Research&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ucsd-compilers-s23.github.io&#x2F;index.html#schedule&quot;&gt;UCSD Compilers S23&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.catb.org&#x2F;~esr&#x2F;faqs&#x2F;hacker-howto.html?s=08&quot;&gt;How to Become a Hacker&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;nil.csail.mit.edu&#x2F;6.824&#x2F;2022&#x2F;&quot;&gt;Distributed Systems: 6.824&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cl.cam.ac.uk&#x2F;teaching&#x2F;2122&#x2F;ConcDisSys&#x2F;dist-sys-notes.pdf&quot;&gt;Kleppmann&#x27;s Distributed Systems Course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;15445.courses.cs.cmu.edu&#x2F;fall2019&#x2F;schedule.html&quot;&gt;CMU DB Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;verso.mat.uam.es&#x2F;~pablo.fernandez&#x2F;lovasz-discrete%20mathematics.pdf&quot;&gt;Discrete Mathematics by László Lovász&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;css.csail.mit.edu&#x2F;6.858&#x2F;2020&#x2F;&quot;&gt;Security: 6.858&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ocw.mit.edu&#x2F;courses&#x2F;6-080-great-ideas-in-theoretical-computer-science-spring-2008&#x2F;&quot;&gt;Theoretical CS: 6.080&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;web.stanford.edu&#x2F;class&#x2F;cs168&#x2F;index.html&quot;&gt;Modern Algorithmic Toolbox&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.algorithmica.org&#x2F;hpc&#x2F;&quot;&gt;Algorithms for Modern Hardware&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ocw.mit.edu&#x2F;courses&#x2F;6-172-performance-engineering-of-software-systems-fall-2018&#x2F;&quot;&gt;Performance Engineering of Software Systems: 6.172&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;people.eecs.berkeley.edu&#x2F;~kubitron&#x2F;cs262&#x2F;index_lectures.html&quot;&gt;Berkeley CS262&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imteekay&#x2F;programming-language-research&quot;&gt;Programming Language Research&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fanpu.io&#x2F;blog&#x2F;2023&#x2F;advanced-operating-systems-course-review&#x2F;?s=08&quot;&gt;CMU Course Reviews&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;muratbuffalo.blogspot.com&#x2F;2020&#x2F;06&#x2F;learning-about-distributed-systems.html&quot;&gt;Learning About Distributed Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;howqueryengineswork.com&quot;&gt;How Query Engines Work&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cstack.github.io&#x2F;db_tutorial&#x2F;&quot;&gt;Let&#x27;s Build a Simple Database&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pingcap&#x2F;talent-plan&quot;&gt;PingCAP Talent Plan&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;skyzh.github.io&#x2F;mini-lsm&#x2F;&quot;&gt;Mini-LSM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cmu-db&#x2F;bustub&quot;&gt;Bustub Course Projects&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;linux-kernel-labs.github.io&#x2F;refs&#x2F;heads&#x2F;master&#x2F;&quot;&gt;Linux Kernel Labs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;courses&#x2F;cs4110&#x2F;2020fa&#x2F;schedule.html&quot;&gt;Cornell CS4110&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cl.cam.ac.uk&#x2F;teaching&#x2F;1516&#x2F;L28&#x2F;materials.html&quot;&gt;Cambridge Advanced Functional Programming&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cl.cam.ac.uk&#x2F;teaching&#x2F;1516&#x2F;ConcDisSys&#x2F;&quot;&gt;Cambridge Distributed Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stepchowfun&#x2F;proofs&#x2F;tree&#x2F;main&quot;&gt;Proofs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Gbury&#x2F;ocaml-memgraph&#x2F;tree&#x2F;master&quot;&gt;OCaml Memgraph&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cl.cam.ac.uk&#x2F;teaching&#x2F;1718&#x2F;L28&#x2F;materials.html&quot;&gt;Cambridge Advanced Functional Programming (2017-18)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;simon.cedeela.fr&#x2F;&quot;&gt;Simon&#x27;s Website&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomprimozic&#x2F;type-systems?s=08&quot;&gt;Type Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;were&#x2F;mcir?s=08&quot;&gt;MCIR&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ziglang.org&#x2F;documentation&#x2F;0.11.0&#x2F;&quot;&gt;Zig Documentation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pl.cs.cornell.edu&#x2F;pldg&#x2F;&quot;&gt;PLDG at Cornell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;brianshih1.github.io&#x2F;mini-key-value-db&#x2F;chapter_1&#x2F;motivation.html&quot;&gt;Mini Key-Value DB&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ammkrn.github.io&#x2F;type_checking_in_lean4&#x2F;title_page.html&quot;&gt;Lean4 Type Checking&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;summer.haskell.org&#x2F;ideas.html#liquidhaskell-name-resolution&quot;&gt;GSOC &#x27;24 Ideas&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;publications&#x2F;&quot;&gt;Lean Publications&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gallais.github.io&#x2F;pdf&#x2F;agdarsec18.pdf&quot;&gt;Total Parser Combinator&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cse.chalmers.se&#x2F;~nad&#x2F;publications&#x2F;danielsson-parser-combinators.pdf&quot;&gt;Terminating Parser Combinators&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mcyoung.xyz&#x2F;syllabus?s=08&quot;&gt;Michael Young&#x27;s Syllabus&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;anggtwu.net&#x2F;tmp&#x2F;nederpelt_geuvers__type_theory_and_formal_proof_an_introduction.pdf&quot;&gt;Type Theory and Formal Proof&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.mpi-sws.org&#x2F;FP&#x2F;semantics-course&#x2F;&quot;&gt;Semantics Course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;xavierleroy.org&#x2F;CdF&#x2F;2020-2021&#x2F;&quot;&gt;Xavier Leroy&#x27;s Courses&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;course.ccs.neu.edu&#x2F;cs2800sp23&#x2F;index.html&quot;&gt;Logic and Computation Course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;fpvandoorn&#x2F;LeanCourse24&#x2F;master&#x2F;lean-tactics.pdf&quot;&gt;Lean Course Tactics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;williamjbowman.com&#x2F;tmp&#x2F;nbe-four-ways&#x2F;&quot;&gt;NBE Four Ways&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Higher-order_abstract_syntax#:~:text=In%20computer%20science%2C%20higher%2Dorder,for%20languages%20with%20variable%20binders.&quot;&gt;Higher-Order Abstract Syntax&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;emmanueljs1.github.io&#x2F;nbe&#x2F;NbE.html&quot;&gt;Normalization by Evaluation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ece.uwaterloo.ca&#x2F;~agurfink&#x2F;ece750t29&#x2F;&quot;&gt;ECE750T29: Advanced Topics in Software Engineering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kartiknagar.github.io&#x2F;courses&#x2F;apv&#x2F;lectures&#x2F;&quot;&gt;APV: Automated Program Verification&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kmicinski.com&#x2F;cis700-f23&#x2F;&quot;&gt;CIS700: Topics in Programming Languages &amp;amp; Compilers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kartiknagar.github.io&#x2F;courses&#x2F;rtc-jul2023&#x2F;paper_list&#x2F;&quot;&gt;RTC: Research Topics in Compilers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lean-forward.github.io&#x2F;logical-verification&#x2F;&quot;&gt;Logical Verification&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;math.andrej.com&#x2F;2012&#x2F;11&#x2F;08&#x2F;how-to-implement-dependent-type-theory-i&#x2F;&quot;&gt;How to Implement Dependent Type Theory I&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;csci1710.github.io&#x2F;book&#x2F;chapters&#x2F;welcome.html&quot;&gt;CSCI1710: Logic for Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maxv.dk&#x2F;program_logics_a_la_carte.pdf&quot;&gt;Program Logics a la Carte&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;davidchristiansen.dk&#x2F;tutorials&#x2F;nbe&#x2F;&quot;&gt;Normalization by Evaluation Tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;williamjbowman.com&#x2F;teaching&#x2F;2022&#x2F;w2&#x2F;cpsc539b&#x2F;#nav&quot;&gt;CPSC539B: Dependently-Typed Programming&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;williamjbowman.com&#x2F;teaching&#x2F;2023&#x2F;w1&#x2F;cpsc539b&#x2F;&quot;&gt;CPSC539B: Advanced Functional Programming&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lara.epfl.ch&#x2F;w&#x2F;_media&#x2F;sav08&#x2F;backwright98refinementcalculus.pdf&quot;&gt;Refinement Calculus&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amelia.how&#x2F;posts&#x2F;the-gmachine-in-detail.html&quot;&gt;The G-Machine in Detail&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amelia.how&#x2F;posts&#x2F;the-semantics-of-evaluation-amp-continuations.html&quot;&gt;The Semantics of Evaluation &amp;amp; Continuations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amelia.how&#x2F;quick&#x2F;impredicative-polymorphism.html&quot;&gt;Impredicative Polymorphism&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amelia.how&#x2F;posts&#x2F;amulets-new-type-checker.html&quot;&gt;Amulet&#x27;s New Type Checker&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amelia.how&#x2F;posts&#x2F;dependent-types.html&quot;&gt;Dependent Types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.princeton.edu&#x2F;~appel&#x2F;papers&#x2F;ecosystem.pdf&quot;&gt;A Proof of Correctness for the Compiler of a Verified Ecosystem&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dune.build&#x2F;blog&#x2F;new-computation-model&#x2F;&quot;&gt;New Computation Model for Dune&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.janestreet.com&#x2F;how-we-accidentally-built-a-better-build-system-for-ocaml-index&#x2F;&quot;&gt;How We Accidentally Built a Better Build System for OCaml&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.codeminer42.com&#x2F;exploring-lean4&#x2F;&quot;&gt;Exploring Lean4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.inria.fr&#x2F;fpottier&#x2F;fix&quot;&gt;FIX: A Library for Fixpoints&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;disi.unitn.it&#x2F;~bernardi&#x2F;RSISE11&#x2F;Papers&#x2F;curry-howard.pdf&quot;&gt;Curry-Howard Correspondence&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.paultaylor.eu&#x2F;stable&#x2F;prot.pdf&quot;&gt;Proofs and Types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;anggtwu.net&#x2F;tmp&#x2F;nederpelt_geuvers__type_theory_and_formal_proof_an_introduction.pdf&quot;&gt;Type Theory and Formal Proof: An Introduction&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.pls-lab.org&#x2F;Structural_Operational_Semantics&quot;&gt;Structural Operational Semantics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;doc&#x2F;reference&#x2F;latest&#x2F;#&quot;&gt;Lean Reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leanprover-community.github.io&#x2F;lean4-metaprogramming-book&#x2F;&quot;&gt;Metaprogramming in Lean4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ammkrn.github.io&#x2F;type_checking_in_lean4&#x2F;&quot;&gt;Typechecking in Lean4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coq.inria.fr&#x2F;doc&#x2F;master&#x2F;refman&#x2F;language&#x2F;cic.html&quot;&gt;Calculus of Inductive Constructions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leanprover-community.github.io&#x2F;learn.html&quot;&gt;Learn Lean&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leanprover-community.github.io&#x2F;mathlib4_docs&#x2F;&quot;&gt;Mathlib4 API Reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zanzix.github.io&#x2F;posts&#x2F;5-substructural-polymorphism.html&quot;&gt;Substructural Polymorphism&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rkirov.github.io&#x2F;posts&#x2F;incremental_computation&#x2F;&quot;&gt;Incremental Computation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rawgit.com&#x2F;typetools&#x2F;checker-framework&#x2F;master&#x2F;docs&#x2F;developer&#x2F;new-contributor-projects.html#ownership-type-system&quot;&gt;Checker Framework New Contributor Projects&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cambridge.org&#x2F;core&#x2F;services&#x2F;aop-cambridge-core&#x2F;content&#x2F;view&#x2F;47B10882829E4B32F98FBA93B28CEF30&#x2F;S0956796818000205a.pdf&#x2F;1ml-core-and-modules-united.pdf&quot;&gt;1ML - Core and Modules United&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reed.cs.depaul.edu&#x2F;jriely&#x2F;447&#x2F;assets&#x2F;articles&#x2F;strachey-fundamental-concepts-in-programming-languages.pdf&quot;&gt;Fundamental Concepts in Programming Languages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.ezyang.com&#x2F;2019&#x2F;05&#x2F;pytorch-internals&#x2F;&quot;&gt;PyTorch Internals&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;pdf&#x2F;10.1145&#x2F;3473599&quot;&gt;Skipping the Binder Bureaucracy with Mixed Embeddings in a Semantics Course (Functional Pearl)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.racket-lang.org&#x2F;redex&#x2F;&quot;&gt;Redex&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;asatarin.github.io&#x2F;testing-distributed-systems&#x2F;?s=08&quot;&gt;Testing Distributed Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;poisson.chat&#x2F;&quot;&gt;Poisson Chat&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.yeejian.dev&#x2F;files&#x2F;240603-reciprog-slides.pdf&quot;&gt;Reciprog Slides&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;plv.mpi-sws.org&#x2F;paco&#x2F;ppcp.pdf&quot;&gt;Parametricity and Coinduction&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;adam.chlipala.net&#x2F;cpdt&#x2F;html&#x2F;Coinductive.html&quot;&gt;Coinductive Datatypes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;~kozen&#x2F;Papers&#x2F;Structural.pdf&quot;&gt;Structural Recursion and Co-recursion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.querifylabs.com&#x2F;blog&#x2F;composable-data-systems-lessons-from-apache-calcite-success&quot;&gt;Composable Data Systems: Lessons from Apache Calcite&#x27;s Success&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.typetheoryforall.com&#x2F;&quot;&gt;Type Theory for All&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reasonablypolymorphic.com&#x2F;blog&#x2F;better-data-types-a-la-carte&#x2F;index.html&quot;&gt;Better Data Types à la Carte&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;lean4&#x2F;doc&#x2F;&quot;&gt;Lean4 Documentation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;discussions-and-forums&quot;&gt;Discussions and Forums&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;12736437&#x2F;why-does-gcc-push-rbx-at-the-beginning-of-main&quot;&gt;Stack Overflow: Why does GCC push &lt;code&gt;rbx&lt;&#x2F;code&gt; at the beginning of &lt;code&gt;main&lt;&#x2F;code&gt;?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;43438875&#x2F;confusion-about-statet-state-and-monadstate&quot;&gt;Stack Overflow: Confusion about &lt;code&gt;StateT&lt;&#x2F;code&gt;, &lt;code&gt;State&lt;&#x2F;code&gt;, and &lt;code&gt;MonadState&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;softwareengineering.stackexchange.com&#x2F;questions&#x2F;350840&#x2F;how-does-garbage-collection-work-in-languages-which-are-natively-compiled&#x2F;350856#350856&quot;&gt;Stack Overflow: How does garbage collection work in languages which are natively compiled?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;programming&#x2F;comments&#x2F;63hth&#x2F;ask_reddit_which_oss_codebases_out_there_are_so&#x2F;c02pxbp&#x2F;&quot;&gt;Reddit: Which OSS codebases out there are so beautiful they bring a tear to your eye?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;comments&#x2F;fn7z4d&#x2F;no_good_overview_of_how_languages_implement&#x2F;&quot;&gt;Reddit: No good overview of how languages are implemented?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=30586740&quot;&gt;Hacker News: The Dirty Pipe Vulnerability&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;adventofcode&#x2F;comments&#x2F;zd1hqy&#x2F;2022_day_5_i_know_i_am_overthinking_it&#x2F;?utm_source=share&amp;amp;utm_medium=android_app&amp;amp;utm_name=androidcss&amp;amp;utm_term=3&amp;amp;utm_content=share_button&quot;&gt;Reddit: Advent of Code 2022 Day 5&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;comments&#x2F;zkrtgp&#x2F;thoughts_on_proof_assistants&#x2F;?utm_source=share&amp;amp;utm_medium=android_app&amp;amp;utm_name=androidcss&amp;amp;utm_term=3&amp;amp;utm_content=share_button&quot;&gt;Reddit: Thoughts on proof assistants?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;s&#x2F;8fh6fcb8yU&quot;&gt;Reddit: Programmable Type Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;s&#x2F;Nj5wJwOWT2&quot;&gt;Reddit: Recent PL Research&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;u7bsm9&#x2F;tree_structured_concurrency&quot;&gt;Lobste.rs: Tree-structured Concurrency&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21041678&quot;&gt;Hacker News: Discussion on a blog post&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25388091&quot;&gt;Hacker News: Discussion on a blog post&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25386756&quot;&gt;Hacker News: Discussion on a blog post&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26271117&quot;&gt;Hacker News: Discussion on a blog post&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=15478467&quot;&gt;Hacker News: Discussion on a blog post&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;q&#x2F;4178175&#x2F;9788379&quot;&gt;Stack Overflow: &lt;code&gt;volatile&lt;&#x2F;code&gt; keyword in C++&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;5057069&#x2F;9788379&quot;&gt;Stack Overflow: &lt;code&gt;git rebase --onto&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;softwareengineering.stackexchange.com&#x2F;a&#x2F;425923&quot;&gt;Software Engineering Stack Exchange: What is the single most influential book every programmer should read?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;6089086&#x2F;what-is-open-recursion&quot;&gt;Stack Overflow: What is open recursion?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;46672001&#x2F;is-it-safe-to-clean-docker-overlay2&quot;&gt;Stack Overflow: Is it safe to clean docker&#x2F;overlay2?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;22507448&#x2F;the-value-restriction&quot;&gt;Stack Overflow: The Value Restriction&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;106591&#x2F;what-is-the-volatile-keyword-useful-for&quot;&gt;Stack Overflow: What is the &lt;code&gt;volatile&lt;&#x2F;code&gt; keyword useful for?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cs.stackexchange.com&#x2F;questions&#x2F;525&#x2F;what-is-coinduction&quot;&gt;Stack Exchange: What is coinduction?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;proofassistants.stackexchange.com&#x2F;questions&#x2F;899&#x2F;comparison-between-proof-assistants-for-coinductive-structures-and-proofs&quot;&gt;Proof Assistants Stack Exchange: Comparison between proof assistants for coinductive structures and proofs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18999520&quot;&gt;Hacker News: Discussion on a blog post&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;firefox&#x2F;comments&#x2F;1cs3g49&#x2F;address_bar_suggestions_going_up_instead_of_down&#x2F;&quot;&gt;Reddit: Firefox address bar suggestions going up instead of down&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;forums.swift.org&#x2F;t&#x2F;swift-type-checking-is-undecidable&#x2F;39024&quot;&gt;Swift Forums: Swift Type Checking is Undecidable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;LocalLLaMA&#x2F;s&#x2F;ndOi99zKLC&quot;&gt;Reddit: Local LLM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;s&#x2F;U92wdt3Nj4&quot;&gt;Reddit: Programming Languages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;s&#x2F;mCBOtykYqZ&quot;&gt;Reddit: Programming Languages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26633685&quot;&gt;Hacker News: Discussion on a blog post&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;nsrhor&#x2F;database_ruins_all_good_ideas&quot;&gt;Lobste.rs: Database Ruins All Good Ideas&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coq.discourse.group&#x2F;t&#x2F;what-is-the-difference-between-gallina-and-ltac&#x2F;1184&#x2F;5&quot;&gt;Coq Discourse: What is the difference between Gallina and Ltac?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;dependent-types-in-the-purest-form&#x2F;10547&#x2F;7&quot;&gt;OCaml Discourse: Dependent types in the purest form&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;forums.swift.org&#x2F;t&#x2F;pitch-dependent-types-universes-stage-1-of-proof-driven-development&#x2F;63754&quot;&gt;Swift Forums: Pitch: Dependent Types &amp;amp; Universes (Stage 1 of Proof-Driven Development)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;multicore-blog-post-a-deep-dive-into-multicore-ocaml-garbage-collector&#x2F;557&quot;&gt;OCaml Discourse: Multicore blog post: a deep dive into multicore OCaml garbage collector&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;comments&#x2F;vjmxuy&#x2F;programmable_type_systems&#x2F;&quot;&gt;Reddit: Programmable Type Systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;s&#x2F;uufTftvdLu&quot;&gt;Reddit: Recent PL Research&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;math.stackexchange.com&#x2F;questions&#x2F;3466976&#x2F;online-reference-book-for-implementing-concepts-in-type-theory?s=08&quot;&gt;Math Stack Exchange: Online reference&#x2F;book for implementing concepts in type theory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;langdev.stackexchange.com&#x2F;questions&#x2F;3372&#x2F;what-does-it-mean-for-a-type-system-or-language-to-be-sound&#x2F;3377#3377&quot;&gt;LangDev Stack Exchange: What does it mean for a type system or language to be sound?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;proofassistants.stackexchange.com&#x2F;questions&#x2F;1183&#x2F;how-much-of-trouble-is-leans-failure-of-normalization-given-that-logical-consi&quot;&gt;Proof Assistants Stack Exchange: How much of trouble is Lean&#x27;s failure of normalization given that logical consistency is guaranteed?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;proofassistants.stackexchange.com&#x2F;questions&#x2F;268&#x2F;is-there-something-special-about-weak-head-normal-form-used-with-proof-assistant&quot;&gt;Proof Assistants Stack Exchange: Is there something special about weak head normal form used with proof assistants?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cstheory.stackexchange.com&#x2F;questions&#x2F;40339&#x2F;what-exactly-is-large-elimination&quot;&gt;CS Theory Stack Exchange: What exactly is large elimination?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cs.stackexchange.com&#x2F;questions&#x2F;74742&#x2F;relation-between-type-checking-decidability-typability-decidability-and-strong&quot;&gt;CS Stack Exchange: Relation between type checking decidability, typability decidability and strong normalization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;dependent-types-in-the-purest-form&#x2F;10547&quot;&gt;OCaml Discourse: Dependent types in the purest form&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;best-approach-for-implementing-open-recursion-over-extensible-types&#x2F;11678&quot;&gt;OCaml Discourse: Best approach for implementing open recursion over extensible types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;Nepal&#x2F;s&#x2F;cDgaDQhSIx&quot;&gt;Reddit: Nepal&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;miscellaneous&quot;&gt;Miscellaneous&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;storage.googleapis.com&#x2F;coding-competitions.appspot.com&#x2F;interactive_runner.py&quot;&gt;Interactive Runner&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;[inxi command](inxi --admin --verbosity=7 --filter --no-host --width)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;charles-l&#x2F;koona&quot;&gt;koona&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KCreate&#x2F;charly-vm&quot;&gt;charly-vm&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adam-mcdaniel&#x2F;oakc&quot;&gt;oakc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cshuaimin&#x2F;ssr.nvim&#x2F;&quot;&gt;ssr.nvim&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheNumbat&#x2F;Lists&quot;&gt;TheNumbat&#x2F;Lists&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GoWind&#x2F;GoWind.github.io&quot;&gt;GoWind.github.io&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ocaml&#x2F;ocaml&#x2F;pull&#x2F;12193&quot;&gt;OCaml Pull Request #12193&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;weliveindetail&#x2F;llvm-expected&quot;&gt;llvm-expected&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imteekay&#x2F;programming-language-research&quot;&gt;programming-language-research&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pigworker&#x2F;CS410-18&#x2F;tree&#x2F;master?s=08&quot;&gt;CS410-18&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomprimozic&#x2F;type-systems?s=08&quot;&gt;tomprimozic&#x2F;type-systems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;were&#x2F;mcir?s=08&quot;&gt;were&#x2F;mcir&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ocsigen&#x2F;js_of_ocaml&#x2F;pull&#x2F;1503&quot;&gt;ocsigen&#x2F;js_of_ocaml Pull Request #1503&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brandonspark&#x2F;mulligan&quot;&gt;brandonspark&#x2F;mulligan&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Yiling-J&#x2F;theine-go&#x2F;issues&#x2F;29&quot;&gt;Yiling-J&#x2F;theine-go Issue #29&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;erikgrinaker&#x2F;readings?s=08&quot;&gt;erikgrinaker&#x2F;readings&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polytypic&#x2F;blog&#x2F;tree&#x2F;main&#x2F;posts&quot;&gt;polytypic&#x2F;blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;etcd-io&#x2F;etcd&#x2F;issues&#x2F;741&quot;&gt;etcd Issue #741&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nuprl&#x2F;10PL&quot;&gt;nuprl&#x2F;10PL&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;digama0&#x2F;lean-type-theory&#x2F;releases&quot;&gt;digama0&#x2F;lean-type-theory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;Elewyth&#x2F;type-search&#x2F;-&#x2F;tree&#x2F;main&quot;&gt;Elewyth&#x2F;type-search&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flux-rs&#x2F;flux&#x2F;issues&#x2F;549&quot;&gt;flux-rs&#x2F;flux Issue #549&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bufbuild&#x2F;protovalidate-java&quot;&gt;bufbuild&#x2F;protovalidate-java&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aripiprazole&#x2F;lura?s=08&quot;&gt;aripiprazole&#x2F;lura&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aripiprazole&#x2F;soft&quot;&gt;aripiprazole&#x2F;soft&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;moby&#x2F;moby&#x2F;issues&#x2F;1905&quot;&gt;moby&#x2F;moby Issue #1905&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Fewbytes&#x2F;rubber-docker&quot;&gt;Fewbytes&#x2F;rubber-docker&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wasp-lang&#x2F;haskell-handbook&#x2F;blob&#x2F;master&#x2F;cabal-and-stack.md&quot;&gt;wasp-lang&#x2F;haskell-handbook&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aripiprazole&#x2F;lura?s=08&quot;&gt;lura&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aripiprazole&#x2F;soft&quot;&gt;soft&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=30586740&quot;&gt;The Dirty Pipe Vulnerability&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31390742&quot;&gt;Modern JavaScript Tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;2025.ecoop.org&#x2F;news#ECOOP-Test-of-Time-Award-for-%E2%80%98Towards-type-inference-for-JavaScript%E2%80%99-by-C.-Anderson,-P.-Giannini,-and-S.-Drossopoulou&quot;&gt;ECOOP Test of Time Award&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;share.google&#x2F;j88M3uDIcStdQucFC&quot;&gt;NUS – Beyond PhD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;lean4&#x2F;doc&#x2F;&quot;&gt;Lean4 Documentation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;doc&#x2F;reference&#x2F;latest&#x2F;&quot;&gt;Lean Reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;posts&#x2F;tikhon-jelvis_from-parametricity-to-conservation-laws-ugcPost-7343186176993894401-zqQp?utm_source=share&amp;amp;utm_medium=member_android&amp;amp;rcm=ACoAACFq95gBioa2a6Aj34UHcB52jBCKVjk5T6k&quot;&gt;From Parametricity to Conservation Laws&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;share.google&#x2F;f02xcK5Nzd2MZApvD&quot;&gt;How to Build an Agent - Amp&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;2025.ecoop.org&#x2F;news#ECOOP-Test-of-Time-Award-for-%E2%80%98Towards-type-inference-for-JavaScript%E2%80%99-by-C.-Anderson,-P.-Giannini,-and-S.-Drossopoulou&quot;&gt;ECOOP Test of Time Award&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;share.google&#x2F;j88M3uDIcStdQucFC&quot;&gt;NUS – Beyond PhD&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;lean4&#x2F;doc&#x2F;&quot;&gt;Lean4 Documentation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;doc&#x2F;reference&#x2F;latest&#x2F;&quot;&gt;Lean Reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;posts&#x2F;tikhon-jelvis_from-parametricity-to-conservation-laws-ugcPost-7343186176993894401-zqQp?utm_source=share&amp;amp;utm_medium=member_android&amp;amp;rcm=ACoAACFq95gBioa2a6Aj34UHcB52jBCKVjk5T6k&quot;&gt;From Parametricity to Conservation Laws&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>OCaml</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/ocaml/"/>
        <id>https://dipeshkaphle.github.io/Learning/ocaml/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/ocaml/">&lt;h1 id=&quot;ocaml&quot;&gt;Ocaml&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cs3110.github.io&#x2F;textbook&#x2F;cover.html&quot;&gt;CS3110 Ocaml Cornell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dev.realworldocaml.org&#x2F;&quot;&gt;Real World OCaml&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;caml.inria.fr&#x2F;pub&#x2F;docs&#x2F;oreilly-book&#x2F;html&#x2F;index.html&quot;&gt;OCaml Internals(GC chapter very good)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34013767&quot;&gt;OCaml 5.0 multicore is out (HN Discussion)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;watch.ocaml.org&#x2F;&quot;&gt;OCaml Videos&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.shaynefletcher.org&#x2F;2017&#x2F;05&#x2F;more-type-classes-in-ocaml.html&quot;&gt;More Typeclasses in OCaml&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.shaynefletcher.org&#x2F;2016&#x2F;10&#x2F;implementing-type-classes-as-ocaml.html&quot;&gt;Implementing typeclasses as OCaml modules&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.pathsensitive.com&#x2F;2023&#x2F;03&#x2F;modules-matter-most-for-masses.html&quot;&gt;Modules Matter Most for the masses&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.janestreet.com&#x2F;oxidizing-ocaml-locality&#x2F;&quot;&gt;Oxidizing OCaml: Locality&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.janestreet.com&#x2F;oxidizing-ocaml-ownership&#x2F;&quot;&gt;Oxidizing OCaml: Rust-Style Ownership&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.janestreet.com&#x2F;oxidizing-ocaml-parallelism&#x2F;&quot;&gt;Oxidizing OCaml: Data Race Freedom&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;74648858&#x2F;how-does-a-language-like-ocaml-implement-pattern-matching&#x2F;74653861#74653861&quot;&gt;How does a language like OCaml implement pattern matching?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ocaml-bench&#x2F;notes&#x2F;blob&#x2F;master&#x2F;profiling_notes.md&quot;&gt;Ocaml Profiling(Can follow technqiues&#x2F;tools used here in general too)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gopiandcode.uk&#x2F;logs&#x2F;log-ways-of-sql-in-ocaml.html&quot;&gt;Petrol: embedding a type-safe SQL API in OCaml using GADTs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gopiandcode.uk&#x2F;logs&#x2F;log-writing-activitypub.html&quot;&gt;How I wrote an Activitypub Server in OCaml: Lessons Learnt, Weekends Lost&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.janestreet.com&#x2F;finding-memory-leaks-with-memtrace&#x2F;&quot;&gt;Memtrace overview&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;janestreet&#x2F;memtrace&#x2F;blob&#x2F;master&#x2F;docs&#x2F;internal.md&quot;&gt;internals&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.janestreet.com&#x2F;a-brief-trip-through-spacetime&#x2F;&quot;&gt;Spacetime&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;ocaml-compiler-design-and-development&#x2F;5823&quot;&gt;Discuss discussion on OCaml Compiler Design and Development&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;tarides.com&#x2F;blog&#x2F;2023-07-07-making-ocaml-5-succeed-for-developers-and-organisations&#x2F;&quot;&gt;Making OCaml5 succeed for developers and organisations(has lots of links that can be studied)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ocaml&#x2F;ocaml&#x2F;pull&#x2F;12193&quot;&gt;PR for Compaction in OCaml5&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ocaml.org&#x2F;docs&#x2F;profiling&quot;&gt;Profiling in OCaml&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;tarides.com&#x2F;blog&#x2F;2023-08-07-kcas-building-a-lock-free-stm-for-ocaml-1-2&#x2F;&quot;&gt;kcas 1&#x2F;2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;tarides.com&#x2F;blog&#x2F;2023-08-10-kcas-building-a-lock-free-stm-for-ocaml-2-2&#x2F;&quot;&gt;kcas 2&#x2F;2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;s&#x2F;mCBOtykYqZ&quot;&gt; Are OCaml modules basically compile-time records? &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;homepages.inf.ed.ac.uk&#x2F;slindley&#x2F;papers&#x2F;mode-inference-draft-feb2024.pdf&quot;&gt;Oxidizing OCaml with Modal Memory Management&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;multicore-blog-post-a-deep-dive-into-multicore-ocaml-garbage-collector&#x2F;557&quot;&gt;OCaml Discuss - [Multicore] [Blog post] A deep dive into Multicore OCaml garbage collector&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>OS</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/os/"/>
        <id>https://dipeshkaphle.github.io/Learning/os/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/os/">&lt;h1 id=&quot;operating-systems&quot;&gt;Operating Systems&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;pages.cs.wisc.edu&#x2F;~remzi&#x2F;OSTEP&#x2F;&quot;&gt;OSTEP&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;pages.cs.wisc.edu&#x2F;~remzi&#x2F;OSTEP&#x2F;&quot;&gt;OS Notes(Topics coverage is nice and seems to have extra stuff not present in OSTEP)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;turing.une.edu.au&#x2F;~cosc330&#x2F;lectures&quot;&gt;Parallel And Distributed Computing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ocw.mit.edu&#x2F;courses&#x2F;6-828-operating-system-engineering-fall-2012&#x2F;pages&#x2F;lecture-notes-and-readings&#x2F;&quot;&gt;Operating Systems Engineering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;cs241.cs.illinois.edu&#x2F;coursebook&#x2F;index.html&quot;&gt;Systems Programming&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;csapp.cs.cmu.edu&#x2F;3e&#x2F;students.html&quot;&gt;Computer Systems A Programmers Perspective&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;beej.us&#x2F;guide&#x2F;bgipc&#x2F;&quot;&gt;Beej IPC&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.tartanllama.xyz&#x2F;writing-a-linux-debugger-setup&#x2F;&quot;&gt;Writing A Linux Debugger&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;mirrors.edge.kernel.org&#x2F;pub&#x2F;linux&#x2F;kernel&#x2F;people&#x2F;paulmck&#x2F;perfbook&#x2F;perfbook.html&quot;&gt;Is Parallel Programming Hard, And, If So, What Can You Do About It?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;open.umn.edu&#x2F;opentextbooks&#x2F;textbooks&#x2F;83&quot;&gt;Little Book of Semaphores&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;linuxjourney.com&#x2F;&quot;&gt;Linux&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34533752&quot;&gt;How a CPU works: Bare metal C on my RISC-V toy CPU(HN Discussion link)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33299650&quot;&gt;Linux: What can you epoll? &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;axboe&#x2F;liburing&quot;&gt;liburing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33221063&quot;&gt;Efficient IO in linux with io_uring&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32918043&quot;&gt;LockFree Algorithms 2010&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;linux-kernel-labs.github.io&#x2F;refs&#x2F;heads&#x2F;master&#x2F;&quot;&gt;Linux Kernel exploration + theory sort of(I&#x27;m never going to see this but the effort seems insane on this)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;0xax.gitbooks.io&#x2F;linux-insides&#x2F;content&#x2F;Theory&#x2F;linux-theory-1.html&quot;&gt;linux-insides(again great effort, synchronization topics look good might see someday)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;some-cool-stuff&quot;&gt;Some Cool Stuff&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;deadlockempire.github.io&#x2F;?s=08&quot;&gt;The Deadlock Empire! Slay dragons, master concurrency!&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;git.kernel.org&#x2F;pub&#x2F;scm&#x2F;linux&#x2F;kernel&#x2F;git&#x2F;torvalds&#x2F;linux.git&#x2F;tree&#x2F;Documentation&#x2F;memory-barriers.txt?id=HEAD&amp;amp;s=08&quot;&gt;Some stuff on Memory barries from Linux Kernel Documentation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Programming Languages</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/pl/"/>
        <id>https://dipeshkaphle.github.io/Learning/pl/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/pl/">&lt;h1 id=&quot;programming-languages-compilers-interpreters&quot;&gt;Programming Languages&#x2F;Compilers&#x2F;Interpreters&lt;&#x2F;h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Heavily inspired from
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LesleyLai&#x2F;learning&#x2F;blob&#x2F;main&#x2F;pl.md&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;theory&quot;&gt;Theory&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ocw.mit.edu&#x2F;courses&#x2F;mathematics&#x2F;18-404j-theory-of-computation-fall-2020&#x2F;&quot;&gt;Theory of Computation by Michael Sipser&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;mitpress.mit.edu&#x2F;books&#x2F;types-and-programming-languages&quot;&gt;Types and Programming Languages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.pls-lab.org&#x2F;en&#x2F;Classic_Papers_in_PL&quot;&gt;Classical Papers in PL, recommendations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shining1984&#x2F;PL-Compiler-Resource&quot;&gt;PL-Compilers-Resources&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;pvk.ca&#x2F;Blog&#x2F;2013&#x2F;09&#x2F;19&#x2F;all-you-need-is-call-slash-cc&#x2F;&quot;&gt;All you need is call&#x2F;cc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;docs.racket-lang.org&#x2F;reference&#x2F;eval-model.html&quot;&gt;Racket evaluation model(has a bit of stuff on continuation)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;docs.racket-lang.org&#x2F;reference&#x2F;cont.html&quot;&gt;Racket continuations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;type-systems-memory-safety&quot;&gt;Type System for Memory Safety(another banger by borretti)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;imteekay&#x2F;programming-language-research&quot;&gt;Programming Languages Research (many papers and links consolidated here)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cohost.org&#x2F;prophet&#x2F;post&#x2F;2248211-how-to-read-inferenc&quot;&gt;How to read inference rules&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cohost.org&#x2F;prophet&#x2F;post&#x2F;3031893-it-doesn-t-actually?s=08&quot;&gt;How to implement effect handlers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;langdev.stackexchange.com&#x2F;questions&#x2F;2692&#x2F;how-should-i-read-type-system-notation&#x2F;2693#2693&quot;&gt;How should I read type system notation?(by lexilambda)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;archive.nptel.ac.in&#x2F;courses&#x2F;128&#x2F;106&#x2F;128106018&#x2F;&quot;&gt;ACM India summer School on PL and optimizations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;archive.nptel.ac.in&#x2F;courses&#x2F;128&#x2F;106&#x2F;128106013&#x2F;&quot;&gt;ACM India Summer School on Programming Languages(Thing of more interest is Program Semantics lectures(done in F*))&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;nptel.ac.in&#x2F;courses&#x2F;128106009&quot;&gt;ACM Summer School on Compiler Design and construction(uses some llvm)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;www.cs.nott.ac.uk&#x2F;~pszgmh&#x2F;123.pdf&quot;&gt;PL Semantics by Graham Hutton&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ryanbrewer.dev&#x2F;posts&#x2F;getting-started-category-theory&#x2F;&quot;&gt;Getting Started with Category Theory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nuprl&#x2F;10PL&quot;&gt;NUPRL - 10 papers that all PhD students in programming languages ought to know, for some value of 10&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;langdev.stackexchange.com&#x2F;questions&#x2F;3372&#x2F;what-does-it-mean-for-a-type-system-or-language-to-be-sound&#x2F;3377#3377&quot;&gt;What does it mean for a type system or language to be &quot;sound&quot;?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;williamjbowman.com&#x2F;tmp&#x2F;nbe-four-ways&#x2F;&quot;&gt;Normalization by Evaluation Four Ways: Reconstructing NbE Designs from First Principles&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;lean4&#x2F;doc&#x2F;examples&#x2F;phoas.lean.html&quot;&gt;Parametric Higher-Order Abstract Syntax&lt;&#x2F;a&gt; , &lt;a href=&quot;http:&#x2F;&#x2F;adam.chlipala.net&#x2F;cpdt&#x2F;html&#x2F;Hoas.html&quot;&gt;HOAS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cstheory.stackexchange.com&#x2F;questions&#x2F;52149&#x2F;the-precise-definition-of-normalization-by-evaluation&quot;&gt;The precise definition of Normalization By Evaluation?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;emmanueljs1.github.io&#x2F;nbe&#x2F;NbE.html&quot;&gt;Normalization by Evaluation, Agda&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;era.ed.ac.uk&#x2F;bitstream&#x2F;handle&#x2F;1842&#x2F;778&#x2F;lindley_thesis.pdf?sequence=1&amp;amp;isAllowed=y&quot;&gt;Normalisation by Evaluation in the
Compilation of Typed Functional
Programming Languages - Sam Lindley Thesis&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;leanprover-community.github.io&#x2F;archive&#x2F;stream&#x2F;113488-general&#x2F;topic&#x2F;subject.20reduction.html&quot;&gt;Zulip Chat Archive - Subject Reduction&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;leanprover-community.github.io&#x2F;archive&#x2F;stream&#x2F;113488-general&#x2F;topic&#x2F;What.20is.20the.20subject.20reduction.20debate.3F.html&quot;&gt;Zulip Chat Archive - What is the subject reduction debate?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;pixel-druid.com&#x2F;articles&#x2F;subject-reduction-in-lean.html&quot;&gt;Subject reduction in Lean&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;proofassistants.stackexchange.com&#x2F;questions&#x2F;1183&#x2F;how-much-of-trouble-is-leans-failure-of-normalization-given-that-logical-consi&quot;&gt;How much of trouble is Lean&#x27;s failure of normalization, given that logical consistency is not obviously broken?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;www.craftinginterpreters.com&#x2F;&quot;&gt;Crafting Interpreter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;scheme2006.cs.uchicago.edu&#x2F;11-ghuloum.pdf&quot;&gt;An Incremental Approach to Compiler Construction&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gpfault.net&#x2F;posts&#x2F;asm-tut-3.txt.html?s=08&quot;&gt;Let&#x27;s Learn X86-64 Assembly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;compiler-architecture&quot;&gt;Compiler Architecture&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;courses&#x2F;cs6120&#x2F;2020fa&#x2F;self-guided&#x2F;&quot;&gt;How the TypeScript Compiler Compiles - understanding the compiler internal&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;wSdV1M7n4gQ&quot;&gt;Anders Hejlsberg on Modern Compiler Construction&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;aosabook.org&#x2F;en&#x2F;llvm.html&quot;&gt;AOSA book: LLVM&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;parsing&quot;&gt;Parsing&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;matklad.github.io&#x2F;2020&#x2F;04&#x2F;13&#x2F;simple-but-powerful-pratt-parsing.html&quot;&gt;Simple but Powerful Pratt Parsing&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jit&quot;&gt;JIT&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;eli.thegreenplace.net&#x2F;2017&#x2F;adventures-in-jit-compilation-part-1-an-interpreter&#x2F;&quot;&gt;Adventures in JIT Compilation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chrisseaton&#x2F;rhizome&quot;&gt;Rhizome - a JIT for Ruby, implemented in pure Ruby&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kipp.ly&#x2F;&quot;&gt;Kipply&#x27;s blog(lots of content relating to JIT)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;functional-languages&quot;&gt;Functional Languages&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;research&#x2F;wp-content&#x2F;uploads&#x2F;1987&#x2F;01&#x2F;slpj-book-1987-small.pdf&quot;&gt;The Implementation of Functional Programming Languages&lt;&#x2F;a&gt; -
by Simon Peyton Jones&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;danieljharvey.github.io&#x2F;posts&#x2F;2023-02-08-llvm-compiler-part-1.html&quot;&gt;Compiling Functional Languages to LLVM, a series(Lots of other cool articles as well in blog about typeclasses)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gc&quot;&gt;GC&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;journal.stuffwithstuff.com&#x2F;2013&#x2F;12&#x2F;08&#x2F;babys-first-garbage-collector&#x2F;&quot;&gt;Baby&#x27;s First Garbage Collector&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gchandbook.org&#x2F;&quot;&gt;The Garbage Collection Handbook&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34350260&quot;&gt;Oilshell &quot;Pictures of a working garbage collector&quot;(Goldmine for garbage collector stuff, see the whole blog)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Modern Garbage Collection(HN Discussion)
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13218550&quot;&gt;Part 1&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21770530&quot;&gt;Part 2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35023833&quot;&gt;Boehm-Demers-Weiser Garbage Collector(Has papers linked in the GitHub repo)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;webkit.org&#x2F;blog&#x2F;12967&#x2F;understanding-gc-in-jsc-from-scratch&#x2F;&quot;&gt;Understanding GC in JSC From Scratch&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;webkit.org&#x2F;blog&#x2F;7122&#x2F;introducing-riptide-webkits-retreating-wavefront-concurrent-garbage-collector&#x2F;&quot;&gt;Riptide,Webkit&#x27;s GC&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v8.dev&#x2F;blog&#x2F;high-performance-cpp-gc&quot;&gt;High Performance GC for C++&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1mF-IW2UDwFslAREeapnP8bgXAlLG_DScOVhuTo34gBQ&#x2F;edit#heading=h.ft3eufkln61m&quot;&gt;Precise Stack Scanning in C++&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;mrnugget&#x2F;1fe234da53f436a16029a0fcd014201d&quot;&gt;GC Resources, Thorsten Ball&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;wingolog.org&#x2F;archives&#x2F;2023&#x2F;02&#x2F;07&#x2F;whippet-towards-a-new-local-maximum&quot;&gt;Whippet, towards a new local maximum(more posts about GC present in the site)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;abs&#x2F;10.1145&#x2F;3538532&quot;&gt;Deep Dive into ZGC, a modern garbage collector&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.gingerbill.org&#x2F;series&#x2F;memory-allocation-strategies&#x2F;&quot;&gt;Memory Allocation Strategies&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20220107060536&#x2F;http:&#x2F;&#x2F;wiki.luajit.org&#x2F;New-Garbage-Collector&quot;&gt;LuaJIT quad color GC&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;compiler-optimizations&quot;&gt;Compiler Optimizations&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;courses&#x2F;cs6120&#x2F;2020fa&#x2F;self-guided&#x2F;&quot;&gt;CS 6120: Advanced Compilers: The Self-Guided Online Course&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;educational-projects&quot;&gt;Educational Projects&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rui314&#x2F;chibicc&quot;&gt;chibcc by Rui Ueyama &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;pyrmyn&#x2F;i_made_multi_language_programmable&quot;&gt;Multi-Language Programmable Linter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uber&#x2F;NEAL&quot;&gt;NEAL(Language agnostic code analysis tool)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ast-grep&#x2F;ast-grep&quot;&gt;AST Grep tool&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;comby-tools&#x2F;comby&quot;&gt;Comby, Tool for searching and changing code structure&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;JMZLBB_BFNg&quot;&gt;Parser Parser Combinators(Talk about Comby)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;thunderseethe.dev&#x2F;series&#x2F;making-a-language&#x2F;&quot;&gt;Making a Language(information about typechecker, looks good)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kristerw.github.io&#x2F;2022&#x2F;09&#x2F;13&#x2F;translation-validation&#x2F;&quot;&gt;GCC Translation Validation(uses smt with gcc)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FStarLang&#x2F;FStar&#x2F;wiki&quot;&gt;Not exactly educational, but FStar wiki seems very comprehensive(I want to read all of this sooo badly)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lexi-lambda&#x2F;hackett&quot;&gt;Hackett by lexilambda&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kit-ty-kate&#x2F;labrys&quot;&gt;labrys&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;banach-space&#x2F;llvm-tutor&quot;&gt;llvm-tutor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aripiprazole&#x2F;lura&quot;&gt;lura(IDE focused programming language study)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aripiprazole&#x2F;soft&quot;&gt;Soft(Lisp that compiles to LLVM)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;WebAssembly&#x2F;spec&#x2F;tree&#x2F;main&#x2F;interpreter&quot;&gt;Wasm reference interpreter in OCaml&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mukul-rathi&#x2F;bolt&quot;&gt;Mukul Rathi&#x27;s Bolt(has a series of blog posts explaining implementation)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carbon-language&#x2F;carbon-lang&#x2F;tree&#x2F;trunk&#x2F;docs&#x2F;design&quot;&gt;Carbon Design Documents&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;obi1kenobi&#x2F;trustfall&quot;&gt;Trustfall(super cool thing)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quchen&#x2F;articles&#x2F;blob&#x2F;master&#x2F;hindley-milner&#x2F;README.md&quot;&gt;Extensive tutorial of Hindley Milner&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;d3s.mff.cuni.cz&#x2F;teaching&#x2F;nprg077&#x2F;&quot;&gt;Write your own tiny programming system(s) (Hindley-Milner, OOP, Prolog,etc implementation)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomprimozic&#x2F;type-systems&quot;&gt;Type systems in ocaml&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;virtual-machine&quot;&gt;Virtual Machine&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;OjaAToVkoTw&quot;&gt;How to Build a Virtual Machine&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Small VMs and coroutines
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34420959&quot;&gt;HN&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;jrp9gv&#x2F;small_vms_coroutines&quot;&gt;Lobsters&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Faster Virtual Machines
&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;cczkdj&#x2F;faster_virtual_machines_speeding_up&quot;&gt;Lobsters&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34213715&quot;&gt;Interesting things about the Lua Interpreter(HN post link)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;rust-hosted-langs.github.io&#x2F;book&#x2F;introduction.html&quot;&gt;Writing Interpreters in Rust&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;misc-compilers&quot;&gt;Misc Compilers&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;cfallin.org&#x2F;&quot;&gt;Cranelift Stuff(Reg Alloc, Instruction Selector etc, a series of blogs)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34760828&quot;&gt;Let&#x27;s write a setjmp(HN Discussion)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;borretti.me&#x2F;article&#x2F;design-austral-compiler&quot;&gt;Design of Austral Compiler(See other articles as well to see more about typechecker)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;t4ifza&#x2F;what_austral_proves&quot;&gt;What Austral Proves(Lobsters discussion and link)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;graphitemaster.github.io&#x2F;fibers&#x2F;&quot;&gt;Fibers, Oh My!&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;-K11rY57K7k&quot;&gt;Dmitry Vyukov — Go scheduler: Implementing language with lightweight concurrency&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lists.eatonphil.com&#x2F;compilers-and-interpreters.html&quot;&gt;Phil Eaton&#x27;s Favourite Compiler and Interpreter Resources&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;shipilev.net&#x2F;jvm&#x2F;anatomy-quarks&#x2F;&quot;&gt;JVM Internals by Aleksey Shipilev&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;pl-resources&#x2F;&quot;&gt;Max Bernstein(tekknolagi) pl resources&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;bernsteinbear.com&#x2F;blog&#x2F;lisp&#x2F;&quot;&gt;A lisp compiler and interpreter writing series by tekknolagi&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;matt.might.net&#x2F;articles&#x2F;cps-conversion&#x2F;&quot;&gt;How to compile with continutations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;www.oilshell.org&#x2F;blog&#x2F;2023&#x2F;06&#x2F;ysh-review.html&quot;&gt;Design roadmap about YSH(by oilshell guy)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zesterer&#x2F;tao&quot;&gt;Tao programming language(has so many cool features,see how they&#x27;re implemented)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;live&#x2F;0jI-AlWEwYI?feature=share&quot;&gt;Alexis King - “Effects for Less” @ ZuriHac 2020(content is just madd)&lt;&#x2F;a&gt;
,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ghc-proposals&#x2F;ghc-proposals&#x2F;pull&#x2F;313&quot;&gt;GHC proposal link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;intuitiveexplanations.com&#x2F;tech&#x2F;kalyn&quot;&gt;Blog for Kalyn(Compiled Typed Haskell like Lisp)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;TE48LsgVlIU&quot;&gt;Alexis King - &quot;Delimited Continuations, Demystified&quot;&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;DRFsodbxHQo&quot;&gt;same talk ZuriHac 2023&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.haskell.org&#x2F;ghc&#x2F;ghc&#x2F;-&#x2F;wikis&#x2F;reading-list&quot;&gt;GHC Reading List&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;f0rki&#x2F;mapping-high-level-constructs-to-llvm-ir&quot;&gt;Mapping High level constructs to LLVM IR&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;MattPD&#x2F;00573ee14bf85ccac6bed3c0678ddbef&quot;&gt;Program Analysis Resources(very comprehensive)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;discourse.llvm.org&#x2F;t&#x2F;new-learning-resource-for-clang-libraries-slide-deck-and-code-examples&#x2F;67604&quot;&gt;Learning Resources for Clang libraries&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;compileroptimizations.com&#x2F;index.html&quot;&gt;Compiler Optimizations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;overreacted.io&#x2F;algebraic-effects-for-the-rest-of-us&#x2F;&quot;&gt;Algebraic Effects for the Rest of Us&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;linkers&quot;&gt;Linkers&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rui314&#x2F;mold&quot;&gt;Mold(README has a lot of information)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.cloudflare.com&#x2F;how-to-execute-an-object-file-part-4&#x2F;&quot;&gt;How to execute an object file&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;courses-and-assignments&quot;&gt;Courses and Assignments&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.seas.upenn.edu&#x2F;~cis341&#x2F;current&#x2F;&quot;&gt;CIS 341 - Compilers(Has very nice assignments) &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;podcast.ucsd.edu&#x2F;watch&#x2F;wi18&#x2F;cse131_a00&#x2F;5&#x2F;screen&quot;&gt;CSE 131 - Compiler Construction(Haskell) &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ucsd-cse131-f19.github.io&#x2F;&quot;&gt;CSE 131 - Compiler Construction(Ocaml) &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ucsd-compilers-s23.github.io&#x2F;index.html#schedule&quot;&gt;CSE 131&#x2F;231- Compiler Construction(Rust)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.cmu.edu&#x2F;~janh&#x2F;courses&#x2F;411&#x2F;23&#x2F;&quot;&gt;CMU Compilers Course by Jan Hoffman&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;IUCompilerCourse&#x2F;Essentials-of-Compilation&quot;&gt;Essentials of Compilation Course and Book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;www.wolczko.com&#x2F;CS294&#x2F;&quot;&gt;Course on VMs and Managed Runtimes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ps-tuebingen-courses.github.io&#x2F;pl1-lecture-notes&#x2F;01-intro&#x2F;intro.html&quot;&gt;(Book)Design and semantics of PL, in Scala&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kcsrk.info&#x2F;cs6225_s21_iitm&#x2F;&quot;&gt;Programs and Proofs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PLre5AT9JnKShFK9l9HYzkZugkJSsXioFs&quot;&gt;Software Foundations(Course Cornell)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;softwarefoundations.cis.upenn.edu&#x2F;index.html&quot;&gt;Software Foundations Books&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www-sigbus-info.translate.goog&#x2F;compilerbook?_x_tr_sl=auto&amp;amp;_x_tr_tl=en&amp;amp;_x_tr_hl=en&quot;&gt;An introduction to creating a C compiler for those who want to know the lower layers(In Japanese, so have to translate)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;playlist?list=PL9sqUxos-K_dOV8k2q6JZN-u78BNJVhwd&quot;&gt;PL Class by Edward Z Yangz&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ezyang&#x2F;pl-class-public&quot;&gt;materials link( i think )&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pigworker&#x2F;CS410-18&#x2F;tree&#x2F;master?s=08&quot;&gt;Advanced Functional Programming(in Agda with videos)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www3.nd.edu&#x2F;~dchiang&#x2F;teaching&#x2F;pl&#x2F;2022&#x2F;index.html&quot;&gt;Programming languages(follows TAPL and content looks great)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;xavierleroy.org&#x2F;CdF&#x2F;2020-2021&#x2F;&quot;&gt;Xavier Leroy - Program logics: reasoning principles for high-assurance software&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;xavierleroy.org&#x2F;CdF&#x2F;2019-2020&#x2F;index.html&quot;&gt;Xavier Leroy - Mechanized semantics: when machines reason about their languages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;xavierleroy.org&#x2F;CdF&#x2F;2018-2019&#x2F;index.html&quot;&gt;Xavier Leroy - Programming = proving? The Curry-Howard correspondence today&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;xavierleroy.org&#x2F;CdF&#x2F;2023-2024&#x2F;index.html&quot;&gt;Xavier Leroy - Control structures&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;theorem-provers&quot;&gt;Theorem Provers&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;leanprover.github.io&#x2F;logic_and_proof&#x2F;index.html&quot;&gt;Logic and Proofs in Lean(3?)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;lean-lang.org&#x2F;theorem_proving_in_lean4&#x2F;&quot;&gt;Theorem Proving in Lean4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;leanprover-community.github.io&#x2F;mathematics_in_lean&#x2F;index.html&quot;&gt;Mathematics in Lean&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;hrmacbeth.github.io&#x2F;math2001&#x2F;&quot;&gt;Mechanics of Proofs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;coq.discourse.group&#x2F;t&#x2F;what-is-the-difference-between-gallina-and-ltac&#x2F;1184&quot;&gt;What is the difference between Gallina and Ltac?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;watersofoblivion&#x2F;9646164deb5c1901413d64ba9f2a49b9#file-tacticscheatsheet-md&quot;&gt;Coq &amp;lt;-&amp;gt; Lean4 Tactics Cheat Sheet&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;course.ccs.neu.edu&#x2F;cs2800sp23&#x2F;ref.html&quot;&gt;Lean Tactic Reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;course.ccs.neu.edu&#x2F;cs2800sp23&#x2F;index.html&quot;&gt;Logic and Computation Course, uses Lean 4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;digama0&#x2F;lean-type-theory&quot;&gt;Lean 3 Type theory&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ammkrn.github.io&#x2F;type_checking_in_lean4&#x2F;title_page.html&quot;&gt;Typechecking in Lean4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;digama0&#x2F;lean4lean&quot;&gt;Lean4Lean&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.mpi-sws.org&#x2F;FP&#x2F;semantics-course&#x2F;&quot;&gt;Semantics Course in Coq&#x2F;Rocq - Saarland University &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;iris-project.org&#x2F;pdfs&#x2F;2024-jacm-logical-type-soundness.pdf&quot;&gt;A Logical Approach to Type Soundness&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;logsem&#x2F;iris-tutorial?tab=readme-ov-file&quot;&gt;Iris Tutorial&lt;&#x2F;a&gt; , &lt;a href=&quot;https:&#x2F;&#x2F;iris-project.org&#x2F;tutorial-material.html&quot;&gt;Iris Lecture Notes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;fstar-lang.org&#x2F;papers&#x2F;pulsecore.pdf&quot;&gt;PulseCore: A Dependently Typed Stratified Separation Logic&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lean-forward&#x2F;logical_verification_2024&quot;&gt;Hitchhiker&#x27;s Guide to Logical Verification - Lean4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;some-cool-stuff-i-ve-found&quot;&gt;Some Cool stuff I&#x27;ve found&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brandonspark&#x2F;mulligan&quot;&gt;How does this work??? (Mulligan)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;AndrasKovacs&#x2F;fc9e20b0976b7e236b5899fde8f5c95d?s=08&quot;&gt;Garbage collection with zero cost at non-GC time&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.type-driven.org.uk&#x2F;edwinb&#x2F;why-is-idris-2-so-much-faster-than-idris-1.html?s=08&quot;&gt;Why is Idris 2 much faster than Idris 1?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;internals.rust-lang.org&#x2F;t&#x2F;making-more-out-of-traits&#x2F;5796&quot;&gt;Making more out of traits(Rust)&lt;&#x2F;a&gt;  and &lt;a href=&quot;https:&#x2F;&#x2F;internals.rust-lang.org&#x2F;c&#x2F;language-design&#x2F;21&quot;&gt;many other discussion about Rust language design&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;ProgrammingLanguages&#x2F;s&#x2F;uufTftvdLu&quot;&gt;New research programming languages thread Reddit&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;dependent-types&quot;&gt;Dependent Types&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.andres-loeh.de&#x2F;LambdaPi&#x2F;&quot;&gt;A tutorial implementation of a dependently typed lambda calculus (LambdaPi)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;discuss.ocaml.org&#x2F;t&#x2F;dependent-types-in-the-purest-form&#x2F;10547&#x2F;7&quot;&gt;OCaml Discuss - Dependent Types in the Purest Form&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;forums.swift.org&#x2F;t&#x2F;pitch-dependent-types-universes-stage-1-of-proof-driven-development&#x2F;63754&quot;&gt;Swift Discuss - [Pitch] Dependent Types &amp;amp; Universes (Stage 1 of Proof-Driven Development?)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ice1000.org&#x2F;dtt-dev&#x2F;assemble.html&quot;&gt;Dependent Theory of Types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;math.stackexchange.com&#x2F;questions&#x2F;3466976&#x2F;online-reference-book-for-implementing-concepts-in-type-theory&quot;&gt;Online reference book for &lt;em&gt;implementing&lt;&#x2F;em&gt; concepts in type theory, Answererd by Andras Kovacs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;automated-verification&quot;&gt;Automated Verification&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ece.uwaterloo.ca&#x2F;~agurfink&#x2F;ece750t29&#x2F;&quot;&gt;Automated Program Verification - Waterloo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kartiknagar.github.io&#x2F;courses&#x2F;apv&#x2F;lectures&#x2F;&quot;&gt;Automated Program Verification - Kartik Nagar&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;kmicinski.com&#x2F;cis700-f23&#x2F;&quot;&gt;Modern Symbolic AI and Automated Reasoning&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Learning Resources(README)</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/readme/"/>
        <id>https://dipeshkaphle.github.io/Learning/readme/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/readme/">&lt;h1 id=&quot;learning-resources&quot;&gt;Learning Resources&lt;&#x2F;h1&gt;
&lt;p&gt;A list of learning resources that I would like to refer back later or intent to
study.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;learning-resources-1&quot;&gt;Learning Resources&lt;&#x2F;h1&gt;
&lt;p&gt;A list of learning resources that I would like to refer back later or intent to
study.&lt;&#x2F;p&gt;
&lt;p&gt;Other great place to find Learning resources is&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LesleyLai&#x2F;learning&quot;&gt;Lesley Lai&#x27;s &lt;code&gt;learning&lt;&#x2F;code&gt; repository&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheNumbat&#x2F;Lists&quot;&gt;Max Slater(Works in jane street compiler backend team right out of undergrad from cmu, living my dream🥲) useful links&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;round-candle-7e1.notion.site&#x2F;Reading-List-178f7cce3f4146f68b24995766bfcb7a&quot;&gt;My Notion Reading List which I&#x27;m pretty sure I&#x27;ll actually never read&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Lots of useful and cool things &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prismlab&#x2F;docs&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;computer-science-and-software-engineering&quot;&gt;Computer Science and Software Engineering&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Languages&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dipeshkaphle.github.io&#x2F;Learning&#x2F;cpp&quot;&gt;C++&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dipeshkaphle.github.io&#x2F;Learning&#x2F;rust&quot;&gt;Rust&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dipeshkaphle.github.io&#x2F;Learning&#x2F;haskell&quot;&gt;Haskell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dipeshkaphle.github.io&#x2F;Learning&#x2F;misc-languages&quot;&gt;Other Languages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dipeshkaphle.github.io&#x2F;Learning&#x2F;os&quot;&gt; Operating Systems &lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dipeshkaphle.github.io&#x2F;Learning&#x2F;pl&quot;&gt; Programming Languages and Compilers&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dipeshkaphle.github.io&#x2F;Learning&#x2F;misc-cs&quot;&gt; Misc CS &lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Rust</title>
        <published>2001-03-25T00:00:00+00:00</published>
        <updated>2001-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://dipeshkaphle.github.io/Learning/rust/"/>
        <id>https://dipeshkaphle.github.io/Learning/rust/</id>
        
        <content type="html" xml:base="https://dipeshkaphle.github.io/Learning/rust/">&lt;h1 id=&quot;rust&quot;&gt;Rust&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;books&quot;&gt;Books&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;&quot;&gt;Rust Book (Haven&#x27;t fully read)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nomicon&#x2F;&quot;&gt;Nomicon&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;rust-unofficial.github.io&#x2F;too-many-lists&#x2F;index.html&quot;&gt;Learn Rust With Entirely Too Many Linked Lists&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;rustc-dev-guide.rust-lang.org&#x2F;index.html&quot;&gt;Rustc Dev Guide&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;marabos.nl&#x2F;atomics&#x2F;&quot;&gt;Rust Atomics and Locks&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;nostarch.com&#x2F;rust-rustaceans&quot;&gt;Rust for Rustaceans&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;nnethercote.github.io&#x2F;perf-book&#x2F;introduction.html&quot;&gt;The Rust Performance Book&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;danielkeep.github.io&#x2F;tlborm&#x2F;book&#x2F;index.html&quot;&gt;The little book of Rust Macros&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ibraheem.ca&#x2F;posts&#x2F;too-many-web-servers&#x2F;?s=08&quot;&gt;Learning async rust with entirely too many web servers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;videos&quot;&gt;Videos&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;reberhardt.com&#x2F;cs110l&#x2F;spring-2020&#x2F;&quot;&gt;CS 110L: Safety in Systems Programming&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;JonGjengset&#x2F;about&quot;&gt;John Gjengset&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;RyanLevicksVideos&quot;&gt;Ryan Levick&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;educational-repos&quot;&gt;Educational repos&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tokio-rs&#x2F;mini-redis&#x2F;&quot;&gt;mini-redis&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&#x2F;whorl&quot;&gt;Educational Executor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;skyzh&#x2F;type-exercise-in-rust&quot;&gt;Type exercise in Rust&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;blogs&quot;&gt;Blogs&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34537969&quot;&gt;HN Discussion on &quot;Thoughts on what a next Rust compiler would do&quot; by Alex Kladov&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33590308&quot;&gt;Rust and C++ Interoperability&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33504650&quot;&gt;Explain GATs like I&#x27;m 5 years old&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;blog.cloudflare.com&#x2F;pin-and-unpin-in-rust&#x2F;?s=08&quot;&gt;Pin, Unpin and why Rust needs them&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;tmandry.gitlab.io&#x2F;blog&#x2F;posts&#x2F;optimizing-await-1&#x2F;&quot;&gt;How Rust optimizes async&#x2F;await&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;en.ihcblog.com&#x2F;rust-runtime-design-1&#x2F;&quot;&gt;Rust Runtime Design and Implementation, series(https:&#x2F;&#x2F;github.com&#x2F;bytedance&#x2F;monoio)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;fasterthanli.me&#x2F;articles&#x2F;pin-and-suffering?s=08&quot;&gt;Pin and suffering&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;internals-and-design-architecture-docs-of-compiler&quot;&gt;Internals and Design&#x2F;Architecture docs of compiler&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;chalk&quot;&gt;Chalk(Chalk is a library that implements the Rust trait system, based on Prolog-ish logic rules.)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust-analyzer&#x2F;tree&#x2F;master&#x2F;docs&#x2F;dev&quot;&gt;Rust Analyzer Dev Docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;rustc-dev-guide.rust-lang.org&#x2F;index.html&quot;&gt;Rustc Dev Guide&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;salsa-rs.github.io&#x2F;salsa&#x2F;about_salsa.html&quot;&gt;Salsa documentations(used by rustc(ig cuz niko has videos on salsa) and rust-analyzer)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
